---
layout: post
title: Немного о разработке под Win8
date: Sun, 01 Apr 2012 18:58:00 +0000
comments: true
---

На прошлой неделе после твита [@shwars](https://twitter.com/#!/shwars)

{% img  http://2.bp.blogspot.com/-fcsTfHDMTjA/T3SnoafGoZI/AAAAAAAAALo/ZhzPLTUT1uA/s1600/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA.PNG %} 

под давлением совести было принято решение срочно сделать клиент для нашего проекта **Imagine Cup** для **Windows 8**. У меня уже был готов полностью работоспособный клиент под **Windows Phone**, так что это не должно было занять много времени. И действительно, суммарно я управился часов за 20. Под катом некоторые подробности о разработке в целом, использовании **Bing Map SDK** for Win8, **Remote debugging** и прочих моментах, с которыми я столкнулся.

<!--more--> 

## 0. Главная проблема

Главная проблема, с которой я столкнулся - отсутствие библиотек. Хоть **NuGet** и работает отлично с **VS11**, но нет библиотек, к которым я так привык (например, мой любимый REST-клиент **RestSharp**), так что пришлось писать собственную имплементацию. Но не всё так плохо: постепенно появляются сборки библиотек по .NET 4.5, например обновление** Json.NET** вышло за пару дней до написания моего приложения :)

**Основной совет:** будьте готовы к изобретению велосипедов.

## 1. Metro Grid Application

По-моему все люди, которые создают проект на основе **Metro Grid** больше времени тратят на попытку разобраться в верстке, нежели на написание кода. Что не удивительно: шаблон этот очень хорош, поддерживает всевозможные состояния (на весь экран, припаркованное и т.д.). Безусловно, это очень круто, но слишком сложно для восприятия. Но этот урок я прошел ещё на **Win8 **хакатоне, когда разрабатывал приложение для чтения газеты **Коммерсантъ**.

**Основной совет:** если вас поджимают сроки, то лучше создавайте пустой проект. Если же нет - обязательно разберитесь в шаблоне** Metro Grid Application**.

## 2. Bing Maps SDK для Windows 8

Контрол карт пока что не входит в стандартную поставку **Visual Studio 11**, так что нужно устанавливать его отдельно. Из этого следует огромный **FACEPALM**, но об этом в следующем пункте. Подробнее о работе с контролом вы можете прочитать в **[статье](http://habrahabr.ru/post/139681/) **Игоря Сычева, я же расскажу о том, через что мне пришлось пройти, чтобы приложение заработало.Первое это то, что контрол <map> не может быть контейнером. То есть пушпины нужно добавлять через **MapLayer**. Ладно, не велика беда, идем дальше. Если у вас на странице несколько контролов карты, то **MapLayer** начинает сходить с ума и перестает понимать, к какой карте относится.  Это уже меня довольно расстроило, на StackOverflow ответа не нашлось.Пришлось отказаться от этой концепции, продолжил дальше разработку. На странице деталей так же сделал карту, и теперь при переходе между страницами приложение начало падать. Причем не всегда, причину падения мне удалось диагностировать только в день выступления. На сколько я понял, если у вас на текущей карте не загрузился провайдер словаря карт (надпись **(с) 2010 NAVTEQ**) и вы перешли на другую страницу с картой - приложение падает. Опять же эта инфа не 100%, но другого объяснения я пока найти не смог.

**Основной совет:** не забывайте, что **Bing Maps SDK** для **WinRT **пока что в стадии Beta. 

## 3. Remote Debugging

В **Visual Studio 11**, как вы могли заметить, есть 3 вида отладки: на текущем устройстве, на симуляторе (**не путать с эмулятором!**) и на удаленной машине.  Поскольку планшет я получил вечером перед выступлением, очень не хотелось ставить на него студию (кстати вышел отдельный квест) и прочий софт. Я попробовал сделал **Install Package** на рабочем компьютере и задеплоить его на планшете. Этот план провалился, так как на планшете не было сертификата разработчика (о чем мне услужливо подсказала консолька с логом). Планом "Б" был как раз **Remote Debugging**, но и с ним всё вышло совсем не так, как хотелось бы.Для того, чтобы задеплоить проект из студии на удаленную машину (в дальнейшем "жертва"), нужно чтобы они находились в одной сети, что вполне логично и удобно. В **MSDN **есть подробная [**статья**](http://msdn.microsoft.com/en-us/library/bt727f1t(v=vs.110).aspx), описывающая как настроить оба устройства. При установке на жертву **Remote Debugger**, устанавливается и сертификат, который в будущем позволяет деплоить приложения, используя bat-файл.Я всё установил, настроил, компьютер практически сразу нашел жертву, я нажал кнопку **F5** и у меня на планшете появился **Splash Screen** моего приложения! Но счастье продолжалось не долго, кроме **Splash Screen** я так ничего и не увидел: приложение упало. Я немного поковырялся и понял, что проблема в отсутствии** Bing SDK** на жертве. Вспомнив обещание на каком-то из докладов по **Win8**, что все пакеты будут представлять из себя самодостаточные и независимые модули, я создал заново **Install Package** на компьютере, перекинул его на планшет и он отлично установился, найдя сертификат, установленный вместе с **Remote Debugger**.Но приложение снова ничего кроме **Splash Screen** мне не показало, поэтому я понял, что нужно ставить **Bing SDK** для **WinRT** на планшет.

**ОГРОМНОЕ СПАСИБО ЛЮДЯМ, КОТОРЫЕ СДЕЛАЛИ ЭТОТ SDK КАК РАСШИРЕНИЕ К СТУДИИ, А НЕ ОТДЕЛЬНЫЙ ИНСТАЛЛЯТОР!**

**Как вы поняли, время шло к утру, а мне нужно было ставить **Visual Studio 2011** на планшет...

**Основной совет:** **Remote Debugging** работает замечательно, но, боюсь, вам всё равно придется ставить студию на удаленную машину.

## 4. Установка Visual Studio 11

На планшет у меня студия встала попытки с 3 или 4, до этого **Windows 8** вываливалась в **BSOD**, что мне просто убило, так как на ноутбуке за месяц я так ни разу синий экран с грустным смайлом не увидел. Меня это довольно озадачило, но я вдруг заметил, что **BSOD **вылетает как только я касаюсь планшета. Собственно, виной всему оказался акселерометр/гироскоп. Если положение планшета не менять или заблокировать поворот экрана (не проверял, но вдруг поможет :) ), то студия устанавливается замечательно!

**Основной совет:**  Если ставите **VS 2011** на устройство с датчиками положения - лучше не шевелитесь :)

Несмотря на все проблемы, которые я нашел, разработка **WinRT **приложений мне очень понравилась. Думаю, разработчикам на **Windows Phone** не составит труда разобраться в нем и портировать свои приложения. Ну а вот что получилось у меня:

{% img  http://4.bp.blogspot.com/-vb_Xiyxt504/T3ik4-OKVXI/AAAAAAAAALw/2ikwC4DraoM/s640/newScreen.png %} 
