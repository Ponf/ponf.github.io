<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[blog.ponfius.com]]></title>
  <link href="http://Ponf.github.io/atom.xml" rel="self"/>
  <link href="http://Ponf.github.io/"/>
  <updated>2015-06-23T16:23:11+03:00</updated>
  <id>http://Ponf.github.io/</id>
  <author>
    <name><![CDATA[Filipp Panfilov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Почему я выбрал стартап]]></title>
    <link href="http://Ponf.github.io/blog/2015/06/why-startup/"/>
    <updated>2015-06-23T12:42:45+03:00</updated>
    <id>http://Ponf.github.io/blog/2015/06/why-startup</id>
    <content type="html"><![CDATA[<p>Вот и прошел первый месяц моей работы на новом месте &ndash; в небольшом стартапе <strong>babystep.tv</strong>, и я хочу поделиться тем, что произошло за это время. Но с начала &ndash; почему я решил уйти с насиженного места в большой корпорации.</p>

<p><img src="http://Ponf.github.io/images/office.jpg"></p>

<h2>Работа в большой компании</h2>

<p>Сразу после окончания университета мне удалось попасть на работу в Mail.Ru, в команду мобильной почты. К этой компании можно относиться по-разному, но чего нельзя отрицать, так этого того, что у Mail.Ru очень высокий уровень экспертизы.  За почти 3 года работы я застал два офиса (старый, с небольшими кабинетами, где было довольно тесно, и новый 27-этажный с огромными опенспейсами, старбаксом, и даже футбольным полем), получил просто невероятное количество опыта, а так же поменял свое направление с .NET платформы на iOS. И я с уверенностью могу сказать, что я работал в одной из самых сильных (если не самой сильной) команде iOS разработчиков в Москве. Вот основные плюсы работы в большой компании:</p>

<ul>
<li>Много возможностей для прокачивания себя в разных направлениях</li>
<li>Условия работы (ДМС-фрукты-тренажерный зал-свободная парковка)</li>
<li>Продукты, которыми пользуются миллионы людей ежедневно</li>
<li>Стабильность</li>
</ul>


<p>Вроде бы если все так круто, то почему же я ушел? Наверное основная причина в том, что в большой компании не чувствуется  своя причастность к результату, нет какого-то признания, ответственность за продукт сильно размазана. Ну и вторая причина &ndash; в большой компании очень сложно расти вверх, так как должностей не так много, а конкуренция очень высокая.</p>

<p>Для многих людей эти причины вряд ли имеют какое-то значение. Если человек хочет спокойно работать и не париться на счет завтрашнего дня, то большая компания &ndash; отличный выбор. Это было не самое простое решение, но взвесив все плюсы и минусы я понял, что пока я молодой, у меня нет детей и ипотеки, надо выйти из зоны комфорта и реализовать свои амбиции.</p>

<p>Но и помимо этого, у меня есть <strong>мечта</strong>: я хочу жить в месте, где растут пальмы. Как вы понимаете, Москва не очень попадает под это требование :)</p>

<h2>Работа в стартапе</h2>

<h3>Первый день</h3>

<p>Конечно, после большой компании с фантастическим офисом у меня был шок. Он начался с самого утра, когда я пытался найти парковку, продолжился днем, когда я на кресле с колесиками привычным движением оттолкнулся от стола чтобы отъехать от него, а он внезапно улетел в другой конец комнаты, ну и завершился в 8 вечера, когда я понял, что кроме меня в офисе уже никого нет.</p>

<h3>Первая командировка</h3>

<p>Следующий шок был ровно через неделю, когда с утра CTO спросил, есть ли у меня открытая виза в США (она, к счастью, была), и что на следующий день мы утром вылетаем в Сан-Диего чтобы устроить там хакатон и подготовиться к софт-лончу. Сама поездка прошла очень круто, работали по 12-14 часов 7 дней в неделю, успевая утром поиграть в баскетбол, днем искупаться в океане, а вечером &ndash; поотмокать в джакузи.  Единственное, что расстраивало &ndash; мысль, что скоро придется расстаться с моим белым мустангом с опускающейся крышей и вернуться в московские пробки и метро.</p>

<p><img src="http://Ponf.github.io/images/mustang.jpg"></p>

<h3>Первый релиз</h3>

<blockquote><p>&#8220;My dear, here we must run as fast as we can, just to stay in place. And if you wish to go anywhere you must run twice as fast as that.&#8221;</p><footer><strong>Lewis Carroll</strong> <cite>Alice in Wonderland</cite></footer></blockquote>


<p>Для стартапа очень важна скорость. Вообще она всегда важна, но в большой компании из-за сложности процессов скорость очень сильно падает. В стартапе получить нужный софт или новый макбук можно за несколько часов, в Mail.Ru это иногда занимало месяцы.</p>

<p>Чтобы лучше понять, вот несколько ключевых моментов за первый месяц работы:</p>

<ul>
<li>26 мая я вышел на работу</li>
<li>3 июня я уже был в Сан-Диего</li>
<li>5 июня выдал первую бета-версию нашего iOS приложения</li>
<li>15 июня babystep.tv 1.0 отправилась на ревью в AppStore</li>
</ul>


<p><img src="http://Ponf.github.io/images/startup.jpg"></p>

<p>Итого 3 недели для создания первой версии приложения с нуля. Конечно первая версия получилась довольно сырой, я успел сделать не все, что хотел, но больше, чем мы планировали на первый релиз. Изначально моя оценка была 3 месяца,  но мы справились за 3 недели. <del>3 недели, Карл!!!</del></p>

<h2>Вместо заключения</h2>

<p>Многие наверное слышали крылатое выражение, что если человек найдет работу мечты, то ему больше ни одного дня не придется работать. Если в Mail.Ru я с первого дня понимал, что это не работа моей мечты, а скорее способ круто прокачать свои навыки, то babystep.tv &ndash; с большой долей вероятности как раз работа мечты для меня.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apps в жизни]]></title>
    <link href="http://Ponf.github.io/blog/2014/04/apps-v-zhizni/"/>
    <updated>2014-04-10T22:42:17+04:00</updated>
    <id>http://Ponf.github.io/blog/2014/04/apps-v-zhizni</id>
    <content type="html"><![CDATA[<h2>Flashback</h2>

<p>Первый мой собственный сотовый телефон появился у меня году этак в 2003 и это был Siemens M55. Прекрасно помню, как я ходил по радио-рынкам, искал подходящие data-кабели для того, чтобы загрузить на него какие-нибудь простенькие java игры. Да, в те времена платформеры типа принца Персии были, пожалуй, пределом мечтаний.</p>

<p>С тех времен у меня сменилось множество гаджетов, и практически все они были либо смартфонами, либо коммуникаторами. Были одни из первых смартфонов Nokia &ndash; NGage QD, девайсы на Windows Mobile &ndash; Eten G500, и, наверное, мой самый любимый девайс &ndash; Nokia N82. Затем с Symbian я перешел на Android, а потом, быстро поняв, что это не моё, перешел на только появившийся Windows Phone. Ну и последний год я пользуюсь iPhone, и только теперь я понимаю, что телефон это не только звонилка+чатики+игры, а действительно незаменимый девайс в повседневной жизни.</p>

<!--more-->


<h2>Мобильные приложения</h2>

<p>Если посмотреть на мобильные приложения, то еще несколько лет назад они делились на 2 группы:</p>

<ul>
<li>бизнес-приложения (начиная почтой и заканчивая проприетарными приложениями, который использовались in-house)</li>
<li>убийцы времени (всевозможные мессенджеры и игры)</li>
</ul>


<p>То есть реально приложений, которые бы упрощали людям жизнь, практически не было.</p>

<p>Сейчас же появляется множество приложений для образования, работы (в том числе и узкоспециализированные), а самое главное &ndash; приложения для повседневной жизни. Я не буду писать про твиттеры и инстаграммы, это и так понятно :) Эти приложения можно смело отнести ко второй категории &ndash; убийцы времени. Намного интереснее посмотреть приложения, которые качественно улучшают жизнь. Например, сейчас когда я собираюсь в путешествие, я всегда скачиваю различные путеводители (Афиша Мир &ndash; один из любимых), схемы метро и прочие информационные приложения к себе на телефон и активно ими пользуюсь, не говоря о Google Maps. Я всегда смотрю по отзывам куда стоит сходить, а на что можно не тратить время, а придя в незнакомый ресторан/бар/кафе смотрю на Foursquare кто что из меню рекомендует.</p>

<p>Не так давно я воспользовался MNP и перешел с Мегафона на Билайн. Не могу сказать, что Билайн оправдал все мои надежды, но и речь сейчас не об этом. Речь о мобильном приложении Билайна для iOS. Будучи на Мегафоне, меня просто поразило, что мобильный оператор не может ни сделать нормальное приложение для телефона, ни сделать адаптивный дизайн сайта, который можно будет нормально смотреть с телефона. Получается какой-то сапожник без сапог. А приложение Билайна, напротив, меня очень приятно удивило, и теперь всё, что у Мегафона приходилось делать либо через веб (Сервис-Гид), либо отправляя старые-добрые SMS для управления услугами, я делаю в несколько касаний на телефоне. Единственное, что не очень нравится &ndash; детализацию нужно заказывать отдельно (хотя тоже через приложение), и она приходит на почту. В остальном к приложению никаких нареканий.</p>

<p>Или, например, интернет- и мобильный банкинг. Уже несколько лет являюсь клиентом Райффайзена, и единственное полезное что умеет их приложение &ndash; поиск ближайших банкоматов. Недавно я получил карточку Рокетбанка, где вообще вся работа с банком осуществляется через мобильное приложение, и это просто прекрасно. Не нужно ездить никуда в офис, не нужно висеть на линии у службы поддержки, слушиая какую-то унылую музыку, ожидая свободного оператора. Кроме это, у рокетбанка еще много и других, не менее интересных плюшек, но все плюсы и минусы я распишу через пару месяцев, когда пройдет начальный восторг, и найдется хотя бы один косяк :)</p>

<p>Также сейчас обретает моду целый зоопарк носимых девайсов &ndash; всевозможные умные часы, трекеры физической активности, и так далее. Несколько месяцев я пользовался Jawbone Up, затем он приказал долго жить. Но я не могу сказать, что эти гаджеты как-то сильно влияют на качество жизни &ndash; пока что это больше похоже на игрушки.</p>

<p>А какими приложениями пользуетесь вы?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Кросс-платформенная разработка для Windows Phone и Windows 8]]></title>
    <link href="http://Ponf.github.io/blog/2014/02/cross-platformennaya-razrabotka-dlya-windows-phone-i-windows-8/"/>
    <updated>2014-02-01T00:50:11+04:00</updated>
    <id>http://Ponf.github.io/blog/2014/02/cross-platformennaya-razrabotka-dlya-windows-phone-i-windows-8</id>
    <content type="html"><![CDATA[<h2>Зачем переносить код, если и так все работает?</h2>

<p>Создавая любое приложение, разработчик, конечно же, хочет получить максимальную прибыль, и один из способов достижения этой цели &ndash;  покрыть как можно большую аудиторию: для этого приложения локализуются, устраиваются рекламные кампании, и, конечно, переносятся на разные платформы. Существуют различные фреймворки для создания кроссплатформенных приложений, например, PhoneGap, приложения для которого разрабатываются на HTML5, или Xamarin – среда разработки приложений для iOS, Android, Windows Phone и Win8 на C#.</p>

<p>В рамках этой статьи мы рассмотрим, какие возможности для создания приложений с общим исходным кодом нам предлагает Microsoft.</p>

<!--more-->


<h2>Проблема: как минимизировать усилия при написании приложения на все платформы?</h2>

<p>Исторически сложилось так, что Windows Phone 7 появился рынке раньше, чем Windows 8, и в его основу лег тот же Windows CE, что был в Windows Mobile. Не обладаю инфромацией почему, но Microsoft закрыли возможность сторонним разработчикам писать Native приложения, но зато появилась возможность писать приложения на Silverlight, адаптированном для мобильных устройств, и разрабатывать игры на XNA. Windows Phone 7.5, помимо различных полезнейших вещей вроде фоновых агентов, принесла возможность разрабатывать приложения, совмещая технологии Silverlight и XNA.</p>

<p>Далее практически вместе с Windows 8 вышла новая версия мобильной операционной системы &ndash; Windows Phone 8. Основное отличие новой операционной системы – отказ от старого ядра Windows CE и переезд на то же ядро, что и в настольной операционной системе: Windows NT. Эти изменения конечно же затронули разработчиков, и теперь у нас появилась возможность разрабатывать приложения для Windows Phone еще и на C/C++.</p>

<p>Таким образом, перед разработчиками встал вопрос: как с минимальными усилиями поддерживать разработку приложения под Windows Phone и Windows 8?</p>

<h2>1. Использование PCL (Portable Class Library)</h2>

<p>Концепция PCL заключается в том, что по-большому счету, у обеих платформ (Windows Phone и Windows 8) пересекаются много пространств имен и они имеют много общих типов. Если ваш код, и библиотеки, которые в нем используются, используют только это подмножество .NET Framework, вы можете создать PCL, а потом прилинковать её к Windows Phone и Windows 8 проектам.</p>

<p>Когда вы выносите общий код в PCL, то можете заметить некоторые ограничения, в зависимости от платформ, которые вы выберите. Например, если вы хотите использовать механизм Tasks, который включает в себя поддержку ключевых слов async/await, то вашу библиотеку невозможно будет подключить к проекту для Windows Phone 7 приложений, т.к. в нем поддержка тасков отсутствует. Решается это с помощью установки Microsoft.Bcl.Async из NuGet.</p>

<p>Следующие 3 способа заключаются в том, что одни и те же файлы добавляются в проект для Windows Phone и Windows 8, разделяя функционал, недоступный на обеих платформах. Эти способы не являются взаимоисключающими, таким образом, их можно использовать совместно в одном проекте для тех или иных сценариев.</p>

<h2>2. Использование директив компилятора</h2>

<p>Первое – использование директив компилятора для скрытия участков кода, в зависимости от платформы, под которую компилируется приложение. По-умолчанию Windows Phone приложения определяются как WINDOWS_PHONE, и Windows 8 приложения, соответственно, как NETFX_CORE. Например, этот код подключает разные пространства имен в зависимости от платформы, под которую собираются приложения:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="cp">#if NETFX_CORE</span>
</span><span class='line'><span class="k">using</span> <span class="nn">Windows.UI.Xaml.Media.Imaging</span><span class="p">;</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Windows.Media.Imaging</span><span class="p">;</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>Данный способ является наиболее простым в реализации, но код быстро становится неподдерживаемым, особенно если такой подход используется для больших кусков кода. Очень сложно определить, какой код является платформо-специфичным, а какой &ndash; общим.</p>

<h2>3. Использование наследования</h2>

<p>Одна из возможностей проще отделять платформо-зависимый код от платформо-независимого – использование наследования. Таким образом, общий код будет помещаться в базовый класс, а платформо-зависимый код – в классы-наследники.</p>

<p>В классы наследники будет попадать код по двум причинам: первое, если какая-то функциональность доступна только на одной платформе (например, отправка SMS). Второе – если какая-то функциональность должна быть по-разному устроена для разных платформ (например – API для работы с файлами). Такой код помещается также в подкласс, как в этом примере:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">abstract</span> <span class="k">class</span> <span class="nc">MainPageViewModel</span> <span class="p">:</span> <span class="n">NotifyBase</span><span class="p">,</span> <span class="n">IViewModel</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">abstract</span> <span class="k">void</span> <span class="nf">DisplayPicture</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">WinMainPageViewModel</span> <span class="p">:</span> <span class="n">MainPageViewModel</span><span class="p">,</span>
</span><span class='line'>  <span class="n">ISupportsDesignTimeDataViaCode</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">DisplayPicture</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Имплементация отображения изображения</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>4. Partial классы и методы</h2>

<p>Как альтернатива использованию наследования – использование Partial классов и методов. Partial классы изначально использовались для того, чтобы разработчики могли расширять функционал автоматически сгенерированных классов. Перегружая методы в отдельном partial классе, разработчик мог не бояться, что его работа исчезнет во время следующей генерации кода базового класса.</p>

<p>Такой же подход может быть использован для разделения общего кода, от платформозависимого. В данном примере, метод, находящийся в общем коде, вызывает метод находящийся в другом partial классе, который реализуется с учетом специфики платформы.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">DataSource</span> <span class="p">:</span> <span class="n">IDataSource</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">IFolder</span><span class="p">&gt;&gt;</span> <span class="n">RetrieveFolders</span><span class="p">(</span><span class="n">IFolder</span> <span class="n">root</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Other logic</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">folders</span> <span class="p">=</span> <span class="k">await</span> <span class="n">LoadFolders</span><span class="p">(</span><span class="n">root</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">// Other logic</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">folders</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">DataSource</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">IFolder</span><span class="p">&gt;&gt;</span> <span class="n">LoadFolders</span><span class="p">(</span><span class="n">IFolder</span> <span class="n">root</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">//logic</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Примерно этот же подход можно использовать и для методов, но он накладывает некоторые ограничения (например, методы могут возвращать только void).
Когда вы пытаетесь решить, каким из этих способов переиспользования кода воспользоваться, очень полезно смотреть на API, предоставленное платформами. Некоторые из них, такие как акселерометр, очень похожи, другие, например, работа с файлами, могут здорово различаться не только в рамках отличий Windows Phone от Windows 8, но и в рамках отличий Windows Phone 7.5 от Windows Phone 8.</p>

<p>Существует отличный инструмент для этого: XAML Dialect Comparer Tool, почитать о котором и скачать можно по ссылке:
<a href="http://xamldialects.codeplex.com/">http://xamldialects.codeplex.com/</a></p>

<h2>5. Создание общих компонентов Windows Runtime.</h2>

<p>Компоненты Windows Runtime – компоненты, которые можно использовать для расширения функциональности поддерживаемых платформой языков. Используя Windows Runtime, поддерживаемый в Windows Phone 8 и Windows 8, вы можете создавать компоненты на одном языке программирования, а вызывать их в той среде, в которой выполняется ваше приложение. Такие компоненты создаются с помощью шаблона Windows Runtime Component в Visual Studio. На выходе вы получаете файл  .winmd, который содержит также всю мета-информацию, необходимую чтобы этот компонент можно было внедрить в приложение, написанное на C#, C++, VB, JS.
Когда использовать Windows Runtime компоненты:</p>

<ul>
<li>Когда вам нужна производительность C++ : если ваше приложение совершает серьезные вычислительные операции, вам будет предпочтительнее писать код на C++ чтобы достичь максимальной производительности. Если ваше основное приложение, которое совершает эти рассчеты, написано на C# или VB, подключение такого компонента сделает ваше приложение значительно быстрее.</li>
<li>Возможность избежать ограничения языка: в целом, использование Windows Runtime компонентов – отличный способ расшарить общий код на все поддерживаемые платформы (например, которые не поддерживаются в PCL).</li>
<li>Использование Direct3D, Win32, COM API: Windows Phone 8 предоставляет native API для разработки «тяжелых» игр, прямого доступа к сети, или, например, к камере. Для использования этих API или managed кода вам необходимо написать обертку в виде Windows Runtime компонента, который будет реализовать нужный функционал.</li>
<li>Использование сторонних библиотек: еще недавно было весьма затруднительно использовать сторонние библиотеки, написанные на одном языке, при разработке приложения на другом. С использованием Windows Runtime вы можете взять стороннюю библиотеку, обернуть её в Windows Runtime компонент и вызывать её из Managed кода!</li>
</ul>


<h2>6. Переиспользование XAML</h2>

<p>Несмотря на похожий пользовательский интерфейс, одинаковый внешний вид и поведение многих контролов, бинарно XAML между Windows Phone и Windows 8 не совместим.</p>

<p>Пространства имен, префиксы и набор контролов также довольно здорово различаются, что не позволяет нам полностью переиспользовать XAML между приложениями под разные платформы.</p>

<p>И тем не менее, у разработчиков есть возможность создать UserControl, который можно будет использовать на обеих платформах.</p>

<h2>Что делать если есть приложение под одну платформу, и нужно написать под вторую?</h2>

<p>В этом случае я могу вам только пособолезновать ☺. А если серьезно, всё зависит от масштаба вашего приложения и заложенной в него архитектуры. Если приложение небольшое и при разработке использовался паттерн MVVM, то вынос общего кода не составит много проблем. Если же ваш проект уже здорово разросся: использует разные платформенные особенности и зависит от библиотек, которые есть только под одну из платформ, то перенос кода, если и возможен, будет осуществить значительно тяжелее.</p>

<p>Далее мы рассмотрим процесс создания приложения “с  нуля”, сразу заточенное под перенос кода между платформами, и реализующее различные особенности платформ.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Материалы к моему докладу на]]></title>
    <link href="http://Ponf.github.io/blog/2012/05/Materialy-k-moemu-dokladu-na-yamobile/"/>
    <updated>2012-05-16T16:10:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2012/05/Materialy-k-moemu-dokladu-na-yamobile</id>
    <content type="html"><![CDATA[<h2>Презентация:</h2>

<iframe src="http://www.slideshare.net/ponfius/slideshelf" width="615px" height="470px" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:none;" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe>


<p>Исходники: <a href="https://skydrive.live.com/redir.aspx?cid=a2567e038f37be43&amp;amp;resid=A2567E038F37BE43!1260&amp;amp;parid=A2567E038F37BE43!463">Примеры 1, 2 и 3</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Немного о разработке под Win8]]></title>
    <link href="http://Ponf.github.io/blog/2012/04/Nemnogo-o-razrabotke-pod-Win8/"/>
    <updated>2012-04-01T18:58:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2012/04/Nemnogo-o-razrabotke-pod-Win8</id>
    <content type="html"><![CDATA[<p>На прошлой неделе после твита <a href="https://twitter.com/#!/shwars">@shwars</a></p>

<p><img src="http://2.bp.blogspot.com/-fcsTfHDMTjA/T3SnoafGoZI/AAAAAAAAALo/ZhzPLTUT1uA/s1600/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA.PNG"></p>

<p>под давлением совести было принято решение срочно сделать клиент для нашего проекта <strong>Imagine Cup</strong> для <strong>Windows 8</strong>. У меня уже был готов полностью работоспособный клиент под <strong>Windows Phone</strong>, так что это не должно было занять много времени. И действительно, суммарно я управился часов за 20. Под катом некоторые подробности о разработке в целом, использовании <strong>Bing Map SDK</strong> for Win8, <strong>Remote debugging</strong> и прочих моментах, с которыми я столкнулся.</p>

<!--more-->


<p></p>

<h2>0. Главная проблема</h2>

<p>Главная проблема, с которой я столкнулся &ndash; отсутствие библиотек. Хоть <strong>NuGet</strong> и работает отлично с <strong>VS11</strong>, но нет библиотек, к которым я так привык (например, мой любимый REST-клиент <strong>RestSharp</strong>), так что пришлось писать собственную имплементацию. Но не всё так плохо: постепенно появляются сборки библиотек по .NET 4.5, например обновление<strong> Json.NET</strong> вышло за пару дней до написания моего приложения :)</p>

<p><strong>Основной совет:</strong> будьте готовы к изобретению велосипедов.</p>

<h2>1. Metro Grid Application</h2>

<p>По-моему все люди, которые создают проект на основе <strong>Metro Grid</strong> больше времени тратят на попытку разобраться в верстке, нежели на написание кода. Что не удивительно: шаблон этот очень хорош, поддерживает всевозможные состояния (на весь экран, припаркованное и т.д.). Безусловно, это очень круто, но слишком сложно для восприятия. Но этот урок я прошел ещё на <strong>Win8 </strong>хакатоне, когда разрабатывал приложение для чтения газеты <strong>Коммерсантъ</strong>.</p>

<p><strong>Основной совет:</strong> если вас поджимают сроки, то лучше создавайте пустой проект. Если же нет &ndash; обязательно разберитесь в шаблоне<strong> Metro Grid Application</strong>.</p>

<h2>2. Bing Maps SDK для Windows 8</h2>

<p>Контрол карт пока что не входит в стандартную поставку <strong>Visual Studio 11</strong>, так что нужно устанавливать его отдельно. Из этого следует огромный <strong>FACEPALM</strong>, но об этом в следующем пункте. Подробнее о работе с контролом вы можете прочитать в <strong><a href="http://habrahabr.ru/post/139681/">статье</a> </strong>Игоря Сычева, я же расскажу о том, через что мне пришлось пройти, чтобы приложение заработало.Первое это то, что контрол <map> не может быть контейнером. То есть пушпины нужно добавлять через <strong>MapLayer</strong>. Ладно, не велика беда, идем дальше. Если у вас на странице несколько контролов карты, то <strong>MapLayer</strong> начинает сходить с ума и перестает понимать, к какой карте относится.  Это уже меня довольно расстроило, на StackOverflow ответа не нашлось.Пришлось отказаться от этой концепции, продолжил дальше разработку. На странице деталей так же сделал карту, и теперь при переходе между страницами приложение начало падать. Причем не всегда, причину падения мне удалось диагностировать только в день выступления. На сколько я понял, если у вас на текущей карте не загрузился провайдер словаря карт (надпись <strong>(с) 2010 NAVTEQ</strong>) и вы перешли на другую страницу с картой &ndash; приложение падает. Опять же эта инфа не 100%, но другого объяснения я пока найти не смог.</p>

<p><strong>Основной совет:</strong> не забывайте, что <strong>Bing Maps SDK</strong> для <strong>WinRT </strong>пока что в стадии Beta.</p>

<h2>3. Remote Debugging</h2>

<p>В <strong>Visual Studio 11</strong>, как вы могли заметить, есть 3 вида отладки: на текущем устройстве, на симуляторе (<strong>не путать с эмулятором!</strong>) и на удаленной машине.  Поскольку планшет я получил вечером перед выступлением, очень не хотелось ставить на него студию (кстати вышел отдельный квест) и прочий софт. Я попробовал сделал <strong>Install Package</strong> на рабочем компьютере и задеплоить его на планшете. Этот план провалился, так как на планшете не было сертификата разработчика (о чем мне услужливо подсказала консолька с логом). Планом &ldquo;Б&rdquo; был как раз <strong>Remote Debugging</strong>, но и с ним всё вышло совсем не так, как хотелось бы.Для того, чтобы задеплоить проект из студии на удаленную машину (в дальнейшем &ldquo;жертва&rdquo;), нужно чтобы они находились в одной сети, что вполне логично и удобно. В <strong>MSDN </strong>есть подробная <a href="http://msdn.microsoft.com/en-us/library/bt727f1t(v=vs.110"><strong>статья</strong></a>.aspx), описывающая как настроить оба устройства. При установке на жертву <strong>Remote Debugger</strong>, устанавливается и сертификат, который в будущем позволяет деплоить приложения, используя bat-файл.Я всё установил, настроил, компьютер практически сразу нашел жертву, я нажал кнопку <strong>F5</strong> и у меня на планшете появился <strong>Splash Screen</strong> моего приложения! Но счастье продолжалось не долго, кроме <strong>Splash Screen</strong> я так ничего и не увидел: приложение упало. Я немного поковырялся и понял, что проблема в отсутствии<strong> Bing SDK</strong> на жертве. Вспомнив обещание на каком-то из докладов по <strong>Win8</strong>, что все пакеты будут представлять из себя самодостаточные и независимые модули, я создал заново <strong>Install Package</strong> на компьютере, перекинул его на планшет и он отлично установился, найдя сертификат, установленный вместе с <strong>Remote Debugger</strong>.Но приложение снова ничего кроме <strong>Splash Screen</strong> мне не показало, поэтому я понял, что нужно ставить <strong>Bing SDK</strong> для <strong>WinRT</strong> на планшет.</p>

<p><strong>ОГРОМНОЕ СПАСИБО ЛЮДЯМ, КОТОРЫЕ СДЕЛАЛИ ЭТОТ SDK КАК РАСШИРЕНИЕ К СТУДИИ, А НЕ ОТДЕЛЬНЫЙ ИНСТАЛЛЯТОР!</strong></p>

<p><strong>Как вы поняли, время шло к утру, а мне нужно было ставить </strong>Visual Studio 2011** на планшет&hellip;</p>

<p><strong>Основной совет:</strong> <strong>Remote Debugging</strong> работает замечательно, но, боюсь, вам всё равно придется ставить студию на удаленную машину.</p>

<h2>4. Установка Visual Studio 11</h2>

<p>На планшет у меня студия встала попытки с 3 или 4, до этого <strong>Windows 8</strong> вываливалась в <strong>BSOD</strong>, что мне просто убило, так как на ноутбуке за месяц я так ни разу синий экран с грустным смайлом не увидел. Меня это довольно озадачило, но я вдруг заметил, что <strong>BSOD </strong>вылетает как только я касаюсь планшета. Собственно, виной всему оказался акселерометр/гироскоп. Если положение планшета не менять или заблокировать поворот экрана (не проверял, но вдруг поможет :) ), то студия устанавливается замечательно!</p>

<p><strong>Основной совет:</strong>  Если ставите <strong>VS 2011</strong> на устройство с датчиками положения &ndash; лучше не шевелитесь :)</p>

<p>Несмотря на все проблемы, которые я нашел, разработка <strong>WinRT </strong>приложений мне очень понравилась. Думаю, разработчикам на <strong>Windows Phone</strong> не составит труда разобраться в нем и портировать свои приложения. Ну а вот что получилось у меня:</p>

<p><img src="http://4.bp.blogspot.com/-vb_Xiyxt504/T3ik4-OKVXI/AAAAAAAAALw/2ikwC4DraoM/s640/newScreen.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Краткий обзор Windows 8 Consumer Preview]]></title>
    <link href="http://Ponf.github.io/blog/2012/02/Kratkii-obzor-Windows-8-Consumer-Preview/"/>
    <updated>2012-02-29T19:41:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2012/02/Kratkii-obzor-Windows-8-Consumer-Preview</id>
    <content type="html"><![CDATA[<p>Как многие уже слышали, сегодня <strong>Microsoft</strong> на <strong>MWC</strong> представили <strong>Windows 8 Consumer Preview</strong>.</p>

<p>Вы можете скачать её совершенно бесплатно с сайта <strong>Microsoft</strong>: <a href="http://windows.microsoft.com/en-US/windows-8/iso">http://windows.microsoft.com/en-US/windows-8/iso</a></p>

<p><strong>Ключ</strong>: DNJXJ-7XBW8-2378T-X22TX-BKG7J</p>

<p>Для тех, у кого нет DVD-ROM, болванки или ещё чего-то, можно совершить установку с флешки с помощью этой утилиты: <a href="http://images2.store.microsoft.com/prod/clustera/framework/w7udt/1.0/en-us/Windows7-USB-DVD-tool.exe">http://images2.store.microsoft.com/prod/clustera/framework/w7udt/1.0/en-us/Windows7-USB-DVD-tool.exe</a>
Итак, первые ощущения.</p>

<!--more-->


<p></p>

<p><strong>Установка и запуск</strong>
У меня <strong>Windows 8</strong> ставилась примерно 15 минут (версия x64), с учетом ввода <strong>LiveID</strong> и прочего. Ставил я на соседний логический диск, рядом с <strong>Windows 7</strong>.
Первое, что бросилось в глаза &ndash; экран выбора операционной системы при загрузке. Я сначала не поверил своим глазам, но <strong>он стал красивым</strong>!
<img src="http://2.bp.blogspot.com/-A2H6JRGwjhM/T05zpyRRguI/AAAAAAAAAKc/QbRH1Sm4izg/s400/WP_000274.jpg"></p>

<p>Окно выбора системы</p>

<p>После входа в систему пользователь видит рабочий стол список установленных <strong>Metro</strong> приложений. А может и не только <strong>metro</strong>, т.к. у меня там появилась <strong>VS</strong> после установки.
<img src="http://3.bp.blogspot.com/-Bdjt1tMqG_c/T051kzrdUlI/AAAAAAAAAKk/L1JAqUeVcVE/s640/3.png"></p>

<p>Стартовый экран</p>

<p>Первым делом я поставил качаться <strong>VS11 Beta</strong> (не входит в комплект, в отличии от <strong>Developer Preview</strong>) и пошел смотреть на <strong>Windows Store</strong>. Могу сказать 2 вещи:</p>

<ul>
<li>Сделано довольно приятно, по аналогии с <strong>Windows Phone</strong>.</li>
<li><strong>Нужно писать программы! Срочно!</strong> В Store сейчас практически пусто и есть неплохой шанс подзаработать разработчикам.</li>
</ul>


<p>Хотя, конечно же, уже есть некоторые популярные программы. Например, Evernote:</p>

<p><img src="http://1.bp.blogspot.com/-ZlrxxyKPOQU/T053PcEYv2I/AAAAAAAAAKs/ljKOTNKbXsk/s640/180x150_O365_MidMarket_V2_Tryitfree_12_21_11.gif"></p>

<p>Или, известная игра <strong>Cut the Rope</strong> (подозреваю, что на HTML5 :) )</p>

<p><img src="http://3.bp.blogspot.com/-HLNSWxahcYI/T054EfLqNHI/AAAAAAAAAK0/LFL0bz0bYZg/s640/1.png"></p>

<p>Помимо интерфейса metro, в <strong>Win8</strong> присутствует и классический интерфейс. Если, конечно, классическим можно назвать интерфейс без кнопки &ldquo;<strong>Пуск</strong>&rdquo; :).</p>

<p><img src="http://3.bp.blogspot.com/-pP16kI_Zy2I/T055J1K8j_I/AAAAAAAAAK8/thn7qA2l6GI/s640/4.png"></p>

<p>Ну а <strong>Visual Studio 11</strong> встретила меня новым непривычным монохромным интерфейсом. Я ещё не смотрел разработку <strong>metro</strong> приложений, надеюсь, найдется время завтра.</p>

<p><img src="http://1.bp.blogspot.com/-CCvWnFcZXpM/T056rfsH7hI/AAAAAAAAALE/KuFR82Fbxv0/s640/5.png"></p>

<p>Из основных впечатлений:</p>

<ul>
<li>Смесь классического и metro интерфейсов смотрится пока что (после полутора часов использования) очень непривычно. Как отдельные сущности вроде бы уже стали привычны, но такая смесь пока что минимум непонятна. Например, долго искал кнопку выключения %).</li>
<li>Работает всё очень шустро, но не хватает тачскрина на ноутбуке. Без этого как-то теряется полнота ощущений от <strong>Metro</strong>, но выглядит всё равно очень круто.</li>
<li>Авторизация в системе по <strong>LiveID</strong> &ndash; авторизован на всех сервисах <strong>live.com</strong>. Довольно удобно.</li>
<li>Есть мнение, что новый дизайн <strong>Visual Studio</strong> ориентирован на дисплеи <strong>E-Ink</strong>))</li>
<li>Очень сложно найти привычные приложения вроде <strong>Paint</strong> и т.п. Нужно в боковой панели использовать поиск.</li>
</ul>


<p>Надеюсь найти ответы на все оставшиеся вопросы на <strong>Windows 8 Camp</strong>, проходящий в эту пятницу, 2 марта.
Если у вас нет возможности его посетить, присоединяйтесь к трансляции: <a href="http://www.microsoft.com/ru-ru/events/windows8camp/">http://www.microsoft.com/ru-ru/events/windows8camp/</a></p>

<p>P.S.: выключение находится на боковой панели во вкладке Settings (как связаны настройки с выключением??).</p>

<p>P.P.S.: Если будет планшет типа Asus Transformer с Win8 на борту и на нем будет запускаться студия &ndash; возьму безо всяких сомнений :).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Все о Splash Screen в Windows Phone]]></title>
    <link href="http://Ponf.github.io/blog/2012/02/Vse-o-Splash-Screen-v-Windows-Phone/"/>
    <updated>2012-02-25T09:17:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2012/02/Vse-o-Splash-Screen-v-Windows-Phone</id>
    <content type="html"><![CDATA[<p>Какое бы вы приложение не писали, даже самое простое, его запуск на телефоне будет занимать некоторое время, поэтому хорошей идеей будет показывать какой-нибудь Splash Screen во время загрузки. Существует несколько вариантов использования Splash Screen:</p>

<ul>
<li>Использовать изображение</li>
<li>Использовать анимированный Splash Screen</li>
<li>Не использовать Splash Screen</li>
</ul>


<p>Давайте поподробнее остановимся на каждом из этих пунктов.</p>

<!--more-->


<p></p>

<h3>Использование изображения </h3>

<p>При создании проекта в Visual Studio у вашего приложения уже есть Splash Screen по-умолчанию:</p>

<p><img src="http://1.bp.blogspot.com/-NPNjM2xI4Iw/T0nuhjRsEoI/AAAAAAAAAKM/Y6Eys9BCasA/s200/SplashScreenImage.jpg"></p>

<p>Для замены его на свой Splash Screen необходимо просто добавить в проект файл с именем SplashScreenImage.jpg (<strong>внимание</strong>: имя должно быть именно таким). Также у вашего Splash Screen  разрешение должно быть 480х800px (480 пикселей в ширину и 800, соответственно, в высоту), и не забудьте указать в свойствах изображения Build Action: Content.</p>

<h3>Использование анимированного Splash Screen</h3>

<p>Если загрузка первой страницы вашего приложения занимает некоторое время (например, используются какие-то данные из Интернета), то создание анимированного экрана загрузки – так же хорошая идея. Итак, алгоритм работы  будет следующий:</p>

<ul>
<li>При загрузке изображения показывается SplashScreenImage.jpg </li>
<li>После загрузки открывается <strong>MainPage</strong> с открытым <strong>Popup </strong>окном, развернутым на весь экран. Этот <strong>Popup</strong> может быть основан на вашем <strong>SplashScreenImage</strong> для создания наилучшего эффекта</li>
<li>Как только загрузка данных закончится – <strong>Popup</strong> закроется, и пользователь увидит содержимое <strong>MainPage</strong>.</li>
</ul>


<p>Как вы можете заметить, термин «анимированный Splash Screen» на самом деле не совсем верен: мы используем обычный статический экран заставки, а потом просто показываем пользователю страницу, похожую на экран заставки, тем временем выполняя в фоне какие-нибудь действия.</p>

<p>Для того чтобы наша загрузка выполнялась в отдельном потоке мы будем использовать класс <a href="http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx"><strong>BackgroundWorker</strong></a>. Этот класс позволяет делать какую-то работу в фоне, оставляя UI отзывчивым для пользователя. Также у нас будет возможность отслеживать состояние фонового процесса и убрать <strong>Popup </strong>при наступлении какого-нибудь события.</p>

<p>Для начала давайте создадим свой UserControl, для примера назовем его <strong>AnimatedSplashScreen</strong>.</p>

<p>Далее нам нужно добавить обработку <strong>Popup</strong> в MainPage.xaml.cs. Для этого добавим следующие пространства имен:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">using</span> <span class="nn">System.Threading</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Windows.Controls.Primitives</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.ComponentModel</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Теперь необходимо создать BackgroundWorker и наш Popup:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">BackgroundWorker</span> <span class="n">backroungWorker</span><span class="p">;</span>
</span><span class='line'><span class="n">Popup</span> <span class="n">myPopup</span><span class="p">;</span>
</span><span class='line'><span class="c1">// Constructor</span>
</span><span class='line'><span class="k">public</span> <span class="nf">MainPage</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">InitializeComponent</span><span class="p">();</span>
</span><span class='line'>    <span class="n">myPopup</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Popup</span><span class="p">()</span> <span class="p">{</span> <span class="n">IsOpen</span> <span class="p">=</span> <span class="k">true</span><span class="p">,</span> <span class="n">Child</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AnimatedSplashScreen</span><span class="p">()</span> <span class="p">};</span>
</span><span class='line'>    <span class="n">backroungWorker</span> <span class="p">=</span> <span class="k">new</span> <span class="n">BackgroundWorker</span><span class="p">();</span>
</span><span class='line'>    <span class="n">RunBackgroundWorker</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">RunBackgroundWorker</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">backroungWorker</span><span class="p">.</span><span class="n">DoWork</span> <span class="p">+=</span> <span class="p">((</span><span class="n">s</span><span class="p">,</span> <span class="n">args</span><span class="p">)</span> <span class="p">=&gt;</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Thread</span><span class="p">.</span><span class="n">Sleep</span><span class="p">(</span><span class="m">5000</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">backroungWorker</span><span class="p">.</span><span class="n">RunWorkerCompleted</span> <span class="p">+=</span> <span class="p">((</span><span class="n">s</span><span class="p">,</span> <span class="n">args</span><span class="p">)</span> <span class="p">=&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">Dispatcher</span><span class="p">.</span><span class="n">BeginInvoke</span><span class="p">(()</span> <span class="p">=&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="n">myPopup</span><span class="p">.</span><span class="n">IsOpen</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="n">backroungWorker</span><span class="p">.</span><span class="n">RunWorkerAsync</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Что мы здесь делаем:</p>

<ul>
<li>Создаем <strong>Popup</strong>, по-умолчанию открытый, который содержит наш UserContol – <strong>AnimatedSplashScreen</strong>;</li>
<li>Создаем <strong>BackgroundWorker</strong>, который в фоне замораживает поток на 5000 мс.</li>
<li>Как только 5 секунд проходит, <strong>BackgroundWorker </strong>переходит в состояние <strong>RunWorkerCompleted </strong>и наш <strong>Popup </strong>закрывается.</li>
</ul>


<p>Основная логика есть, теперь давайте вернемся к содержимому нашего <strong>Popup</strong>. У себя в примере я использую изображение <strong>SplashScreenImage</strong>, <strong>TextBlock</strong> и <strong>PerformanceProgressBar</strong> из <strong><a href="http://silverlight.codeplex.com/releases/view/75888">WP7 Toolkit</a></strong>.</p>

<p>Для того чтобы немного оживить загрузку, я в <strong>Expression Blend</strong>создал анимацию мигания для текста:</p>

<p>Теперь осталось только добавить и запустить эту анимацию в конструкторе класса AnimatedSplashScreen:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="nf">AnimatedSplashScreen</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">InitializeComponent</span><span class="p">();</span>
</span><span class='line'>    <span class="n">Storyboard</span> <span class="n">Blinking</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Resources</span><span class="p">[</span><span class="s">&quot;Blinking&quot;</span><span class="p">]</span> <span class="k">as</span> <span class="n">Storyboard</span><span class="p">;</span>
</span><span class='line'>    <span class="n">Blinking</span><span class="p">.</span><span class="n">Begin</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Всё, наш анимированный <strong>Splash Screen</strong> готов! Запустив проект, мы увидим следующую картину:</p>

<p><img src="http://1.bp.blogspot.com/-2gjXoRFZl_E/T0n2-jZ0b5I/AAAAAAAAAKU/q0ggrmwHG4E/s320/screen.png"></p>

<p>Пример моего анимированного<strong> Splash Screen</strong> вы можете скачать по ссылке: <a href="https://skydrive.live.com/redir.aspx?cid=a2567e038f37be43&amp;amp;resid=A2567E038F37BE43!512&amp;amp;parid=A2567E038F37BE43!463">SkyDrive</a>.</p>

<p>В качестве альтернативы <strong>Popup</strong> можно использовать отдельную страницу, но тогда нужно предусмотреть чтобы при нажатии на кнопку <strong>Назад </strong>пользователь выходил из приложения, а не попадал снова на страницу загрузки. Это можно сделать, например, удалив страницу из стека навигации:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">NavigationService</span><span class="p">.</span><span class="n">CanGoBack</span> <span class="p">==</span> <span class="k">true</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NavigationService</span><span class="p">.</span><span class="n">RemoveBackEntry</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Не использовать Splash Screen</h3>

<p>Для того чтобы убрать у вашего приложения экран заставки, достаточно просто удалить файл SplashScreenImage.jpg из вашего решения.</p>

<p>Итак, мы рассмотрели различные варианты создания Splash Screen в Windows Phone. Надеюсь, что эта статья оказалась для вас полезной :).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Шпаргалка по сертификации приложения на WP7]]></title>
    <link href="http://Ponf.github.io/blog/2011/12/Shpargalka-po-sertifikatcii-prilozheniia-na-WP7/"/>
    <updated>2011-12-26T09:40:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/12/Shpargalka-po-sertifikatcii-prilozheniia-na-WP7</id>
    <content type="html"><![CDATA[<p>Выкладываю давно обещанную шпаргалку по сертификации приложений на Windows Phone. Эта шпаргалка &ndash; краткое содержимое одной из моих прошлых <a href="http://mne.p0x.ru/2011/08/windows-phone-7.html">статей</a>.</p>

<p><img src="http://3.bp.blogspot.com/-a1neQybjK9U/Tvg_jvd_z0I/AAAAAAAAAJs/loz_YHZjVLo/s400/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA.PNG"></p>

<p>В этой шпаргалке я постарался поместить на одной странице все основные требования, на которые стоит обратить внимание при публикации приложения. Конечно же, поместить все требования на одной странице не представляется возможным, поэтому за более подробной информацией необходимо идти по ссылке: <a href="http://msdn.microsoft.com/en-us/library/hh184843.aspx">Application Certification Requirements for Windows Phone</a>.</p>

<p><a href="https://skydrive.live.com/redir.aspx?cid=a2567e038f37be43&amp;amp;resid=A2567E038F37BE43!464&amp;amp;parid=A2567E038F37BE43!463"><strong><span>Скачать</span></strong></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Скрытые смайлы в Windows Phone]]></title>
    <link href="http://Ponf.github.io/blog/2011/12/Skrytye-smaily-v-Windows-Phone/"/>
    <updated>2011-12-23T11:13:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/12/Skrytye-smaily-v-Windows-Phone</id>
    <content type="html"><![CDATA[<p>Кстати, а вы знали, что в Windows Phone есть скрытые смайлы? Достаточно отправить другу с Windows Phone какую-нибудь комбинацию, из представленных ниже, чтобы он получил забавную картинку :)</p>

<p><img src="http://4.bp.blogspot.com/-1i0pQW92DII/TvRh_NiGSFI/AAAAAAAAAJI/DsQa5b4nl08/s640/2678.Complete-1_thumb_1A1CA41C.png"></p>

<p>Вторая часть смайлов:</p>

<!--more-->


<p></p>

<p><img src="http://3.bp.blogspot.com/-64MqCZBms08/TvTF8Va_85I/AAAAAAAAAJU/GWUwe88353U/s1600/5226.emoticons2_lg_thumb_09D8E8AC.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Как склеить несколько Texture2D / Howto merge few Texture2D]]></title>
    <link href="http://Ponf.github.io/blog/2011/12/Kak-skleitj-neskoljko-Texture2D--Howto-merge-few-Texture2D/"/>
    <updated>2011-12-16T14:19:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/12/Kak-skleitj-neskoljko-Texture2D&#8211;Howto-merge-few-Texture2D</id>
    <content type="html"><![CDATA[<p>Решил попробовать написать этот пост и на русском, и на английском, так как очень долго гуглил о том как склеить несколько текстур формата Texture2D и сохранить результат, но не нашел ничего подходящего: либо метод не поддерживался в Windows Phone, либо меня не устраивала его производительность.</p>

<p><strong>Проблема</strong>
Есть несколько текстур с разными координатами, находящиеся на разных уровнях и никак друг с другом не связанные. Необходимо экспортировать это в фото галерею в виде изображения.</p>

<p><strong>Решение</strong>
В общем-то задача действительно не сложная, но сходу не понятно, как её решить. Нужно как-то склеить все текстуры в одну. И тут нам на помощь приходит класс из XNA под названием <a href="http://msdn.microsoft.com/en-us/library/bb198676.aspx">RenderTarget2D</a>.</p>

<!--more-->


<p></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">RenderTarget2D</span> <span class="n">imageResult</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Как можно понять из названия, с помощью этого класса, наследующегося от Texture2D, мы создаем двумерную текстуру, которую потом можно использовать в выборе цели для рендеринга.</p>

<p>По-умолчанию целью для рендеринга является дисплей:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="c1">// Set the sharing mode of the graphics device to turn on XNA rendering</span>
</span><span class='line'><span class="n">SharedGraphicsDeviceManager</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">GraphicsDevice</span><span class="p">.</span><span class="n">SetSharingMode</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Create a new SpriteBatch, which can be used to draw textures.</span>
</span><span class='line'><span class="n">spriteBatch</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SpriteBatch</span><span class="p">(</span><span class="n">SharedGraphicsDeviceManager</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">GraphicsDevice</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>При разработки игры с использованием XNA+Silverlight установка цели для рендера происходит в методе OnNavigatedTo(), и вся дальнейшая отрисовка будет производиться, соответственно, на дисплей. Так что для того, чтобы отрендерить все на другую текстуру достаточно просто указать её в SpriteBatch:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">imageResult</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RenderTarget2D</span><span class="p">(</span><span class="n">SharedGraphicsDeviceManager</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">GraphicsDevice</span><span class="p">,</span> <span class="n">photoW</span><span class="p">,</span> <span class="n">photoH</span><span class="p">);</span>
</span><span class='line'><span class="n">SharedGraphicsDeviceManager</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">GraphicsDevice</span><span class="p">.</span><span class="n">SetRenderTarget</span><span class="p">(</span><span class="n">imageResult</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Если мы вставим этот код так же в метод OnNavigatedTo(), то весь вывод информации будет производиться не на дисплей, а в нашу текстуру. Нам этого не нужно, так что необходимо менять цель для рендеринга по какому-то определенному событию, например, по нажатию на кнопку. Далее мы отрисовываем все наши текстуры, как мы бы это делали обычно в методе OnDraw():</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">spriteBatch</span><span class="p">.</span><span class="n">Begin</span><span class="p">();</span>
</span><span class='line'><span class="n">bg</span><span class="p">.</span><span class="n">Draw</span><span class="p">(</span><span class="n">spriteBatch</span><span class="p">,</span> <span class="k">new</span> <span class="n">Vector2</span><span class="p">((</span><span class="kt">int</span><span class="p">)(</span><span class="n">photoW</span> <span class="p">/</span> <span class="m">2</span><span class="p">),</span> <span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">photoH</span> <span class="p">/</span> <span class="m">2</span><span class="p">)));</span>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="n">Sprite</span> <span class="n">sprite</span> <span class="k">in</span> <span class="n">sprites</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">sprite</span><span class="p">.</span><span class="n">Draw</span><span class="p">(</span><span class="n">spriteBatch</span><span class="p">,</span> <span class="k">new</span> <span class="n">Vector2</span><span class="p">((</span><span class="kt">int</span><span class="p">)(</span><span class="n">photoW</span> <span class="p">/</span> <span class="m">2</span><span class="p">),</span> <span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">photoH</span> <span class="p">/</span> <span class="m">2</span><span class="p">)),</span> <span class="n">bg</span><span class="p">.</span><span class="n">Scale</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">spriteBatch</span><span class="p">.</span><span class="n">End</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>После того, как мы закончили отрисовывать наши текстуры необходимо освободить наше устройство для рендеринга, чтобы оно вернулось к отрисовке на экране. Для этого достаточно передать в null в метод SetRenderTarget:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">SharedGraphicsDeviceManager</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">GraphicsDevice</span><span class="p">.</span><span class="n">SetRenderTarget</span><span class="p">(</span><span class="k">null</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Всё! Теперь мы можем сохранить наше изображение в изолированном хранилище, галерее или использовать его где-нибудь ещё.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">IsolatedStorageFileStream</span> <span class="n">stream</span> <span class="p">=</span> <span class="k">new</span> <span class="n">IsolatedStorageFileStream</span><span class="p">(</span><span class="s">&quot;/image.jpg&quot;</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">FileMode</span><span class="p">.</span><span class="n">OpenOrCreate</span><span class="p">,</span> <span class="n">iso</span><span class="p">);</span>
</span><span class='line'><span class="n">imageResult</span><span class="p">.</span><span class="n">SaveAsJpeg</span><span class="p">(</span><span class="n">stream</span><span class="p">,</span> <span class="n">imageResult</span><span class="p">.</span><span class="n">Width</span><span class="p">,</span> <span class="n">imageResult</span><span class="p">.</span><span class="n">Height</span><span class="p">);</span>
</span><span class='line'><span class="n">stream</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>О том, как сохранить наше изображение в галерее вы можете прочитать в моей предыдущей статье &ldquo;<a href="http://mne.p0x.ru/2011/12/blog-post.html">Интеграция приложения с хабом Фото</a>&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Интеграция приложения с хабом "Фото"]]></title>
    <link href="http://Ponf.github.io/blog/2011/12/Integratciia-prilozheniia-s-khabom-Foto/"/>
    <updated>2011-12-14T10:08:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/12/Integratciia-prilozheniia-s-khabom-Foto</id>
    <content type="html"><![CDATA[<p>Однажды мне понадобилось интегрировать приложение в хаб &ldquo;Фото&rdquo; в Windows Phone 7. Что я понимаю под интеграцией:</p>

<ul>
<li>Добавление приложения на главную страницу хаба;</li>
<li>Добавление приложения в меню &ldquo;Программы&rdquo; (программы, которыми можно отредактировать изображение);</li>
<li>Выбор в программе изображения из галереи и с камеры;</li>
<li>Сохранение отредактированного изображения в галерее.</li>
</ul>


<p>Вроде бы все понятно, в интернете много информации и никаких проблем возникнуть не должно, но на практике, к сожалению, не всё так просто.</p>

<!--more-->


<p></p>

<h2>1. Добавление приложения на главную страницу хаба Фото</h2>

<p>Беглый поиск <a href="http://programming4.us/mobile/3758.aspx">показал</a>, что для интеграции приложения в хаб Pictures нам необходимо создать файл Extra.xml со следующим содержимым:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Extras&gt;</span>
</span><span class='line'>  <span class="nt">&lt;PhotosExtrasApplication&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Enabled&gt;</span>true<span class="nt">&lt;/Enabled&gt;</span> 
</span><span class='line'>  <span class="nt">&lt;/PhotosExtrasApplication&gt;</span>
</span><span class='line'><span class="nt">&lt;/Extras&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>И создать некоторый обработчик в методе OnNavigatedTo().</p>

<p>Сделал я по этой инструкции и ничего у меня не заработало. Оказалось, что с приходом WP7 Mango все немного изменилось. Таким образом, метод, приведенный выше, не работает!</p>

<p>С приходом WP7 Mango нам теперь не нужно создавать отдельный файл Extra.xml, информация о всех расширениях должна находиться в WMAppManifest.xml.</p>

<p>Для отображения нашего приложения в хабе Фото необходимо в файл WMAppManifest.xml добавить следующие строчки:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Extensions&gt;</span>
</span><span class='line'>      <span class="nt">&lt;Extension</span> <span class="na">ExtensionName=</span><span class="s">&quot;Photos_Extra_Hub&quot;</span> <span class="na">ConsumerID=</span><span class="s">&quot;{5B04B775-356B-4AA0-AAF8-6491FFEA5632}&quot;</span> <span class="na">TaskID=</span><span class="s">&quot;_default&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/Extensions&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2. Добавление приложения в контекстное меню хаба Фото</h2>

<p>Здесь механизм добавления приложения не отличается от добавления приложения на главную страницу хаба, только ExtensionName будет &ldquo;Photos_Extra_Viewer&rdquo;, а ConsumerID станет &ldquo;{5B04B775-356B-4AA0-AAF8-6491FFEA5632}&rdquo;.</p>

<p>В итоге WMAppManifest.xml примет следующий вид:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>    <span class="nt">&lt;/Tokens&gt;</span>
</span><span class='line'>  <span class="nt">&lt;Extensions&gt;</span>
</span><span class='line'>          <span class="nt">&lt;Extension</span> <span class="na">ExtensionName=</span><span class="s">&quot;Photos_Extra_Hub&quot;</span> <span class="na">ConsumerID=</span><span class="s">&quot;{5B04B775-356B-4AA0-AAF8-6491FFEA5632}&quot;</span> <span class="na">TaskID=</span><span class="s">&quot;_default&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;Extension</span> <span class="na">ExtensionName=</span><span class="s">&quot;Photos_Extra_Viewer&quot;</span> <span class="na">ConsumerID=</span><span class="s">&quot;{5B04B775-356B-4AA0-AAF8-6491FFEA5632}&quot;</span> <span class="na">TaskID=</span><span class="s">&quot;_default&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/Extensions&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/App&gt;</span>
</span><span class='line'><span class="nt">&lt;/Deployment&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>3. Создание обработчика</h2>

<p>Итак, теперь мы умеем не только вызывать нашу программу из хаба, а ещё и передавать ей любое изображение. Теперь надо его обрабатывать. Для этого необходимо перегрузить метод OnNavigatedTo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">BitmapImage</span> <span class="n">bitmap</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnNavigatedTo</span><span class="p">(</span><span class="n">NavigationEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">base</span><span class="p">.</span><span class="n">OnNavigatedTo</span><span class="p">(</span><span class="n">e</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//Get a dictionary of query string keys and values</span>
</span><span class='line'>    <span class="n">IDictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="kt">string</span><span class="p">&gt;</span> <span class="n">queryStrings</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">NavigationContext</span><span class="p">.</span><span class="n">QueryString</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//WaitingPic.Visibility = Visibility.Collapsed;</span>
</span><span class='line'>    <span class="c1">//Ensure at least one querysting</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">queryStrings</span><span class="p">.</span><span class="n">ContainsKey</span><span class="p">(</span><span class="s">&quot;token&quot;</span><span class="p">))</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">MediaLibrary</span> <span class="n">library</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MediaLibrary</span><span class="p">();</span>
</span><span class='line'>        <span class="n">Picture</span> <span class="n">picture</span> <span class="p">=</span> <span class="n">library</span><span class="p">.</span><span class="n">GetPictureFromToken</span><span class="p">(</span><span class="n">queryStrings</span><span class="p">[</span><span class="s">&quot;token&quot;</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//Create bitmap</span>
</span><span class='line'>        <span class="n">bitmap</span> <span class="p">=</span> <span class="k">new</span> <span class="n">BitmapImage</span><span class="p">();</span>
</span><span class='line'>        <span class="n">bitmap</span><span class="p">.</span><span class="n">SetSource</span><span class="p">(</span><span class="n">picture</span><span class="p">.</span><span class="n">GetImage</span><span class="p">());</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="n">NavigationContext</span><span class="p">.</span><span class="n">QueryString</span><span class="p">.</span><span class="n">Clear</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Теперь мы можем делать с нашим изображением всё, что захотим :).</p>

<h2>4. Получение изображений из камеры и галереи</h2>

<p>Также мы хотим осуществить в нашем приложении доступ к изображениям в галерее и, если нужное изображение отсутствует, предоставить возможность сделать фото.</p>

<p>Для этого нам необходимо использовать PhotoChooserTaskиCameraCaptureTask, которые находятся в пространстве имён Microsoft.Phone.Tasks.</p>

<p>В общем случае код выглядит примерно так:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">ChoosePhoto_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">try</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">selectphoto</span> <span class="p">=</span> <span class="k">new</span> <span class="n">PhotoChooserTask</span><span class="p">();</span>
</span><span class='line'>        <span class="n">selectphoto</span><span class="p">.</span><span class="n">Completed</span> <span class="p">+=</span> <span class="k">new</span> <span class="n">EventHandler</span><span class="p">&lt;</span><span class="n">PhotoResult</span><span class="p">&gt;(</span><span class="n">photo_Completed</span><span class="p">);</span>
</span><span class='line'>        <span class="n">selectphoto</span><span class="p">.</span><span class="n">Show</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">catch</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&quot;Some problem with loading your page&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">LaunchCamera_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CameraCaptureTask</span> <span class="n">cameraCapture</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CameraCaptureTask</span><span class="p">();</span>
</span><span class='line'>    <span class="n">cameraCapture</span><span class="p">.</span><span class="n">Completed</span> <span class="p">+=</span> <span class="k">new</span> <span class="n">EventHandler</span><span class="p">&lt;</span><span class="n">PhotoResult</span><span class="p">&gt;(</span><span class="n">photo_Completed</span><span class="p">);</span>
</span><span class='line'>    <span class="n">cameraCapture</span><span class="p">.</span><span class="n">Show</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">void</span> <span class="nf">photo_Completed</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">PhotoResult</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">TaskResult</span> <span class="p">==</span> <span class="n">TaskResult</span><span class="p">.</span><span class="n">OK</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">try</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">bitmap</span> <span class="p">=</span> <span class="k">new</span> <span class="n">BitmapImage</span><span class="p">();</span>
</span><span class='line'>            <span class="n">bitmap</span><span class="p">.</span><span class="n">UriSource</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Uri</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">OriginalFileName</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">catch</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&quot;Some problem with loading your page&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Как вы можете видеть, ничего сложно в этом нет, данный код вернет нам изображение в приложение. Но мне такая реализация не очень нравится. Я предпочитаю делать следующее:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">void</span> <span class="nf">photo_Completed</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">PhotoResult</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">TaskResult</span> <span class="p">==</span> <span class="n">TaskResult</span><span class="p">.</span><span class="n">OK</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">try</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">bitmap</span> <span class="p">=</span> <span class="k">new</span> <span class="n">BitmapImage</span><span class="p">();</span>
</span><span class='line'>            <span class="n">bitmap</span><span class="p">.</span><span class="n">CreateOptions</span> <span class="p">=</span> <span class="n">BitmapCreateOptions</span><span class="p">.</span><span class="n">None</span><span class="p">;</span>
</span><span class='line'>            <span class="n">bitmap</span><span class="p">.</span><span class="n">ImageOpened</span> <span class="p">+=</span> <span class="k">new</span> <span class="n">EventHandler</span><span class="p">&lt;</span><span class="n">RoutedEventArgs</span><span class="p">&gt;(</span><span class="n">bitmap_ImageOpened</span><span class="p">);</span>
</span><span class='line'>            <span class="n">bitmap</span><span class="p">.</span><span class="n">ImageFailed</span> <span class="p">+=</span> <span class="k">new</span> <span class="n">EventHandler</span><span class="p">&lt;</span><span class="n">ExceptionRoutedEventArgs</span><span class="p">&gt;(</span><span class="n">bitmap_ImageFailed</span><span class="p">);</span>
</span><span class='line'>            <span class="n">bitmap</span><span class="p">.</span><span class="n">UriSource</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Uri</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">OriginalFileName</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">catch</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&quot;Some problem with loading your page&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">void</span> <span class="nf">bitmap_ImageOpened</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">try</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">//Делаем что-нибудь с нашим изображением</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">catch</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>         <span class="c1">//Обрабатываем ошибку </span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">void</span> <span class="nf">bitmap_ImageFailed</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&quot;Problem with loading your image. Please try again.&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Теперь наше приложение умеет ещё выбирать изображения из галереи и делать фотографии.</p>

<p>Осталось только сохранять результат работы в галерее.</p>

<h2>5. Сохранение изображения в галерее</h2>

<p>Для сохранения изображения в галерее нам во-первых необходимо подключить следующие пространства имен:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">using</span> <span class="nn">System.IO.IsolatedStorage</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">Microsoft.Xna.Framework.Media</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Теперь мы можем сохранить фотографию:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">try</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">IsolatedStorageFileStream</span> <span class="n">stream</span> <span class="p">=</span> <span class="k">new</span> <span class="n">IsolatedStorageFileStream</span><span class="p">(</span><span class="s">&quot;/image.jpg&quot;</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">FileMode</span><span class="p">.</span><span class="n">OpenOrCreate</span><span class="p">,</span> <span class="n">iso</span><span class="p">);</span>
</span><span class='line'>    <span class="n">imageResult</span><span class="p">.</span><span class="n">SaveAsJpeg</span><span class="p">(</span><span class="n">stream</span><span class="p">,</span> <span class="n">imageResult</span><span class="p">.</span><span class="n">Width</span><span class="p">,</span> <span class="n">imageResult</span><span class="p">.</span><span class="n">Height</span><span class="p">);</span>
</span><span class='line'>    <span class="n">stream</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">stream</span> <span class="p">=</span> <span class="n">iso</span><span class="p">.</span><span class="n">OpenFile</span><span class="p">(</span><span class="s">&quot;/image.jpg&quot;</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">FileMode</span><span class="p">.</span><span class="n">Open</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">FileAccess</span><span class="p">.</span><span class="n">Read</span><span class="p">);</span>
</span><span class='line'>    <span class="n">MediaLibrary</span> <span class="n">library</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MediaLibrary</span><span class="p">();</span>
</span><span class='line'>    <span class="n">Picture</span> <span class="n">pic</span> <span class="p">=</span> <span class="n">library</span><span class="p">.</span><span class="n">SavePicture</span><span class="p">(</span><span class="s">&quot;SavedPicture.jpg&quot;</span><span class="p">,</span> <span class="n">stream</span><span class="p">);</span>
</span><span class='line'>    <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&quot;Image saved to saved pictures album&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">stream</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">catch</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&quot;Some problem with saving image :(&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Сначала мы сохраняем изображение в изолированном хранилище. В данном примере - imageResult - экземпляр класса RenderTarget2D, который наследуется от Texture2D, у которого, в свою очередь, есть методы для сохранения в png и jpg. Мы записываем jpg файл в изолированные хранилище, затем создаем поток на чтение этого файла. Наконец, нам нужно передать поток чтения в метод SavePicture экземпляра класса MediaLibrary для сохранения изображения в галерее. Все, изображение сохранять мы тоже научились.</p>

<h2>6. Заключение</h2>

<p>Мне кажется, в этой статье я рассмотрел все кейсы, которые могут пригодиться при разработке приложения для работы с фотографиями и изображениями. Возможно, я недостаточно внимания уделил задачам выбора изображения и работе с камерой, но вся эта информация есть в учебном курсе по <a href="http://msdn.microsoft.com/ru-ru/windowsphone/hh420944#mark_7">Windows Phone</a>. Если у вас остались какие-либо вопросы, не стесняйтесь задавать их в комментариях.</p>

<p>Также хочется напомнить, что сейчас идет новый цикл вечерней школы со Стасом Павловым</p>

<p><a href="http://msdn.microsoft.com/ru-ru/windowsphone/hh544009">http://msdn.microsoft.com/ru-ru/windowsphone/hh544009</a>, на которой вы можете научиться разрабатывать под Windows Phone, а так же задать все интересующие вопросы. Ближайшее занятие состоится 22 декабря, не пропустите!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Как разработчику WP7 бесплатно попасть на {.тостер}]]></title>
    <link href="http://Ponf.github.io/blog/2011/11/Kak-razrabotchiku-WP7-besplatno-popastj-na-toster/"/>
    <updated>2011-11-20T05:08:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/11/Kak-razrabotchiku-WP7-besplatno-popastj-na-toster</id>
    <content type="html"><![CDATA[<p>Вчера вечером на хабре стартовала одна очень интересная для Windows Phone разработчиков акция.Для тех, кто не в курсе &ndash; <a href="http://toster.ru/"><strong>{.тостер}</strong></a> -  проект компании «Тематические Медиа», известной на рынке как издатель проекта «Хабрахабр» — самого большого в Европе сообщества гиков, людей, интересующихся информационными технологиями.</p>

<p>Суть тостера &ndash; проведение тематических конференций. Следующая конференция, проходящая 2 декабря посвящена разработке мобильных приложений.</p>

<blockquote><p>.тостер {мобильные приложения} — это техническая конференция. Наша цель — дать профессионалам возможность поделиться своими знаниями.</p></blockquote>

<p>Вход стоит от 4 до 10 тысяч, но ребята из Microsoft решили предоставить разработчикам под WP7 возможность принять участие бесплатно :)</p>

<p><strong>Что для этого нужно сделать</strong></p>

<ol>
<li>У вас должно быть хотя бы одно опубликованное приложение</li>
<li>Вы должны быть зарегистрированы на сайте <a href="http://appprofessionals.ru/"><strong>AppProfessionals</strong></a> и разместить там ваше приложение.</li>
<li>На странице <a href="http://habrahabr.ru/special/microsoft/wp_toster/"><strong>акции</strong></a> указать ссылку на свой аккаунт и приложение.</li>
</ol>


<p>Всё!</p>

<p>Акция проходит в период с 18 по 30 ноября.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ICQ, MRA и Twitter для Windows Phone]]></title>
    <link href="http://Ponf.github.io/blog/2011/11/ICQ-MRA-i-Twitter-dlia-Windows-Phone/"/>
    <updated>2011-11-16T07:32:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/11/ICQ-MRA-i-Twitter-dlia-Windows-Phone</id>
    <content type="html"><![CDATA[<p>Сегодня компания Mail.Ru в рамках проходящего Форума Технологий анонсировала выход 2-х своих приложений для Windows Phone: ICQ-клиента, который все так долго просили, и Mail.Ru Agent.</p>

<p><img src="http://2.bp.blogspot.com/-qv4Qck12jUw/TsOmiWp6g1I/AAAAAAAAAF4/2MIBUGgeIDo/s320/icq_wp7_480.jpg"> <img src="http://1.bp.blogspot.com/-NSVSEBeMnJc/TsOmhigWNpI/AAAAAAAAAFw/nX98fCuqEkU/s320/Agent_wp7_480.jpg"></p>

<blockquote><p>Windows Phone 7 &ndash; новая перспективная ОС от Microsoft для смартфонов. Для нее уже более 35 тыс. приложений, и в скором времени появятся версии ICQ и Mail.Ru Агента. Как они выглядят, вы уже можете увидеть на скриншотах. Единообразие стиля операционки делает дизайн софта под нее стильным и современным. Что касается функциональности, то будет мультипротокольность (поддержка Google, ВКонтакте, Одноклассники и т.д.), группы, смайлы и все стандартные возможности. Благодаря особенностям интерфейса WP7 можно удобно переходить от сервиса к сервису горизонтальной прокруткой экранов. Есть древовидное представление диалогов и поиск по ним. Никуда не делись статусы. При этом оба приложения будут бесплатны, как и на других платформах.</p></blockquote>

<p><a href="http://hi-tech.mail.ru/news/misc/icq_agent-wp7.html"><strong>Hi-Tech.Mail.Ru</strong></a></p>

<p>Также сегодня вышло обновление для официального Twitter-клиента для Windows Phone.</p>

<p><img src="http://4.bp.blogspot.com/-XtRSygjLze4/TsNm8-4HmAI/AAAAAAAAAE4/9E4uDYN93FI/s200/primaryImage.png"></p>

<p>По всей видимости каких-либо серьезных изменений или новых фич в этой версии приложения не появилось. Из приятного &ndash; помимо поддержи Fast Application Switch, приложение стало доступно из России.</p>

<p><a href="http://www.windowsphone.com/ru-RU/apps/0b792c7c-14dc-df11-a844-00237de2db9e?ppud=4&amp;amp;wa=wsignin1.0">Скачать</a></p>

<p>Под катом скрины</p>

<!--more-->


<p></p>

<p><img src="http://1.bp.blogspot.com/-8osNrBNbO8U/TsNu6dA0OjI/AAAAAAAAAFI/je6Du4fPvLA/s200/60f0468f-2ac8-456e-a52d-e9fad4837133.png"></p>

<p><img src="http://1.bp.blogspot.com/-k8EAhE1t2_4/TsNu7W-JoeI/AAAAAAAAAFQ/fXwrUogrQoM/s200/bf036828-aa07-4c0a-8973-c46f04b6007e.png"></p>

<p><img src="http://4.bp.blogspot.com/-rImztBz-Wdw/TsNu8_DrGxI/AAAAAAAAAFY/JiVkaSBh0qM/s200/f2ce6f98-b242-4335-808e-083d80a099af.png"></p>

<p><img src="http://2.bp.blogspot.com/-teIk8MnJh5s/TsNu99gdaKI/AAAAAAAAAFg/yjAg4acX75M/s200/fa5a9d87-7945-4827-ad10-f6736239d79c.png"></p>

<p><img src="http://1.bp.blogspot.com/-oiA1qRPm-O0/TsNu-4hWa5I/AAAAAAAAAFo/UihzSId8qrM/s200/ffd0974d-89f4-485a-8f1e-215ade98329c.png"></p>

<p><img src="http://2.bp.blogspot.com/-cBRdblMPl-k/TsNu5bZh5eI/AAAAAAAAAFA/18s25sibhoo/s200/9c3a61a3-580f-49c7-8ee3-1346eaa8c9aa.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ноябрьский номер журнала MSDeveloper.RU]]></title>
    <link href="http://Ponf.github.io/blog/2011/11/Noiabrjskii-nomer-zhurnala-MSDeveloperRU/"/>
    <updated>2011-11-15T09:16:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/11/Noiabrjskii-nomer-zhurnala-MSDeveloperRU</id>
    <content type="html"><![CDATA[<p>Сегодня вышел ноябрьский номер журнала <strong>MSDeveloper.RU</strong>. Скачать можно по <a href="http://www.msdeveloper.ru/magazine/download.aspx/37/item-411/">ссылке</a>.
Из интересного в этом номере &ndash; репортаж с TechEd Russia, интервью с Михаилом Черномордиковым и Дмитрием Сошниковым.
Так же в этом выпуске опубликовали две мои статьи по Windows Phone 7:</p>

<ul>
<li>доработанную <a href="http://mne.p0x.ru/2011/08/windows-phone-7.html">шпаргалку</a>по сертификации приложений</li>
<li><a href="http://mne.p0x.ru/2011/10/wp7.html">статью</a>по работе с БД в WP7</li>
</ul>


<p>К сожалению, в журнале не разместили шпаргалку, размещенную на одной странице, которую я им высылал. Обещаю на днях допилить её и выложить в блоге.</p>

<p>Ещё мы в пятницу провели первую встречу <a href="http://ug.bmstu.ru/">Bauman .NET User Group</a>, основной темой которой был Imagine Cup. К нам в гости приехали ребята из команды Oricrafter (победители Imagine Cup Россия) и рассказали о своём опыте участия. Отчет ждите также в ближайшее время =).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TechEd Russia]]></title>
    <link href="http://Ponf.github.io/blog/2011/11/TechEd-Russia/"/>
    <updated>2011-11-10T18:37:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/11/TechEd-Russia</id>
    <content type="html"><![CDATA[<p><img src="http://4.bp.blogspot.com/-Tie3I712RMk/TrwbUhqZhbI/AAAAAAAAAEw/QefhuCPVCdo/s320/_DSC8798.JPG"></p>

<p>Keynote. У меня бэйджик докладчика ;)</p>

<p>TechEd Russia был легендарен! Фотки ждите позже, сейчас основные впечатления.</p>

<p>Да, я покрутил в руках Nokia Lumia 800 на Windows Phone 7. Это просто потрясающий девайс! Теперь выбор между Samsung и Nokia стал ещё труднее.</p>

<p>Поигрался немного с HTC Titan. Ну что сказать? Размер у него действительно очень большой :). В руке помещается нормально, но большой палец уже не всегда дотягивается до левого верхнего угла. На счёт зернистости экрана и низкого разрешения &ndash; всё ерунда. Приглядывался к изображению, зернистости не увидел.</p>

<p>Огромное спасибо Стасу Павлову за лабы и возможность принять участие в TechEd Russia, Косте Кичинскому за очень интересное конструктивное общение, Оксане за поддержку Community, студентам-партнерам за море фана и позитива, Никите за экскурсию и многим-многим другим!</p>

<p>Материалы с лабораторных работ можно скачать по <a href="https://skydrive.live.com/?cid=9282930E3ADB351A&amp;amp;id=9282930E3ADB351A!843"><strong>ссылке</strong></a>. Если будут вопросы по лабам по Windows Phone &ndash; обращайтесь, с удовольствием помогу :).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Работа с базой данных в WP7 для ленивых :)]]></title>
    <link href="http://Ponf.github.io/blog/2011/10/Rabota-s-bazoi-dannykh-v-WP7-dlia-lenivykh-%29/"/>
    <updated>2011-10-11T10:14:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/10/Rabota-s-bazoi-dannykh-v-WP7-dlia-lenivykh-)</id>
    <content type="html"><![CDATA[<p>Так уж получилось, что никогда раньше у меня не было необходимости использовать в моих проектах базы данных для хранения информации, так что все мои знания ограничивались парой посещений лекций по СУБД на втором или третьем курсе :&ndash;[.Но во время написания приложения HabraReader под Windows Phone 7 мной и моим коллегой <a href="http://twitter.com/#!/kin9pin">@kin9pin</a> было принято самое логичное решение &ndash; хранить посты в БД. Погуглив, мы нашли довольно много <a href="http://msdn.microsoft.com/ru-ru/windowsphone/hh425066#mark_15">статей</a> и <a href="http://msdn.microsoft.com/en-us/library/hh202876(v=VS.92">пошаговых инструкций</a>.aspx) по созданию и работе с  БД в Windows Phone, но всё это нас по тем или иным причинам не устраивало (например, из-за привязки к MVVM, до которого всё никак руки не доходят).</p>

<p>Но выход нашелся! Причем оказался настолько простым и элегантным, что с помощью этого решения любой сможет создать и подключить БД к своему проекту за считанные минуты.</p>

<!--more-->


<p></p>

<h2>1. Создаём структуру базы данных</h2>

<p>Для начала нам понадобится база данных в формате .sdf. Как её создать? Очень просто!
Идём в Visual Studio, создаём новый проект (например, Windows Forms Application)</p>

<p><img src="http://3.bp.blogspot.com/-gdQoljIac8Y/TpPquXelmsI/AAAAAAAAABQ/qXO0lz1uOIM/s640/1.png"></p>

<p>Добавляем новый элемент в наш проект типа &ldquo;Local Database&rdquo;</p>

<p><img src="http://3.bp.blogspot.com/-CswLeqPrTBo/TpPrhQqMxUI/AAAAAAAAABY/rNCPNEzb9CU/s640/2.png"></p>

<p>Жмём Next и Finish. Далее идём в View и выбираем Server Explorer (Ctrl +W, L).</p>

<p>В разделе Data Connections мы видим нашу только что добавленную базу данных. Теперь мы можем создать структуру нашей будущей базы данных. Начнем с того, что добавим одну таблицу.</p>

<p><img src="http://4.bp.blogspot.com/-9tkuprH_aYA/TpPtmHVTfCI/AAAAAAAAABg/vEcuvGpC3Aw/s640/3.png"></p>

<p>Для простейшего примера нам будет достаточно таблицы с 5 столбцами: ID (идентификатор постов, всегда уникальный, автоматически увеличивается на 1 и служит первичным ключом), Title (название поста, текст, не больше 150 символов), Description (описание поста, текст, не больше 1000 символов), Date (дата и время создания поста, тип datetime) и Link (ссылка на полную версию поста, текст, не длиннее 100 символов).</p>

<p>В итоге выглядит это примерно так:</p>

<p><img src="http://4.bp.blogspot.com/-t5x81PCYiYE/TpPwJ_ig_SI/AAAAAAAAABo/M79pk4ckRHs/s640/4.png"></p>

<p>Теперь надо перестроить проект и на этом Visual Studio можно на некоторое время закрыть и расслабиться: самая сложная часть осталась позади :). В папке с вашим проектом появился файл MyDB.sdf. Дальнейшая работа будет проходить именно с ним, так что весь солюшн, кроме MyDB.sdf можно удалить.</p>

<p>Файл MyDB.sdf я положил в D:\Tests для большего удобства в выполнении следующего шага.</p>

<h2>2. Создаём DataContext для работы с БД</h2>

<p>Что такое DataContext? Это некоторый класс, который служит нам для работы с БД и выполнения основных CRUD операций (create, read, update, delete). Для того, чтобы его создать нужно открыть командную строку Visual Studio:</p>

<p>Пуск &ndash;> Все программы &ndash;> Microsoft Visual Studio 2010 &ndash;> Visual Studio Tools &ndash;> Visual Studio Command Prompt</p>

<p>В командной строке с помощью утилиты SQLmetal мы сгенерируем DataContext для нашей базы данных MyDB.sdf</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sqlmetal D:\Tests\MyDB.sdf /code:D:\Tests\MyDB.cs /language:csharp /namespace:DBDemo /context:MyDBContext /pluralize</span></code></pre></td></tr></table></div></figure>


<p>В этой команде мы указали путь к нашей БД и путь, куда поместить наш DataContext, выбрали язык C#, указали название пространства имён и имя DataContext.</p>

<p><img src="http://1.bp.blogspot.com/-LBGvx5TfMNo/TpP3Z8qUfkI/AAAAAAAAABw/unmlzuVwu-4/s640/5.png"></p>

<p>Теперь в нашей папке Tests лежит файл MyDB.cs, который и является DataContext нашей БД.</p>

<h2>3. Пример использования</h2>

<p>Давайте создадим новый проект под WP7 (обязательно укажите Windows Phone 7.1, т.к. поддержка баз данных появилась только в WP7 Mango).</p>

<p>В проект добавляем наш MyDB.cs, в референсы добавляем System.Data.Linq.</p>

<p>Единственное, что придется изменить в MyDB.cs &ndash; это namespace на пространство имён нашего проекта и удалить два следующих метода:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="nf">MyDBContext</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">IDbConnection</span> <span class="n">connection</span><span class="p">)</span> <span class="p">:</span>
</span><span class='line'>        <span class="k">base</span><span class="p">(</span><span class="n">connection</span><span class="p">,</span> <span class="n">mappingSource</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">OnCreated</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>и</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="nf">MyDBContext</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">IDbConnection</span> <span class="n">connection</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">Data</span><span class="p">.</span><span class="n">Linq</span><span class="p">.</span><span class="n">Mapping</span><span class="p">.</span><span class="n">MappingSource</span> <span class="n">mappingSource</span><span class="p">)</span> <span class="p">:</span>
</span><span class='line'>        <span class="k">base</span><span class="p">(</span><span class="n">connection</span><span class="p">,</span> <span class="n">mappingSource</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">OnCreated</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>так как интерфейс IDbConnection не поддерживается телефоном.</p>

<p>Следующим шагом мы создадим промежуточный Helper &ndash; класс для большего удобства работы с базой данных. При таком подходе в MyDB.cs вносить изменения больше не придётся.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">DBHelper</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">const</span> <span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;isostore:/ReaderDB.sdf&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// Создание БД в изолированном хранилище.</span>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">CreateDatabase</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">context</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MyDBContext</span><span class="p">(</span><span class="n">ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(!</span><span class="n">context</span><span class="p">.</span><span class="n">DatabaseExists</span><span class="p">())</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="c1">// create database if it does not exist</span>
</span><span class='line'>                <span class="n">context</span><span class="p">.</span><span class="n">CreateDatabase</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// Удаление БД из изолированного хранилища.</span>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">DeleteDatabase</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">context</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MyDBContext</span><span class="p">(</span><span class="n">ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">context</span><span class="p">.</span><span class="n">DatabaseExists</span><span class="p">())</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="c1">// delete database if it exist</span>
</span><span class='line'>                <span class="n">context</span><span class="p">.</span><span class="n">DeleteDatabase</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// Добавляет статью в БД.</span>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="n">AddPost</span><span class="p">(</span><span class="n">Post</span> <span class="n">post</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">context</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MyDBContext</span><span class="p">(</span><span class="n">ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">context</span><span class="p">.</span><span class="n">DatabaseExists</span><span class="p">())</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">context</span><span class="p">.</span><span class="n">Posts</span><span class="p">.</span><span class="n">InsertOnSubmit</span><span class="p">(</span><span class="n">post</span><span class="p">);</span>
</span><span class='line'>                <span class="n">context</span><span class="p">.</span><span class="n">SubmitChanges</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// Получает список статей из БД.</span>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>    <span class="c1">///Список статей.</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="n">IList</span><span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">Post</span><span class="p">&gt;</span> <span class="n">GetPosts</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">IList</span><span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">Post</span><span class="p">&gt;</span> <span class="n">posts</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">Post</span><span class="p">&gt;();</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">context</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MyDBContext</span><span class="p">(</span><span class="n">ConnectionString</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">posts</span> <span class="p">=</span> <span class="p">(</span><span class="k">from</span> <span class="n">emp</span> <span class="k">in</span> <span class="n">context</span><span class="p">.</span><span class="n">Posts</span> <span class="k">select</span> <span class="n">emp</span><span class="p">).</span><span class="n">ToList</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">posts</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Теперь в коде можно просто вызывать статичные методы DBHelper для различного взаимодействия с БД! Например, будем создавать БД (если она отсутствует) при загрузке страницы.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">LayoutRoot_Loaded</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">DBHelper</span><span class="p">.</span><span class="n">CreateDatabase</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>4. Немного о ConnectionString</h2>

<p>В общем случае ConnectionString &ndash; некоторая строка, в которой могут быть указаны различные параметры для подключения к базе данных.</p>

<h3>Источник данных</h3>

<p>Источник данных &ndash; параметр по-умолчанию, то есть вы можете не указывать свойство &ldquo;Data Source&rdquo;. База данных может располагаться как в изолированном хранилище, так и в директории с данными приложения.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;isostore:/ReaderDB.sdf&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;appdata:/ReaderDB.sdf&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;DataSource = &#39;isostore:/ReaderDB.sdf&#39;;&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;DataSource = &#39;appdata:/ReaderDB.sdf&#39;;&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Пароль</h3>

<p>Пароль используется чтобы зашифровать базу данных при создании и так же его необходимо указывать при подключении к ней. Максимальная длина пароля &ndash; 40 символов.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;Data Source = &#39;isostore:/ReaderDB.sdf&#39;; Password = &#39;mypassword&#39;;&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Режим</h3>

<p>Существуют 4 режима открытия БД (&ldquo;Read Write&rdquo;, &ldquo;Read Only&rdquo;, &ldquo;Exculsive&rdquo; и &ldquo;Shared Read&rdquo;), которые обозначают вид доступа.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="c1">// Позволяет нескольким процессам читать и писать в БД одновременно. Это режим по-умолчанию.</span>
</span><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;Data Store = &#39;isostore:/ReaderDB.sdf&#39;; File Mode = &#39;Read Write&#39;;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Разрешает процессам производить только чтение из БД.</span>
</span><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;Data Store = &#39;isostore:/ReaderDB.sdf&#39;; File Mode = &#39;Read Only&#39;;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Разрешает только одному процессу читать и писать в БД.</span>
</span><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;Data Store = &#39;isostore:/ReaderDB.sdf&#39;; File Mode = &#39;Exclusive&#39;;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Разрешает всем процессам читать из БД, но только один может писать.</span>
</span><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;Data Store = &#39;isostore:/ReaderDB.sdf&#39;; File Mode = &#39;Shared Read&#39;;&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Максимальный размер БД</h3>

<p>Размер указывается в мегабайтах, в пределах от 32 до 512.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;Data Store = &#39;isostore:/ReaderDB.sdf&#39;; Max Database Size = 128;&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Максимальный размер буфера</h3>

<p>Указывается в килобайтах, в пределах от 384 до 5120.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;Data Store = &#39;isostore:/ReaderDB.sdf&#39;; Max Buffer Size = 2048;&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Культура</h3>

<p>Параметр культуры указывается в виде &ldquo;язык-Страна&rdquo;, например, &ldquo;ru-RU&rdquo; для русского языка в России</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;Data Store = &#39;isostore:/ReaderDB.sdf&#39;; Culture Identifier = ru-RU;&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Чувствительность к регистру</h3>

<p>В параметрах можно так же указать, будет ли база данных чувствительна к регистру.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">string</span> <span class="n">ConnectionString</span> <span class="p">=</span> <span class="s">@&quot;Data Store = &#39;isostore:/ReaderDB.sdf&#39;; Case Sensitive = true;&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Заключение</h2>

<p>Надеюсь, вам удалось разобраться с помощью моей статьи в работе с базами данных в Windows Phone 7. Как вы видите, создание и подключение базы &ndash; данных достаточно простые операции, и, используя сгенерированный с помощью sqlmetal класс, можно разобраться в структуре и основных принципах работы. После этого уже ничто не помешает вам редактировать структуру базы данных в коде и создавать новые проекты, использующие БД, с нуля.</p>

<p>Не забывайте подписываться на мой твиттер: <a href="http://twitter.com/#!/ponfius">@ponfius</a>. И, как обычно, stay tuned :)</p>

<p><i>В статье использовалась информация из блога <a href="http://www.kunal-chowdhury.com/">http://www.kunal-chowdhury.com</a></i></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SilverLife]]></title>
    <link href="http://Ponf.github.io/blog/2011/09/SilverLife/"/>
    <updated>2011-09-30T08:54:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/09/SilverLife</id>
    <content type="html"><![CDATA[<p>Моё новое приложение <strong>SilverLife</strong> опубликовали в <strong>Marketplace</strong>! :)</p>

<p>Скачать его можно по ссылке: <a href="http://windowsphone.com/s?appid=e7c4488f-137d-4401-a625-bac86ad61ba6">http://windowsphone.com/s?appid=e7c4488f-137d-4401-a625-bac86ad61ba6</a></p>

<p>Посмотреть через браузер: <a href="http://www.windowsphone.com/en-US/apps/e7c4488f-137d-4401-a625-bac86ad61ba6">http://www.windowsphone.com/en-US/apps/e7c4488f-137d-4401-a625-bac86ad61ba6</a></p>

<p><img src="http://1.bp.blogspot.com/-vKtCIU8fxXg/ToV9UqgATnI/AAAAAAAAABM/WZXkqdiWfjA/s1600/MP_icon_173.png"></p>

<!--more-->


<p>
SilverLife &ndash; моя реализации игры Жизнь (The Game of Life), придуманной английским математиком Джоном Конвеем в 1970 году.
Игра относится к типу &ldquo;zero-player&rdquo;, то есть игроку нужно лишь указать начальное состояние, а дальше игра сделает всё сама.</p>

<p>Место действия этой игры — «вселенная» — это размеченная на клетки поверхность тора.. Каждая клетка на этой поверхности может находиться в двух состояниях: быть живой или быть мёртвой. Клетка имеет восемь соседей. Распределение живых клеток в начале игры называется первым поколением. Каждое следующее поколение рассчитывается на основе предыдущего по таким правилам:</p>

<ul>
<li>пустая (мёртвая) клетка, рядом с которой ровно три живые клетки, оживает;</li>
<li>если у живой клетки есть две или три живые соседки, то эта клетка продолжает жить; в противном случае (если соседей меньше двух или больше трёх) клетка умирает (от «одиночества» или от «перенаселённости»).</li>
</ul>


<p>Игрок не принимает прямого участия в игре, а лишь расставляет начальную конфигурацию «живых» клеток, которые затем взаимодействуют согласно правилам уже без его участия.</p>

<p>Эти простые правила приводят к огромному разнообразию форм, которые могут возникнуть в игре.</p>

<p>В версии 1.1, которую я сегодня засабмитил в <strong>Marketplace</strong>, появились пресеты из известных начальных форм (Glaider, GlaiderGun, Acorn и некоторые другие). Ждите апдейта в начале следующей недели :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Конференция Tech∙Ed Russia 2011]]></title>
    <link href="http://Ponf.github.io/blog/2011/09/Konferentciia-TechEd-Russia-2011/"/>
    <updated>2011-09-30T06:59:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/09/Konferentciia-TechEd-Russia-2011</id>
    <content type="html"><![CDATA[<p><img src="http://2.bp.blogspot.com/-3NqeVpZQtyI/ToVolntQXGI/AAAAAAAAABI/nn1ySa-WOBQ/s1600/1007.50070_3_3FE0EF96.jpg"></p>

<p><strong> Что: <a href="http://www.microsoft.com/ru-ru/events/teched/">Tech∙Ed Russia 2011</a></strong> - крупнейшая технологическая конференция в СНГ, а также Центральной и Восточной Европе.</p>

<p><strong>Где:</strong> Россия, Москва</p>

<p><strong>Когда:</strong> 9-10 ноября 2011 года</p>

<p><strong>Чего ждать:</strong></p>

<ul>
<li>160 докладов и интерактивных сессий в 15 треках;</li>
<li>более 3000 участников;</li>
<li>докладчики и эксперты международного уровня;</li>
<li>возможности общения и профессиональных контактов;</li>
<li>лабораторные работы для практического знакомства с продуктами и технологиями.</li>
</ul>


<!--more-->


<p></p>

<h2>Пленарный доклад</h2>

<p><strong>С. Сомасегар (S. Somasegar)</strong></p>

<p>Корпоративный вице-президент Microsoft, Подразделение Разработки (Developer Division), создающее всем известные инструменты и технологии платформы разработки, такие как Visual Studio, .NET Framework, Silverlight и Expression Studio. Сомасегар также отвечает за разработку Internet Information Server (IIS), Media Server и Commerce Server. Его команда разрабатывает и поддерживает платформу и инфраструктуру сайтов microsoft.com, включая MSDN и TechNet.</p>

<p><strong>Кевин Тернер (Kevin Turner)</strong></p>

<p>Главный операционный директор корпорации Microsoft, отвечающий за стратегические и операционные направления в продажах, маркетинге и сервисах Microsoft по всему миру. Помимо продаж и маркетинговых программ, Тернер управляет структурой по продаже рекламы он-лайн и корпоративной поддержке, включая поддержку заказчиков и продуктов, брэндинг, рекламу, PR, маркетинговые исследования и маркетинг взаимоотношений.</p>

<h2>Технологические треки</h2>

<p>Среди прочих докладчиков нельзя обойти вниманием всемирно известных специалистов в области информационной безопасности <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/TomasShinder">Томаса Шиндера (Thomas W. Shinder)</a> с докладами <a href="http://www.microsoft.com/ru-ru/events/teched/Catalog/Bezopasnost-chastnogo-oblaka-na-osnove-tehnologij-Microsoft">&ldquo;Безопасность частного облака на основе технологий Microsoft&rdquo;</a> и <a href="http://www.microsoft.com/ru-ru/events/teched/Catalog/Bezopasnyj-perehod-na-IPv6-DirectAccess-i-UAG">&ldquo;Безопасный переход на IPv6, DirectAccess и UAG&rdquo;</a>, как и трек <a href="http://www.microsoft.com/ru-ru/events/teched/Catalog?tId=b964f259-3381-4070-abbe-e93a6c0c8581">&ldquo;Информационная безопасность&rdquo;</a> в целом, в котором примут участие такие специалисты, как <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/PolYanushkevich">Пола Янушкевич</a>, <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/AndreyBeshkov">Андрей Бешков</a>, <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/AlexanderTrofimov">Александр Трофимов</a> и многие другие.</p>

<p>Особого интереса заслуживает трек <a href="http://www.microsoft.com/ru-ru/events/teched/Catalog?sc=0&amp;amp;so=True&amp;amp;tId=72893a90-1be0-480c-8b2a-78abe00b7930">&ldquo;Мобильная платформа Windows Phone&rdquo;</a>. Поскольку продажи Windows Phone в России стартовали буквально неделю назад, этот трек будет очень интересен разработчикам, желающим попробовать себя в mobile development. Из интересных докладов рекомендую посетить <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/LarryLiberman">Лари Либермана</a> с докладом <a href="http://www.microsoft.com/ru-ru/events/teched/Catalog/Razvertyvanie-Vindovs-Phone-7-v-organizacii">&ldquo;Развертывание Windows Phone 7 в организации&rdquo;</a>, а так же, ставшие уже привычными, доклады <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/MichaelChernomordikov">Михаила Черномордикова</a>, <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/VladimirKolesnikov">Владимира Колесникова</a> и <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/KonstantinKichinskiy">Константина Кичинского</a>.</p>

<p>Получить актуальную информацию о первой конференции Tech∙Ed Russia 2011 можно по адресу <a href="http://www.msteched.ru/">http://www.msteched.ru</a>, а также подписавшись на хэш-тег твиттера <a href="http://twitter.com/#!/search?q=%23ruteched">#ruteched</a>.</p>

<p>Зарегистрироваться на первую конференцию Tech∙Ed Russia 2011 можно на официальном <a href="http://www.microsoft.com/ru-ru/events/teched/SignIn">сайте</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Создание игр на Silverlight + XNA. Часть 1. Отличия от XNA.]]></title>
    <link href="http://Ponf.github.io/blog/2011/09/Sozdanie-igr-na-Silverlight-%2B-XNA-Chastj-1-Otlichiia-ot-XNA/"/>
    <updated>2011-09-18T17:25:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/09/Sozdanie-igr-na-Silverlight-+-XNA-Chastj-1-Otlichiia-ot-XNA</id>
    <content type="html"><![CDATA[<p>С выходом обновления Mango для Windows Phone 7 и обновлением SDK, появилась возможность создавать приложения использующие обе технологии вместе. В этой статье я расскажу вам об этих возможностях и опишу процесс миграции с XNA на Silverlight+XNA.</p>

<h2>Что это даёт разработчику?</h2>

<p>В первую очередь, у разработчиков игр появились следующие возможности:</p>

<ul>
<li>Быстрое создание UI с использованием контролов из Silverlight</li>
<li>Удобная навигация между страницами, используя Navigation Service</li>
<li>Использование WebClient для интеграции различных социальных сервисов</li>
<li>Создание интерфейса в Expression Blend</li>
</ul>


<p>Причем стоит заметить, что не все страницы должны совмещать в себе и Silverlight и XNA.
Итак, что же нужно сделать с готовым приложением, чтобы оно заработало в связке Silverlight + XNA?</p>

<!--more-->


<p></p>

<h2>1. Новый проект</h2>

<p>При создании нового проекта необходимо выбрать <strong>&ldquo;Windows Phone Silverlight and XNA Application&rdquo;</strong>. Создастся новый проект с 2мя страницами <strong>MainPage</strong> и <strong>GamePage</strong>.</p>

<ul>
<li><strong>MainPage</strong> &ndash; обычная страница Silverlight-приложения, на которой располагается кнопка &ldquo;Change to game page&rdquo;, при нажатии на которую, соответственно, открывается страница <strong>GamePage</strong>.</li>
<li><strong>GamePage</strong> &ndash; как раз наша страница с XNA. Если посмотреть на содержание её xaml файла, то вместо разметки страницы там будет всего одна строчка:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!--No XAML content is required as the page is rendered entirely with the XNA Framework--&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>То есть &ldquo;XAML код не требуется, т.к. страница отображается полностью с помощью XNA Framework&rdquo;. Таким образом, когда мы захотим добавить контролы на эту страницу нам нужно будет заменить этот комментарий на наш код.
Теперь давайте рассмотрим файл GamePage.xaml.cs, в котором и находится вся логика нашего XNA приложения.</p>

<h2>Где размещаются конструкторы?</h2>

<p>Теперь давайте по порядку разберемся где какие конструкторы находятся.
* Конструктор <strong>SharedGraphicsDeviceManager </strong>(который в Silverlight/XNA приложении заменяет <strong>GraphicsDeviceManager</strong>) уже находится в файле <strong>App.xaml</strong>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!--The SharedGraphicsDeviceManager is used to render with the XNA Graphics APIs--&gt;</span>
</span><span class='line'><span class="nt">&lt;xna:SharedGraphicsDeviceManager</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Конструктор <strong>ContentManager </strong>находится в файле <strong>App.xaml.cs</strong>, но ничто не мешает вам создавать новые экземпляры <strong>ContentManager</strong>:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="c1">// Create the ContentManager so the application can load precompiled assets</span>
</span><span class='line'><span class="n">Content</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ContentManager</span><span class="p">(</span><span class="n">Services</span><span class="p">,</span> <span class="s">&quot;Content&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>GameTimer</strong> следит за прошедшим временем для каждой страницы в отдельности, он используется в методах рисования и обновления логики, но об этом немного позже.</li>
<li>Отключение фиксированных временных интервалов, за которое раньше отвечало свойство <strong>IsFixedTimestep</strong>, теперь можно организовать установив <strong>UpdateInterval </strong>в <strong>TimeSpan.Zero</strong>.</li>
<li>По умолчанию разрешение экрана составляет 480x800 пикселей в портретной ориентации и 800х480, если вы выставите ландшафтную ориентацию. Вы можете выставить разрешение для всего приложения в файле <strong>App.xaml</strong>, либо выставлять его для каждой страницы, вызывая <strong>SetSharingMode(true)</strong>.</li>
</ul>


<h2>3. Где теперь загружать контент?</h2>

<p>При совместном использовании XNA и Silverlight нет необходимости использовать отдельного метода для загрузки контента, как это было в чистом XNA приложении (<strong>LoadContent</strong>). В общем, вы можете загружать игровой контент когда хотите, однако вы должны убедиться, что во время загрузки <strong>графического </strong>контента приложение находится в режиме XNA рендеринга (вызывая метод <strong>SetSharingMode</strong>). Если вы попытаетесь загрузить графический контент во время Silverlight-рендеринга, то это вызовет исключение. Не графический контент вы можете загружать в любое время, когда у вас создан <strong>ContentManager</strong>.</p>

<p>В примерах контент обычно загружается в методе  OnNavigatedTo, после включения XNA рендеринга. Рекомендуется всегда загружать контент в данном методе, так как это безопасно, но это не обязательное требование.</p>

<h2>4. Циклы обновления и отрисовки</h2>

<p>Давайте теперь рассмотрим поподробнее циклы обработки в нашем проекте и разберемся, как происходит обновление данных в логике приложения и его отрисовка.
В первую очередь мы создаём объект типа <strong>GameTimer </strong>и указываем частоту его увеличения. Величина 333333 &ndash; стандартная для WP7 и соответствует 30 кадрам в секунду.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="nf">GamePage</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">InitializeComponent</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Get the content manager from the application</span>
</span><span class='line'>    <span class="n">contentManager</span> <span class="p">=</span> <span class="p">(</span><span class="n">Application</span><span class="p">.</span><span class="n">Current</span> <span class="k">as</span> <span class="n">App</span><span class="p">).</span><span class="n">Content</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Create a timer for this page</span>
</span><span class='line'>    <span class="n">timer</span> <span class="p">=</span> <span class="k">new</span> <span class="n">GameTimer</span><span class="p">();</span>
</span><span class='line'>    <span class="n">timer</span><span class="p">.</span><span class="n">UpdateInterval</span> <span class="p">=</span> <span class="n">TimeSpan</span><span class="p">.</span><span class="n">FromTicks</span><span class="p">(</span><span class="m">333333</span><span class="p">);</span>
</span><span class='line'>    <span class="n">timer</span><span class="p">.</span><span class="n">Update</span> <span class="p">+=</span> <span class="n">OnUpdate</span><span class="p">;</span>
</span><span class='line'>    <span class="n">timer</span><span class="p">.</span><span class="n">Draw</span> <span class="p">+=</span> <span class="n">OnDraw</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Затем в методе <strong>OnNavigatedTo </strong>мы указываем что делать при переходе на заданную страницу. В этом методе стоит загружать контент для приложения. Так как сейчас мы рассматриваем стандартный шаблон, то и загружать ничего не будем.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnNavigatedTo</span><span class="p">(</span><span class="n">NavigationEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// Set the sharing mode of the graphics device to turn on XNA rendering</span>
</span><span class='line'>    <span class="n">SharedGraphicsDeviceManager</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">GraphicsDevice</span><span class="p">.</span><span class="n">SetSharingMode</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Create a new SpriteBatch, which can be used to draw textures.</span>
</span><span class='line'>    <span class="n">spriteBatch</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SpriteBatch</span><span class="p">(</span><span class="n">SharedGraphicsDeviceManager</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">GraphicsDevice</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// TODO: use this.content to load your game content here</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Start the timer</span>
</span><span class='line'>    <span class="n">timer</span><span class="p">.</span><span class="n">Start</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">base</span><span class="p">.</span><span class="n">OnNavigatedTo</span><span class="p">(</span><span class="n">e</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Далее идут самые интересные для нас методы &ndash; <strong>OnUpdate </strong>и <strong>OnDraw</strong>. В них мы задаём логику приложения (аналог <strong>Update </strong>в чистом XNA) и выводим изображение на экран (аналог, соответственно, метода <strong>Draw</strong>).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="c1">/// Allows the page to run logic such as updating the world,</span>
</span><span class='line'><span class="c1">/// checking for collisions, gathering input, and playing audio.</span>
</span><span class='line'><span class="c1">///</span>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">OnUpdate</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">GameTimerEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// TODO: Add your update logic here</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">/// Allows the page to draw itself.</span>
</span><span class='line'><span class="c1">///</span>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">OnDraw</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">GameTimerEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">SharedGraphicsDeviceManager</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">GraphicsDevice</span><span class="p">.</span><span class="n">Clear</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">CornflowerBlue</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// TODO: Add your drawing code here</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Основное преимущество использования GameTimer таким способом является то, что можно создавать различные таймеры для главного игрового цикла и для каких-то игровых процессов. Кроме того, поскольку GameTimer использует события, можно использовать несколько различных методов для рисования и обновления логики для различных частей игры.</p>

<h2>5. Логика, использующая GameTime</h2>

<p>Если вы перестраиваете проект с чистого XNA на Silverlight+XNA, то при портировании логики, использующей <strong>GameTime </strong>могут возникнуть проблемы. Поскольку <strong>GameTime </strong>был тесно связан с <strong>Game Class</strong>, а в приложениях Silverlight+XNA используется интегрированная модель, то вам придется использовать <strong>GameTimerEventArgs</strong>, в которой хранится информация о времени, которая хранилась в <strong>GameTime</strong>.</p>

<p>Если ваше приложение использует <strong>GameTime </strong>для игровой логики, вы можете легко его портировать используя вместо <strong>Game Class</strong> (предоставляющего информацию о времени ранее) <strong>GameTime</strong>.</p>

<p>Было:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">void</span> <span class="nf">Update</span><span class="p">(</span><span class="n">GameTime</span> <span class="n">gameTime</span><span class="p">)</span> <span class="p">{}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Стало:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">void</span> <span class="nf">Update</span><span class="p">(</span><span class="n">TimeSpan</span> <span class="n">elapsedTime</span><span class="p">,</span> <span class="n">TimeSpan</span> <span class="n">totalTime</span><span class="p">)</span> <span class="p">{}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Учтите, что в данном случае под игровой логикой подразумевается подразумевается какая-то ваша логика, из дополнительных классов вашего приложения. Основной же цикл обработки (<strong>Update </strong>или <strong>OnUpdate</strong>) всё равно должны принимать либо <strong>GameTime </strong>(для приложений на XNA, использующих <strong>Game Class</strong>), либо <strong>GameTimeEventArgs </strong>(для приложений на Silverlight+XNA).</p>

<h2>6. Игровые компоненты</h2>

<p>Что делать с игровыми компонентами, если приложение, основанное на <strong>Game Class</strong> использовало <strong>GameComponents </strong>для реализации логики? К сожалению, GameComponents так же как и <strong>GameTime </strong>относятся к <strong>Game Class</strong>, поэтому их невозможно использовать в приложении Silverlight+XNA.</p>

<p>Существует несколько способов решения этой проблемы, самый простой из которых &ndash; сделать все методы публичными. В таком случае ваше приложение может просто создать список объектов и использовать их по мере необходимости, обращаясь к ним непосредственно по мере необходимости. Плюс данного способа &ndash; в простоте, так как вам не придется переписывать много кода. Минус же в том, что вы усложните логику приложения, возложив на страницы лишнюю работу.</p>

<p>Другой способ &ndash; модифицировать ваши методы таким образом, чтобы они подписывались на события <strong>Update</strong> и <strong>Draw</strong>. Это позволит вам создавать объекты, которые смогут подключаться к существующим циклам обновления и рисования, но это тесно свяжет ваш код с XNA+Silverlight фрэймворком и могут возникнуть проблемы, если вы захотите использовать этот код для Windows/XBox 360.</p>

<p>Последним, самым лучшим решением, будет переопределение базовых типов и интерфейсов для <strong>GameComponent</strong>. Это потребует большего понимания принципов работы <strong>GameComponent</strong>, но позволит вам переносить код с Windows Phone на Windows и XBox.</p>

<p><strong>В следующей статье мы создадим первое приложение, использующее компоненты Silverlight и графику XNA на одной странице.</strong></p>

<p>Материал по миграции приложений &ndash; вольный перевод с дополнениями инструкции с сайта <a href="http://create.msdn.com/en-US/education/catalog/article/migration_guide_moving_to_silverlight_xna">create.msdn.com</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Вечерняя школа по Windows Phone 7]]></title>
    <link href="http://Ponf.github.io/blog/2011/09/Vecherniaia-shkola-po-Windows-Phone-7/"/>
    <updated>2011-09-06T13:06:00+00:00</updated>
    <id>http://Ponf.github.io/blog/2011/09/Vecherniaia-shkola-po-Windows-Phone-7</id>
    <content type="html"><![CDATA[<p>В четверг 8 сентября в офисе Microsoft начинает свою работу вечерняя школа, посвященная разработке под Windows Phone 7.Занятия будут проходить 8, 15, 22 и 29 сентября в офисе Microsoft в Крылатском.
Начало занятий &ndash; 19:00, с собой приносить ноутбук с установленными <a href="http://create.msdn.com/en-us/home/getting_started">средствами разработки</a>.</p>

<p>Официальный анонс в <a href="http://blogs.msdn.com/b/stasus/archive/2011/09/05/windows-phone-evening-school.aspx">блоге Стаса Павлова</a>.</p>
]]></content>
  </entry>
  
</feed>
