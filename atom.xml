<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[blog.ponfius.com]]></title>
  <link href="http://Ponf.github.io/atom.xml" rel="self"/>
  <link href="http://Ponf.github.io/"/>
  <updated>2014-01-28T22:37:20+04:00</updated>
  <id>http://Ponf.github.io/</id>
  <author>
    <name><![CDATA[Filipp Panfilov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Материалы к моему докладу на]]></title>
    <link href="http://Ponf.github.io/blog/2012/05/Materialy-k-moemu-dokladu-na-%23yamobile-%2B%23rwpug/"/>
    <updated>2012-05-16T20:10:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2012/05/Materialy-k-moemu-dokladu-na-#yamobile-+#rwpug</id>
    <content type="html"><![CDATA[<h2>Презентация:</h2>

<iframe src="http://www.slideshare.net/ponfius/slideshelf" width="615px" height="470px" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:none;" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe>


<p><span>Исходники: <a href="https://skydrive.live.com/redir.aspx?cid=a2567e038f37be43&amp;amp;resid=A2567E038F37BE43!1260&amp;amp;parid=A2567E038F37BE43!463">Примеры 1, 2 и 3</a>.</span></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Немного о разработке под Win8]]></title>
    <link href="http://Ponf.github.io/blog/2012/04/Nemnogo-o-razrabotke-pod-Win8/"/>
    <updated>2012-04-01T22:58:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2012/04/Nemnogo-o-razrabotke-pod-Win8</id>
    <content type="html"><![CDATA[<p>На прошлой неделе после твита <a href="https://twitter.com/#!/shwars">@shwars</a></p>

<p><img src="http://2.bp.blogspot.com/-fcsTfHDMTjA/T3SnoafGoZI/AAAAAAAAALo/ZhzPLTUT1uA/s1600/%D0%A1%D0%BD%D0%B8%D0%BC%D0%BE%D0%BA.PNG">
под давлением совести было принято решение срочно сделать клиент для нашего проекта <strong>Imagine Cup</strong> для <strong>Windows 8</strong>. У меня уже был готов полностью работоспособный клиент под <strong>Windows Phone</strong>, так что это не должно было занять много времени. И действительно, суммарно я управился часов за 20. Под катом некоторые подробности о разработке в целом, использовании <strong>Bing Map SDK</strong> for Win8, <strong>Remote debugging</strong> и прочих моментах, с которыми я столкнулся.</p>

<!--more-->


<p></p>

<h2>0. Главная проблемаГлавная проблема, с которой я столкнулся &ndash; отсутствие библиотек. Хоть <strong>NuGet</strong> и работает отлично с <strong>VS11</strong>, но нет библиотек, к которым я так привык (например, мой любимый REST-клиент <strong>RestSharp</strong>), так что пришлось писать собственную имплементацию. Но не всё так плохо: постепенно появляются сборки библиотек по .NET 4.5, например обновление<strong> Json.NET</strong> вышло за пару дней до написания моего приложения :)</h2>

<p><u><strong>Основной совет:</strong></u> будьте готовы к изобретению велосипедов.</p>

<h2>1. Metro Grid ApplicationПо-моему все люди, которые создают проект на основе <strong>Metro Grid</strong> больше времени тратят на попытку разобраться в верстке, нежели на написание кода. Что не удивительно: шаблон этот очень хорош, поддерживает всевозможные состояния (на весь экран, припаркованное и т.д.). Безусловно, это очень круто, но слишком сложно для восприятия. Но этот урок я прошел ещё на <strong>Win8 </strong>хакатоне, когда разрабатывал приложение для чтения газеты <strong>Коммерсантъ</strong>.</h2>

<p><u><strong>Основной совет:</strong></u> если вас поджимают сроки, то лучше создавайте пустой проект. Если же нет &ndash; обязательно разберитесь в шаблоне<strong> Metro Grid Application</strong>.</p>

<h2>2. Bing Maps SDK для Windows 8Контрол карт пока что не входит в стандартную поставку <strong>Visual Studio 11</strong>, так что нужно устанавливать его отдельно. Из этого следует огромный <strong>FACEPALM</strong>, но об этом в следующем пункте. Подробнее о работе с контролом вы можете прочитать в <strong><a href="http://habrahabr.ru/post/139681/">статье</a> </strong>Игоря Сычева, я же расскажу о том, через что мне пришлось пройти, чтобы приложение заработало.Первое это то, что контрол <map> не может быть контейнером. То есть пушпины нужно добавлять через <strong>MapLayer</strong>. Ладно, не велика беда, идем дальше.</map>Если у вас на странице несколько контролов карты, то <strong>MapLayer </strong>начинает сходить с ума и перестает понимать, к какой карте относится.  Это уже меня довольно расстроило, на StackOverflow ответа не нашлось.Пришлось отказаться от этой концепции, продолжил дальше разработку. На странице деталей так же сделал карту, и теперь при переходе между страницами приложение начало падать. Причем не всегда, причину падения мне удалось диагностировать только в день выступления. На сколько я понял, если у вас на текущей карте не загрузился провайдер словаря карт (надпись <strong>(с) 2010 NAVTEQ</strong>) и вы перешли на другую страницу с картой &ndash; приложение падает.Опять же эта инфа не 100%, но другого объяснения я пока найти не смог.</h2>

<p><u><strong>Основной совет:</strong></u> не забывайте, что <strong>Bing Maps SDK</strong> для <strong>WinRT </strong>пока что в стадии Beta.</p>

<h2>3. Remote DebuggingВ <strong>Visual Studio 11</strong>, как вы могли заметить, есть 3 вида отладки: на текущем устройстве, на симуляторе (<strong>не путать с эмулятором!</strong>) и на удаленной машине.  Поскольку планшет я получил вечером перед выступлением, очень не хотелось ставить на него студию (кстати вышел отдельный квест) и прочий софт. Я попробовал сделал <strong>Install Package</strong> на рабочем компьютере и задеплоить его на планшете. Этот план провалился, так как на планшете не было сертификата разработчика (о чем мне услужливо подсказала консолька с логом). Планом &ldquo;Б&rdquo; был как раз <strong>Remote Debugging</strong>, но и с ним всё вышло совсем не так, как хотелось бы.Для того, чтобы задеплоить проект из студии на удаленную машину (в дальнейшем &ldquo;жертва&rdquo;), нужно чтобы они находились в одной сети, что вполне логично и удобно. В <strong>MSDN </strong>есть подробная <a href="http://msdn.microsoft.com/en-us/library/bt727f1t(v=vs.110"><strong>статья</strong></a>.aspx), описывающая как настроить оба устройства. При установке на жертву <strong>Remote Debugger</strong>, устанавливается и сертификат, который в будущем позволяет деплоить приложения, используя bat-файл.Я всё установил, настроил, компьютер практически сразу нашел жертву, я нажал кнопку <strong>F5</strong> и у меня на планшете появился <strong>Splash Screen</strong> моего приложения! Но счастье продолжалось не долго, кроме <strong>Splash Screen</strong> я так ничего и не увидел: приложение упало. Я немного поковырялся и понял, что проблема в отсутствии<strong> Bing SDK</strong> на жертве. Вспомнив обещание на каком-то из докладов по <strong>Win8</strong>, что все пакеты будут представлять из себя самодостаточные и независимые модули, я создал заново <strong>Install Package</strong> на компьютере, перекинул его на планшет и он отлично установился, найдя сертификат, установленный вместе с <strong>Remote Debugger</strong>.Но приложение снова ничего кроме <strong>Splash Screen</strong> мне не показало, поэтому я понял, что нужно ставить <strong>Bing SDK</strong> для <strong>WinRT</strong> на планшет.</h2>

<p><strong><span>ОГРОМНОЕ СПАСИБО ЛЮДЯМ, КОТОРЫЕ СДЕЛАЛИ ЭТОТ SDK КАК РАСШИРЕНИЕ К СТУДИИ, А НЕ ОТДЕЛЬНЫЙ ИНСТАЛЛЯТОР!</span></strong><strong><span></span></strong>Как вы поняли, время шло к утру, а мне нужно было ставить <strong>Visual Studio 2011</strong> на планшет&hellip;
<strong><u>Основной совет:</u></strong> <strong>Remote Debugging</strong> работает замечательно, но, боюсь, вам всё равно придется ставить студию на удаленную машину.</p>

<h2>4. Установка Visual Studio 11На планшет у меня студия встала попытки с 3 или 4, до этого <strong>Windows 8</strong> вываливалась в <strong>BSOD</strong>, что мне просто убило, так как на ноутбуке за месяц я так ни разу синий экран с грустным смайлом не увидел. Меня это довольно озадачило, но я вдруг заметил, что <strong>BSOD </strong>вылетает как только я касаюсь планшета. Собственно, виной всему оказался акселерометр/гироскоп. Если положение планшета не менять или заблокировать поворот экрана (не проверял, но вдруг поможет :) ), то студия устанавливается замечательно!</h2>

<p><strong><u>Основной совет:</u></strong>  Если ставите <strong>VS 2011</strong> на устройство с датчиками положения &ndash; лучше не шевелитесь :)</p>

<p>Несмотря на все проблемы, которые я нашел, разработка <strong>WinRT </strong>приложений мне очень понравилась. Думаю, разработчикам на <strong>Windows Phone</strong> не составит труда разобраться в нем и портировать свои приложения. Ну а вот что получилось у меня:</p>

<p><img src="http://4.bp.blogspot.com/-vb_Xiyxt504/T3ik4-OKVXI/AAAAAAAAALw/2ikwC4DraoM/s640/newScreen.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Краткий обзор Windows 8 Consumer Preview]]></title>
    <link href="http://Ponf.github.io/blog/2012/02/Kratkii-obzor-Windows-8-Consumer-Preview/"/>
    <updated>2012-02-29T23:41:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2012/02/Kratkii-obzor-Windows-8-Consumer-Preview</id>
    <content type="html"><![CDATA[<p>Как многие уже слышали, сегодня <strong>Microsoft</strong> на <strong>MWC</strong> представили <strong>Windows 8 Consumer Preview</strong>.</p>

<p>Вы можете скачать её совершенно бесплатно с сайта <strong>Microsoft</strong>: <a href="http://windows.microsoft.com/en-US/windows-8/iso">http://windows.microsoft.com/en-US/windows-8/iso</a></p>

<p><strong>Ключ</strong>: DNJXJ-7XBW8-2378T-X22TX-BKG7J</p>

<p>Для тех, у кого нет DVD-ROM, болванки или ещё чего-то, можно совершить установку с флешки с помощью этой утилиты: <a href="http://images2.store.microsoft.com/prod/clustera/framework/w7udt/1.0/en-us/Windows7-USB-DVD-tool.exe">http://images2.store.microsoft.com/prod/clustera/framework/w7udt/1.0/en-us/Windows7-USB-DVD-tool.exe</a>
Итак, первые ощущения.</p>

<!--more-->


<p></p>

<p><span><strong>Установка и запуск</strong></span>
У меня <strong>Windows 8</strong> ставилась примерно 15 минут (версия x64), с учетом ввода <strong>LiveID</strong> и прочего. Ставил я на соседний логический диск, рядом с <strong>Windows 7</strong>.
Первое, что бросилось в глаза &ndash; экран выбора операционной системы при загрузке. Я сначала не поверил своим глазам, но <strong><span>он стал красивым</span></strong>!</p>

<table cellspacing="0" cellpadding="0" align="center">
<tbody>
<tr>
<td><a href="http://2.bp.blogspot.com/-A2H6JRGwjhM/T05zpyRRguI/AAAAAAAAAKc/QbRH1Sm4izg/s1600/WP_000274.jpg"><img alt="" src="http://2.bp.blogspot.com/-A2H6JRGwjhM/T05zpyRRguI/AAAAAAAAAKc/QbRH1Sm4izg/s400/WP_000274.jpg" width="400" height="298" border="0" /></a></td>
</tr>
<tr>
<td>Окно выбора системы</td>
</tr>
</tbody>
</table>


<p>После входа в систему пользователь видит <span style="text-decoration: line-through;">рабочий стол</span> список установленных <strong>Metro</strong> приложений. А может и не только <strong>metro</strong>, т.к. у меня там появилась <strong>VS</strong> после установки.</p>

<table cellspacing="0" cellpadding="0" align="center">
<tbody>
<tr>
<td><a href="http://3.bp.blogspot.com/-Bdjt1tMqG_c/T051kzrdUlI/AAAAAAAAAKk/L1JAqUeVcVE/s1600/3.png"><img alt="" src="http://3.bp.blogspot.com/-Bdjt1tMqG_c/T051kzrdUlI/AAAAAAAAAKk/L1JAqUeVcVE/s640/3.png" width="640" height="356" border="0" /></a></td>
</tr>
<tr>
<td>Стартовый экран</td>
</tr>
</tbody>
</table>


<p>Первым делом я поставил качаться <strong>VS11 Beta</strong> (не входит в комплект, в отличии от <strong>Developer Preview</strong>) и пошел смотреть на <strong>Windows Store</strong>. Могу сказать 2 вещи:</p>

<ol>
    *Сделано довольно приятно, по аналогии с **Windows Phone**.
    ***Нужно писать программы! Срочно!** В Store сейчас практически пусто и есть неплохой шанс подзаработать разработчикам.
</ol>


<p>Хотя, конечно же, уже есть некоторые популярные программы. Например, Evernote:</p>

<table cellspacing="0" cellpadding="0" align="center">
<tbody>
<tr>
<td><a href="http://1.bp.blogspot.com/-ZlrxxyKPOQU/T053PcEYv2I/AAAAAAAAAKs/ljKOTNKbXsk/s1600/180x150_O365_MidMarket_V2_Tryitfree_12_21_11.gif"><img alt="" src="http://1.bp.blogspot.com/-ZlrxxyKPOQU/T053PcEYv2I/AAAAAAAAAKs/ljKOTNKbXsk/s640/180x150_O365_MidMarket_V2_Tryitfree_12_21_11.gif" width="640" height="356" border="0" /></a></td>
</tr>
<tr>
<td>Metro Evernote</td>
</tr>
</tbody>
</table>


<p>Или, известная игра <strong>Cut the Rope</strong> (подозреваю, что на HTML5 :) )</p>

<p><a href="http://3.bp.blogspot.com/-HLNSWxahcYI/T054EfLqNHI/AAAAAAAAAK0/LFL0bz0bYZg/s1600/1.png"><img alt="" src="http://3.bp.blogspot.com/-HLNSWxahcYI/T054EfLqNHI/AAAAAAAAAK0/LFL0bz0bYZg/s640/1.png" width="640" height="356" border="0" /></a>
Помимо интерфейса metro, в <strong>Win8</strong> присутствует и классический интерфейс. Если, конечно, классическим можно назвать интерфейс без кнопки &ldquo;<strong>Пуск</strong>&rdquo; :).</p>

<p><a href="http://3.bp.blogspot.com/-pP16kI_Zy2I/T055J1K8j_I/AAAAAAAAAK8/thn7qA2l6GI/s1600/4.png"><img alt="" src="http://3.bp.blogspot.com/-pP16kI_Zy2I/T055J1K8j_I/AAAAAAAAAK8/thn7qA2l6GI/s640/4.png" width="640" height="356" border="0" /></a>
Ну а <strong>Visual Studio 11</strong> встретила меня новым непривычным монохромным интерфейсом. Я ещё не смотрел разработку <strong>metro</strong> приложений, надеюсь, найдется время завтра.</p>

<p><a href="http://1.bp.blogspot.com/-CCvWnFcZXpM/T056rfsH7hI/AAAAAAAAALE/KuFR82Fbxv0/s1600/5.png"><img alt="" src="http://1.bp.blogspot.com/-CCvWnFcZXpM/T056rfsH7hI/AAAAAAAAALE/KuFR82Fbxv0/s640/5.png" width="640" height="358" border="0" /></a>
Из основных впечатлений:</p>

<ul>
    *Смесь классического и metro интерфейсов смотрится пока что (после полутора часов использования) очень непривычно. Как отдельные сущности вроде бы уже стали привычны, но такая смесь пока что минимум непонятна. Например, долго искал кнопку выключения %).
    *Работает всё очень шустро, но не хватает тачскрина на ноутбуке. Без этого как-то теряется полнота ощущений от **Metro**, но выглядит всё равно очень круто.
    *Авторизация в системе по **LiveID** - авторизован на всех сервисах **live.com**. Довольно удобно.
    *Есть мнение, что новый дизайн **Visual Studio** ориентирован на дисплеи **E-Ink**))
    *Очень сложно найти привычные приложения вроде **Paint** и т.п. Нужно в боковой панели использовать поиск.
</ul>


<p>Надеюсь найти ответы на все оставшиеся вопросы на <strong>Windows 8 Camp</strong>, проходящий в эту пятницу, 2 марта.
Если у вас нет возможности его посетить, присоединяйтесь к трансляции: <a href="http://www.microsoft.com/ru-ru/events/windows8camp/">http://www.microsoft.com/ru-ru/events/windows8camp/</a></p>

<p>P.S.: выключение находится на боковой панели во вкладке Settings (как связаны настройки с выключением??).</p>

<p>P.P.S.: Если будет планшет типа Asus Transformer с Win8 на борту и на нем будет запускаться студия &ndash; возьму безо всяких сомнений :).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Все о Splash Screen в Windows Phone]]></title>
    <link href="http://Ponf.github.io/blog/2012/02/Vse-o-Splash-Screen-v-Windows-Phone/"/>
    <updated>2012-02-25T13:17:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2012/02/Vse-o-Splash-Screen-v-Windows-Phone</id>
    <content type="html"><![CDATA[<p>Какое бы вы приложение не писали, даже самое простое, его запуск на телефоне будет занимать некоторое время, поэтому хорошей идеей будет показывать какой-нибудь Splash Screen во время загрузки. Существует несколько вариантов использования Splash Screen:</p>

<ul>
    *<span>Использовать изображение</span>
    *<span>Использовать анимированный Splash Screen</span>
    *<span>Не использовать Splash Screen</span>
</ul>


<p>&nbsp;</p>

<p>Давайте поподробнее остановимся на каждом из этих пунктов.</p>

<!--more-->


<p></p>

<p><span>Использование изображения </span>
При создании проекта в Visual Studio у вашего приложения уже есть Splash Screen по-умолчанию:</p>

<p><a href="http://1.bp.blogspot.com/-NPNjM2xI4Iw/T0nuhjRsEoI/AAAAAAAAAKM/Y6Eys9BCasA/s1600/SplashScreenImage.jpg"><img alt="" src="http://1.bp.blogspot.com/-NPNjM2xI4Iw/T0nuhjRsEoI/AAAAAAAAAKM/Y6Eys9BCasA/s200/SplashScreenImage.jpg" width="120" height="200" border="0" /></a>
&nbsp;</p>

<p>Для замены его на свой Splash Screen необходимо просто добавить в проект файл с именем <span>SplashScreenImage.jpg</span> (<strong>внимание</strong>: имя должно быть именно таким). Также у вашего Splash Screen  разрешение должно быть 480х800<span lang="EN-US">px</span> (480 пикселей в ширину и 800, соответственно, в высоту), и не забудьте указать в свойствах изображения <span><span lang="EN-US">Build</span><span lang="EN-US">Action</span>: <span lang="EN-US">Content</span></span>.</p>

<p><span>Использование анимированного Splash Screen</span></p>

<p>Если загрузка первой страницы вашего приложения занимает некоторое время (например, используются какие-то данные из Интернета), то создание анимированного экрана загрузки – так же хорошая идея. Итак, алгоритм работы  будет следующий:</p>

<ol>
    *При загрузке изображения показывается <span>SplashScreenImage.jpg </span>
    *После загрузки открывается **MainPage **с открытым **Popup **окном, развернутым на весь экран. Этот **Popup **может быть основан на вашем **SplashScreenImage **для создания наилучшего эффекта
    *Как только загрузка данных закончится – **Popup **закроется, и пользователь увидит содержимое **MainPage**.
</ol>


<p>Как вы можете заметить, термин «анимированный Splash Screen» на самом деле не совсем верен: мы используем обычный статический экран заставки, а потом просто показываем пользователю страницу, похожую на экран заставки, тем временем выполняя в фоне какие-нибудь действия.
&nbsp;</p>

<p>Для того чтобы наша загрузка выполнялась в отдельном потоке мы будем использовать класс <a href="http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker(VS.95"><strong>BackgroundWorker</strong></a>.aspx). Этот класс позволяет делать какую-то работу в фоне, оставляя UI отзывчивым для пользователя. Также у нас будет возможность отслеживать состояние фонового процесса и убрать <strong>Popup </strong>при наступлении какого-нибудь события.
&nbsp;</p>

<p>Для начала давайте создадим свой UserControl, для примера назовем его <strong>AnimatedSplashScreen</strong>.</p>

<p>Далее нам нужно добавить обработку <strong>Popup </strong>в <span>MainPage.xaml.cs</span>. Для этого добавим следующие пространства имен:</p>

<pre>using System.Threading;
using System.Windows.Controls.Primitives;
using System.ComponentModel;</pre>


<p>Теперь необходимо создать <span lang="EN-US">BackgroundWorker </span>и наш <span lang="EN-US"><span lang="EN-US">Popup:</span></span></p>

<pre>BackgroundWorker backroungWorker;
        Popup myPopup;
        // Constructor
        public MainPage()
        {
            InitializeComponent();
            myPopup = new Popup() { IsOpen = true, Child = new AnimatedSplashScreen() };
            backroungWorker = new BackgroundWorker();
            RunBackgroundWorker();
        }

        private void RunBackgroundWorker()
        {
            backroungWorker.DoWork += ((s, args) =&gt;
            {
                Thread.Sleep(5000);
            });

            backroungWorker.RunWorkerCompleted += ((s, args) =&gt;
            {
                this.Dispatcher.BeginInvoke(() =&gt;
                {
                    this.myPopup.IsOpen = false;
                }
            );
            });
            backroungWorker.RunWorkerAsync();
        }</pre>


<p>Что мы здесь делаем:</p>

<ol>
    *Создаем **Popup**, по-умолчанию открытый, который содержит наш UserContol – **AnimatedSplashScreen**;
    *Создаем **BackgroundWorker**, который в фоне замораживает поток на 5000 мс.
    *Как только 5 секунд проходит, **BackgroundWorker **переходит в состояние **RunWorkerCompleted **и наш **Popup **закрывается.
</ol>


<p>&nbsp;</p>

<p>Основная логика есть, теперь давайте вернемся к содержимому нашего <strong>Popup</strong>. У себя в примере я использую изображение <strong>SplashScreenImage</strong>, <strong><span lang="EN-US">TextBlock</span> </strong>и <strong><span lang="EN-US">PerformanceProgressBar</span> </strong>из <strong><a href="http://silverlight.codeplex.com/releases/view/75888">WP7 Toolkit</a></strong>.</p>

<p>Для того чтобы немного оживить загрузку, я в <strong>Expression Blend</strong>создал анимацию мигания для текста:</p>

<p>Теперь осталось только добавить и запустить эту анимацию в конструкторе класса AnimatedSplashScreen:</p>

<pre>        public AnimatedSplashScreen()
        {
            InitializeComponent();
            Storyboard Blinking = this.Resources["Blinking"] as Storyboard;
            Blinking.Begin();
        }</pre>


<p>&nbsp;</p>

<p><span lang="EN-US">Всё, наш анимированный <strong>Splash Screen</strong> готов! </span>Запустив проект, мы увидим следующую картину:</p>

<p><a href="http://1.bp.blogspot.com/-2gjXoRFZl_E/T0n2-jZ0b5I/AAAAAAAAAKU/q0ggrmwHG4E/s1600/screen.png"><img alt="" src="http://1.bp.blogspot.com/-2gjXoRFZl_E/T0n2-jZ0b5I/AAAAAAAAAKU/q0ggrmwHG4E/s320/screen.png" width="192" height="320" border="0" /></a></p>

<p>Пример моего анимированного<strong> Splash Screen</strong> вы можете скачать по ссылке: <a href="https://skydrive.live.com/redir.aspx?cid=a2567e038f37be43&amp;amp;resid=A2567E038F37BE43!512&amp;amp;parid=A2567E038F37BE43!463">SkyDrive</a>.</p>

<p>В качестве альтернативы <strong><span lang="EN-US">Popup</span> </strong>можно использовать отдельную страницу, но тогда нужно предусмотреть чтобы при нажатии на кнопку <strong>Назад </strong>пользователь выходил из приложения, а не попадал снова на страницу загрузки. Это можно сделать, например, удалив страницу из стека навигации:</p>

<pre>if (NavigationService.CanGoBack == true)
 {
 NavigationService.RemoveBackEntry();
 }</pre>


<p><span>Не использовать Splash Screen </span>
Для того чтобы убрать у вашего приложения экран заставки, достаточно просто удалить файл <span>SplashScreenImage.jpg</span> из вашего решения.</p>

<p>Итак, мы рассмотрели различные варианты создания Splash Screen в Windows Phone. Надеюсь, что эта статья оказалась для вас полезной :).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Шпаргалка по сертификации приложения на WP7]]></title>
    <link href="http://Ponf.github.io/blog/2011/12/Shpargalka-po-sertifikatcii-prilozheniia-na-WP7/"/>
    <updated>2011-12-26T13:40:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/12/Shpargalka-po-sertifikatcii-prilozheniia-na-WP7</id>
    <content type="html"><![CDATA[<p>Выкладываю давно обещанную шпаргалку по сертификации приложений на Windows Phone. Эта шпаргалка &ndash; краткое содержимое одной из моих прошлых <a href="http://mne.p0x.ru/2011/08/windows-phone-7.html">статей</a>.&nbsp;</p>

<p><a href="http://3.bp.blogspot.com/-a1neQybjK9U/Tvg_jvd_z0I/AAAAAAAAAJs/loz_YHZjVLo/s1600/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA.PNG"><img alt="" src="http://3.bp.blogspot.com/-a1neQybjK9U/Tvg_jvd_z0I/AAAAAAAAAJs/loz_YHZjVLo/s400/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA.PNG" width="400" height="286" border="0" /></a>
В этой шпаргалке я постарался поместить на одной странице все основные требования, на которые стоит обратить внимание при публикации приложения. Конечно же, поместить все требования на одной странице не представляется возможным, поэтому за более подробной информацией необходимо идти по ссылке: <a href="http://msdn.microsoft.com/en-us/library/hh184843(v=VS.92">Application Certification Requirements for Windows Phone</a>.aspx).</p>

<p><a href="https://skydrive.live.com/redir.aspx?cid=a2567e038f37be43&amp;amp;resid=A2567E038F37BE43!464&amp;amp;parid=A2567E038F37BE43!463"><strong><span>Скачать</span></strong></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Скрытые смайлы в Windows Phone]]></title>
    <link href="http://Ponf.github.io/blog/2011/12/Skrytye-smaily-v-Windows-Phone/"/>
    <updated>2011-12-23T15:13:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/12/Skrytye-smaily-v-Windows-Phone</id>
    <content type="html"><![CDATA[<p>Кстати, а вы знали, что в Windows Phone есть скрытые смайлы? Достаточно отправить другу с Windows Phone какую-нибудь комбинацию, из представленных ниже, чтобы он получил забавную картинку :)&nbsp;</p>

<p><a href="http://4.bp.blogspot.com/-1i0pQW92DII/TvRh_NiGSFI/AAAAAAAAAJI/DsQa5b4nl08/s1600/2678.Complete-1_thumb_1A1CA41C.png"><img alt="" src="http://4.bp.blogspot.com/-1i0pQW92DII/TvRh_NiGSFI/AAAAAAAAAJI/DsQa5b4nl08/s640/2678.Complete-1_thumb_1A1CA41C.png" width="475" height="640" border="0" /></a>
Вторая часть смайлов:</p>

<!--more-->


<p></p>

<p><a href="http://3.bp.blogspot.com/-64MqCZBms08/TvTF8Va_85I/AAAAAAAAAJU/GWUwe88353U/s1600/5226.emoticons2_lg_thumb_09D8E8AC.jpg"><img alt="" src="http://3.bp.blogspot.com/-64MqCZBms08/TvTF8Va_85I/AAAAAAAAAJU/GWUwe88353U/s1600/5226.emoticons2_lg_thumb_09D8E8AC.jpg" border="0" /></a>
&nbsp;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Как склеить несколько Texture2D / Howto merge few Texture2D]]></title>
    <link href="http://Ponf.github.io/blog/2011/12/Kak-skleitj-neskoljko-Texture2D--Howto-merge-few-Texture2D/"/>
    <updated>2011-12-16T18:19:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/12/Kak-skleitj-neskoljko-Texture2D&#8211;Howto-merge-few-Texture2D</id>
    <content type="html"><![CDATA[<p><div dir="ltr">
<div dir="ltr">Решил попробовать написать этот пост и на русском, и на английском, так как очень долго гуглил о том как склеить несколько текстур формата <span>Texture2D</span> и сохранить результат, но не нашел ничего подходящего: либо метод не поддерживался в Windows Phone, либо меня не устраивала его производительность.&nbsp;</p>

<p><span><strong>Проблема</strong></span>
Есть несколько текстур с разными координатами, находящиеся на разных уровнях и никак друг с другом не связанные. Необходимо экспортировать это в фото галерею в виде изображения.</p>

<p><span><strong>Решение</strong></span>
В общем-то задача действительно не сложная, но сходу не понятно, как её решить. Нужно как-то склеить все текстуры в одну. И тут нам на помощь приходит класс из XNA под названием <a href="http://msdn.microsoft.com/en-us/library/bb198676.aspx"><span>RenderTarget2D</span></a>.
<!--more--></p>

<p><ol start="42"></p>

<pre><code>*&lt;span&gt;RenderTarget2D&lt;/span&gt; imageResult;
</code></pre>

<p></ol></p>

<p>Как можно понять из названия, с помощью этого класса, наследующегося от <span>Texture2D</span>, мы создаем двумерную текстуру, которую потом можно использовать в выборе цели для рендеринга.
По-умолчанию целью для рендеринга является дисплей:</p>

<p><ol start="75"></p>

<pre><code>*&lt;span&gt;// Set the sharing mode of the graphics device to turn on XNA rendering&lt;/span&gt;
*&lt;span&gt;SharedGraphicsDeviceManager&lt;/span&gt;.Current.GraphicsDevice.SetSharingMode(&lt;span&gt;true&lt;/span&gt;);
*
*&lt;span&gt;// Create a new SpriteBatch, which can be used to draw textures.&lt;/span&gt;
*spriteBatch = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;SpriteBatch&lt;/span&gt;(&lt;span&gt;SharedGraphicsDeviceManager&lt;/span&gt;.Current.GraphicsDevice);
</code></pre>

<p></ol></p>

<p>При разработки игры с использованием XNA+Silverlight установка цели для рендера происходит в методе <span>OnNavigatedTo()</span>, и вся дальнейшая отрисовка будет производиться, соответственно, на дисплей. Так что для того, чтобы отрендерить все на другую текстуру достаточно просто указать её в <span>SpriteBatch</span>:</p>

<p><ol start="462"></p>

<pre><code>*imageResult = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;RenderTarget2D&lt;/span&gt;(&lt;span&gt;SharedGraphicsDeviceManager&lt;/span&gt;.Current.GraphicsDevice, photoW, photoH);
*&lt;span&gt;SharedGraphicsDeviceManager&lt;/span&gt;.Current.GraphicsDevice.SetRenderTarget(imageResult);
</code></pre>

<p></ol></p>

<p>Если мы вставим этот код так же в метод <span>OnNavigatedTo()</span>, то весь вывод информации будет производиться не на дисплей, а в нашу текстуру. Нам этого не нужно, так что необходимо менять цель для рендеринга по какому-то определенному событию, например, по нажатию на кнопку. Далее мы отрисовываем все наши текстуры, как мы бы это делали обычно в методе <span>OnDraw()</span>:</p>

<p><ol start="464"></p>

<pre><code>*spriteBatch.Begin();
*bg.Draw(spriteBatch, &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Vector2&lt;/span&gt;((&lt;span&gt;int&lt;/span&gt;)(photoW / 2), (&lt;span&gt;int&lt;/span&gt;)(photoH / 2)));
*&lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;Sprite&lt;/span&gt; sprite &lt;span&gt;in&lt;/span&gt; sprites)
*{
*    sprite.Draw(spriteBatch, &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Vector2&lt;/span&gt;((&lt;span&gt;int&lt;/span&gt;)(photoW / 2), (&lt;span&gt;int&lt;/span&gt;)(photoH / 2)), bg.Scale);
*}
*spriteBatch.End();
</code></pre>

<p></ol></p>

<p>После того, как мы закончили отрисовывать наши текстуры необходимо освободить наше устройство для рендеринга, чтобы оно вернулось к отрисовке на экране. Для этого достаточно передать в <span>null </span>в метод <span>SetRenderTarget</span>:</p>

<p><ol start="471"></p>

<pre><code>*&lt;span&gt;SharedGraphicsDeviceManager&lt;/span&gt;.Current.GraphicsDevice.SetRenderTarget(&lt;span&gt;null&lt;/span&gt;);
</code></pre>

<p></ol></p>

<p>Всё! Теперь мы можем сохранить наше изображение в изолированном хранилище, галерее или использовать его где-нибудь ещё.</p>

<p><ol start="474"></p>

<pre><code>*&lt;span&gt;IsolatedStorageFileStream&lt;/span&gt; stream = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;IsolatedStorageFileStream&lt;/span&gt;(&lt;span&gt;"/image.jpg"&lt;/span&gt;, System.IO.&lt;span&gt;FileMode&lt;/span&gt;.OpenOrCreate, iso);
*imageResult.SaveAsJpeg(stream, imageResult.Width, imageResult.Height);
*stream.Close();
</code></pre>

<p></ol></p>

<p>О том, как сохранить наше изображение в галерее вы можете прочитать в моей предыдущей статье &ldquo;<a href="http://mne.p0x.ru/2011/12/blog-post.html">Интеграция приложения с хабом Фото</a>&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Интеграция приложения с хабом "Фото"]]></title>
    <link href="http://Ponf.github.io/blog/2011/12/Integratciia-prilozheniia-s-khabom-Foto/"/>
    <updated>2011-12-14T14:08:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/12/Integratciia-prilozheniia-s-khabom-Foto</id>
    <content type="html"><![CDATA[<p><span><span>Однажды мне понадобилось интегрировать приложение в хаб &ldquo;Фото&rdquo; в Windows Phone 7. Что я понимаю под интеграцией:</span></span></p>

<ol start="1" type="1">
    *<span><span>Добавление приложения на главную страницу хаба;</span></span>
    *<span><span>Добавление приложения в меню &#8220;Программы&#8221; (программы, которыми можно отредактировать изображение);</span></span>
    *<span><span>Выбор в программе изображения из галереи и с камеры;</span></span>
    *<span><span>Сохранение отредактированного изображения в галерее.</span></span>
</ol>


<p><span><span>Вроде бы все понятно, в интернете много информации и никаких проблем возникнуть не должно, но на практике, к сожалению, не всё так просто.</span></span></p>

<!--more-->


<p></p>

<p><span><strong><span>1. Добавление приложения на главную страницу хаба Фото</span></strong></span></p>

<p><span>Беглый поиск <a href="http://programming4.us/mobile/3758.aspx"><span>показал</span></a>, что для интеграции приложения в хаб Pictures нам необходимо создать файл </span><span><span>Extra.xml</span></span><span><span> со следующим содержимым:</span></span></p>

<pre class="lang:xhtml decode:true">&lt;Extras&gt;
  &lt;PhotosExtrasApplication&gt;
    &lt;Enabled&gt;true&lt;Enabled&gt; 
  &lt;PhotosExtrasApplication&gt;
&lt;Extras&gt;</pre>


<p>И создать некоторый обработчик в методе OnNavigatedTo().</p>

<p>Сделал я по этой инструкции и ничего у меня не заработало. Оказалось, что с приходом WP7 Mango все немного изменилось. Таким образом, метод, приведенный выше, не работает!</p>

<p>С приходом WP7 Mango нам теперь не нужно создавать отдельный файл Extra.xml, информация о всех расширениях должна находиться в WMAppManifest.xml.</p>

<p>Для отображения нашего приложения в хабе Фото необходимо в файл WMAppManifest.xml добавить следующие строчки:</p>

<pre class="lang:xhtml decode:true">&lt;Extensions&gt;
      &lt;Extension ExtensionName="Photos_Extra_Hub" ConsumerID="{5B04B775-356B-4AA0-AAF8-6491FFEA5632}" TaskID="_default" /&gt; 
&lt;Extensions&gt;</pre>


<ol>
<li>Добавление приложения в контекстное меню хаба Фото</li>
</ol>


<p>Здесь механизм добавления приложения не отличается от добавления приложения на главную страницу хаба, только <span lang="EN-US">ExtensionName</span>будет&#8221;<span lang="EN-US">Photos</span><em><span lang="EN-US">Extra</span></em><span lang="EN-US">Viewer</span>&ldquo;, а<span lang="EN-US"> </span><span lang="EN-US">ConsumerID</span>станет&rdquo;{5<span lang="EN-US">B</span>04<span lang="EN-US">B</span>775-356<span lang="EN-US">B</span>-4<span lang="EN-US">AA</span>0-<span lang="EN-US">AAF</span>8-6491<span lang="EN-US">FFEA</span>5632}&ldquo;.</p>

<p>В итоге WMAppManifest.xml примет следующий вид:</p>

<pre class="lang:xhtml decode:true ">       &lt;Tokens&gt;
        &lt;Extensions&gt;
            &lt;Extension ExtensionName="Photos_Extra_Hub" ConsumerID="{5B04B775-356B-4AA0-AAF8-6491FFEA5632}" TaskID="_default" /&gt;
            &lt;Extension ExtensionName="Photos_Extra_Viewer" ConsumerID="{5B04B775-356B-4AA0-AAF8-6491FFEA5632}" TaskID="_default" /&gt;
        &lt;/Extensions&gt;
    &lt;/App&gt;
&lt;/Deployment&gt;</pre>


<p>&nbsp;</p>

<ol>
<li>Создание обработчика</li>
</ol>


<p>Итак, теперь мы умеем не только вызывать нашу программу из хаба, а ещё и передавать ей любое изображение. Теперь надо его обрабатывать. Для этого необходимо перегрузить метод OnNavigatedTo:</p>

<pre class="lang:c# decode:true">BitmapImage bitmap;

    protected override void OnNavigatedTo(NavigationEventArgs e)
    {
        base.OnNavigatedTo(e);

        //Get a dictionary of query string keys and values
        IDictionary&lt;string, string&gt; queryStrings = this.NavigationContext.QueryString;

        //WaitingPic.Visibility = Visibility.Collapsed;
        //Ensure at least one querysting
        if (queryStrings.ContainsKey("token"))
        {
            MediaLibrary library = new MediaLibrary();
            Picture picture = library.GetPictureFromToken(queryStrings["token"]);

            //Create bitmap
            bitmap = new BitmapImage();
            bitmap.SetSource(picture.GetImage());
            this.NavigationContext.QueryString.Clear();
        }
    }<span style="line-height: 1.5em;"> </span></pre>


<p>&nbsp;</p>

<p>Теперь мы можем делать с нашим изображением всё, что захотим :).</p>

<ol>
<li>Получение изображений из камеры и галереи
Также мы хотим осуществить в нашем приложении доступ к изображениям в галерее и, если нужное изображение отсутствует, предоставить возможность сделать фото.</li>
</ol>


<p>Для этого нам необходимо использоватьPhotoChooserTaskиCameraCaptureTask, которые находятся в пространстве имён using Microsoft.Phone.Tasks.</p>

<p>В общем случае код выглядит примерно так:</p>

<pre class="lang:c# decode:true">    private void ChoosePhoto_Click(object sender, RoutedEventArgs e)
    {
        try
        {
            selectphoto = new PhotoChooserTask();
            selectphoto.Completed += new EventHandler&lt;PhotoResult&gt;(photo_Completed);
            selectphoto.Show();
        }
        catch
        {
            MessageBox.Show("Some problem with loading your page");
            return;
        }
    }

    private void LaunchCamera_Click(object sender, RoutedEventArgs e)
    {
        CameraCaptureTask cameraCapture = new CameraCaptureTask();
        cameraCapture.Completed += new EventHandler&lt;PhotoResult&gt;(photo_Completed);
        cameraCapture.Show();
    }

    void photo_Completed(object sender, PhotoResult e)
    {
        if (e.TaskResult == TaskResult.OK)
        {
            try
            {
                bitmap = new BitmapImage();
                bitmap.UriSource = new Uri(e.OriginalFileName);
            }
            catch
            {
                MessageBox.Show("Some problem with loading your page");
            }
        }
    }</pre>


<p>Как вы можете видеть, ничего сложно в этом нет, данный код вернет нам изображение в приложение. Но мне такая реализация не очень нравится. Я предпочитаю делать следующее:</p>

<p>&nbsp;</p>

<pre class="lang:c# decode:true ">    void photo_Completed(object sender, PhotoResult e)
    {
        if (e.TaskResult == TaskResult.OK)
        {
            try
            {
                bitmap = new BitmapImage();
                bitmap.CreateOptions = BitmapCreateOptions.None;
                bitmap.ImageOpened += new EventHandler&lt;RoutedEventArgs&gt;(bitmap_ImageOpened);
                bitmap.ImageFailed += new EventHandler&lt;ExceptionRoutedEventArgs&gt;(bitmap_ImageFailed);
                bitmap.UriSource = new Uri(e.OriginalFileName);
            }
            catch 
            {
                MessageBox.Show("Some problem with loading your page");
            }
        }
    }

    public void bitmap_ImageOpened(object sender, RoutedEventArgs e)
    {
        try
        {
            //Делаем что-нибудь с нашим изображением
        }
        catch 
        {
             //Обрабатываем ошибку 
        }
    }

    public void bitmap_ImageFailed(object sender, RoutedEventArgs e)
    {
        MessageBox.Show("Problem with loading your image. Please try again.");
    }</pre>


<p>&nbsp;</p>

<p>Теперь наше приложение умеет ещё выбирать изображения из галереи и делать фотографии.</p>

<p>Осталось только сохранять результат работы в галерее.</p>

<ol>
<li>Сохранение изображения в галерее</li>
</ol>


<p>Для сохранения изображения в галерее нам во-первых необходимо подключить следующие пространства имен:</p>

<pre class="lang:c# decode:true">    using System.IO.IsolatedStorage;
    using Microsoft.Xna.Framework.Media;</pre>


<p>Теперь мы можем сохранить фотографию:</p>

<p>&nbsp;</p>

<pre class="lang:c# decode:true">    try
    {
        IsolatedStorageFileStream stream = new IsolatedStorageFileStream("/image.jpg", System.IO.FileMode.OpenOrCreate, iso);
        imageResult.SaveAsJpeg(stream, imageResult.Width, imageResult.Height);
        stream.Close();

        stream = iso.OpenFile("/image.jpg", System.IO.FileMode.Open, System.IO.FileAccess.Read);
        MediaLibrary library = new MediaLibrary();
        Picture pic = library.SavePicture("SavedPicture.jpg", stream);
        MessageBox.Show("Image saved to saved pictures album");
        stream.Close();
    }
    catch
    {
        MessageBox.Show("Some problem with saving image :(");
    }</pre>


<p>Сначала мы сохраняем изображение в изолированном хранилище. В данном примере - imageResult - экземпляр класса RenderTarget2D, который наследуется от Texture2D, у которого, в свою очередь, есть методы для сохранения в png и jpg. Мы записываем jpg файл в изолированные хранилище, затем создаем поток на чтение этого файла. Наконец, нам нужно передать поток чтения в метод SavePicture экземпляра класса <span lang="EN-US">MediaLibrary</span> для сохранения изображения в галерее. Все, изображение сохранять мы тоже научились.</p>

<ol>
<li>Заключение</li>
</ol>


<p>Мне кажется, в этой статье я рассмотрел все кейсы, которые могут пригодиться при разработке приложения для работы с фотографиями и изображениями. Возможно, я недостаточно внимания уделил задачам выбора изображения и работе с камерой, но вся эта информация есть в учебном курсе по <a href="http://msdn.microsoft.com/ru-ru/windowsphone/hh420944#mark_7">Windows Phone</a>. Если у вас остались какие-либо вопросы, не стесняйтесь задавать их в комментариях.</p>

<p>Также хочется напомнить, что сейчас идет новый цикл вечерней школы со Стасом Павловым</p>

<p><a href="http://msdn.microsoft.com/ru-ru/windowsphone/hh544009">http://msdn.microsoft.com/ru-ru/windowsphone/hh544009</a>, на которой вы можете научиться разрабатывать под Windows Phone, а так же задать все интересующие вопросы. Ближайшее занятие состоится 22 декабря, не пропустите!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Как разработчику WP7 бесплатно попасть на {.тостер}]]></title>
    <link href="http://Ponf.github.io/blog/2011/11/Kak-razrabotchiku-WP7-besplatno-popastj-na-toster/"/>
    <updated>2011-11-20T09:08:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/11/Kak-razrabotchiku-WP7-besplatno-popastj-na-toster</id>
    <content type="html"><![CDATA[<p>Вчера вечером на хабре стартовала одна очень интересная для Windows Phone разработчиков акция.Для тех, кто не в курсе &ndash; <a href="http://toster.ru/"><strong>{.тостер}</strong></a> -  проект компании «Тематические Медиа», известной на рынке как издатель проекта «Хабрахабр» — самого большого в Европе сообщества гиков, людей, интересующихся информационными технологиями.</p>

<p>Суть тостера &ndash; проведение тематических конференций. Следующая конференция, проходящая 2 декабря посвящена разработке мобильных приложений.</p>

<blockquote><span><span>.тостер {мобильные приложения} — это техническая конференция. Наша цель — дать профессионалам возможность поделиться своими знаниями.</span></span></blockquote>


<p>Вход стоит от 4 до 10 тысяч, но ребята из Microsoft решили предоставить разработчикам под WP7 возможность принять участие бесплатно :)</p>

<p><span><strong>Что для этого нужно сделать</strong></span>
1. У вас должно быть хотя бы одно опубликованное приложение
2. Вы должны быть зарегистрированы на сайте <a href="http://appprofessionals.ru/"><strong>AppProfessionals</strong></a> и разместить там ваше приложение.
3. На странице <a href="http://habrahabr.ru/special/microsoft/wp_toster/"><strong>акции</strong></a> указать ссылку на свой аккаунт и приложение.</p>

<p>Всё!
Акция проходит в период с 18 по 30 ноября.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ICQ, MRA и Twitter для Windows Phone]]></title>
    <link href="http://Ponf.github.io/blog/2011/11/ICQ-MRA-i-Twitter-dlia-Windows-Phone/"/>
    <updated>2011-11-16T11:32:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/11/ICQ-MRA-i-Twitter-dlia-Windows-Phone</id>
    <content type="html"><![CDATA[<p>Сегодня компания Mail.Ru в рамках проходящего Форума Технологий анонсировала выход 2-х своих приложений для Windows Phone: ICQ-клиента, который все так долго просили, и Mail.Ru Agent.</p>

<p><a href="http://2.bp.blogspot.com/-qv4Qck12jUw/TsOmiWp6g1I/AAAAAAAAAF4/2MIBUGgeIDo/s1600/icq_wp7_480.jpg"><img alt="" src="http://2.bp.blogspot.com/-qv4Qck12jUw/TsOmiWp6g1I/AAAAAAAAAF4/2MIBUGgeIDo/s320/icq_wp7_480.jpg" width="320" height="179" border="0" /></a><a href="http://1.bp.blogspot.com/-NSVSEBeMnJc/TsOmhigWNpI/AAAAAAAAAFw/nX98fCuqEkU/s1600/Agent_wp7_480.jpg"><img alt="" src="http://1.bp.blogspot.com/-NSVSEBeMnJc/TsOmhigWNpI/AAAAAAAAAFw/nX98fCuqEkU/s320/Agent_wp7_480.jpg" width="320" height="172" border="0" /></a></p>

<blockquote>
<blockquote><span>Windows Phone 7 - новая перспективная ОС от Microsoft для смартфонов. Для нее уже более 35 тыс. приложений, и в скором времени появятся версии ICQ и Mail.Ru Агента. Как они выглядят, вы уже можете увидеть на скриншотах. Единообразие стиля операционки делает дизайн софта под нее стильным и современным. Что касается функциональности, то будет мультипротокольность (поддержка Google, ВКонтакте, Одноклассники и т.д.), группы, смайлы и все стандартные возможности. Благодаря особенностям интерфейса WP7 можно удобно переходить от сервиса к сервису горизонтальной прокруткой экранов. Есть древовидное представление диалогов и поиск по ним. Никуда не делись статусы. При этом оба приложения будут бесплатны, как и на других платформах.</span></blockquote>
</blockquote>


<p><a href="http://hi-tech.mail.ru/news/misc/icq_agent-wp7.html"><strong>Hi-Tech.Mail.Ru</strong></a></p>

<p><span>Также сегодня вышло обновление для официального Twitter-клиента для Windows Phone.</span></p>

<p><span> </span></p>

<p><a href="http://4.bp.blogspot.com/-XtRSygjLze4/TsNm8-4HmAI/AAAAAAAAAE4/9E4uDYN93FI/s1600/primaryImage.png"><img alt="" src="http://4.bp.blogspot.com/-XtRSygjLze4/TsNm8-4HmAI/AAAAAAAAAE4/9E4uDYN93FI/s200/primaryImage.png" width="200" height="200" border="0" /></a></p>

<p>По всей видимости каких-либо серьезных изменений или новых фич в этой версии приложения не появилось. Из приятного &ndash; помимо поддержи Fast Application Switch, приложение стало доступно из России.</p>

<p><strong><span><a href="http://www.windowsphone.com/ru-RU/apps/0b792c7c-14dc-df11-a844-00237de2db9e?ppud=4&amp;amp;wa=wsignin1.0">Скачать</a></span></strong>
<strong>
</strong>
Под катом скрины</p>

<!--more-->


<p></p>

<p><a href="http://1.bp.blogspot.com/-8osNrBNbO8U/TsNu6dA0OjI/AAAAAAAAAFI/je6Du4fPvLA/s1600/60f0468f-2ac8-456e-a52d-e9fad4837133.png"><img alt="" src="http://1.bp.blogspot.com/-8osNrBNbO8U/TsNu6dA0OjI/AAAAAAAAAFI/je6Du4fPvLA/s200/60f0468f-2ac8-456e-a52d-e9fad4837133.png" width="120" height="200" border="0" /></a><a href="http://1.bp.blogspot.com/-k8EAhE1t2_4/TsNu7W-JoeI/AAAAAAAAAFQ/fXwrUogrQoM/s1600/bf036828-aa07-4c0a-8973-c46f04b6007e.png"><img alt="" src="http://1.bp.blogspot.com/-k8EAhE1t2_4/TsNu7W-JoeI/AAAAAAAAAFQ/fXwrUogrQoM/s200/bf036828-aa07-4c0a-8973-c46f04b6007e.png" width="120" height="200" border="0" /></a><a href="http://4.bp.blogspot.com/-rImztBz-Wdw/TsNu8_DrGxI/AAAAAAAAAFY/JiVkaSBh0qM/s1600/f2ce6f98-b242-4335-808e-083d80a099af.png"><img alt="" src="http://4.bp.blogspot.com/-rImztBz-Wdw/TsNu8_DrGxI/AAAAAAAAAFY/JiVkaSBh0qM/s200/f2ce6f98-b242-4335-808e-083d80a099af.png" width="120" height="200" border="0" /></a><a href="http://2.bp.blogspot.com/-teIk8MnJh5s/TsNu99gdaKI/AAAAAAAAAFg/yjAg4acX75M/s1600/fa5a9d87-7945-4827-ad10-f6736239d79c.png"><img alt="" src="http://2.bp.blogspot.com/-teIk8MnJh5s/TsNu99gdaKI/AAAAAAAAAFg/yjAg4acX75M/s200/fa5a9d87-7945-4827-ad10-f6736239d79c.png" width="120" height="200" border="0" /></a></p>

<p><a href="http://1.bp.blogspot.com/-oiA1qRPm-O0/TsNu-4hWa5I/AAAAAAAAAFo/UihzSId8qrM/s1600/ffd0974d-89f4-485a-8f1e-215ade98329c.png"><img alt="" src="http://1.bp.blogspot.com/-oiA1qRPm-O0/TsNu-4hWa5I/AAAAAAAAAFo/UihzSId8qrM/s200/ffd0974d-89f4-485a-8f1e-215ade98329c.png" width="120" height="200" border="0" /></a><a href="http://2.bp.blogspot.com/-cBRdblMPl-k/TsNu5bZh5eI/AAAAAAAAAFA/18s25sibhoo/s1600/9c3a61a3-580f-49c7-8ee3-1346eaa8c9aa.png"><img alt="" src="http://2.bp.blogspot.com/-cBRdblMPl-k/TsNu5bZh5eI/AAAAAAAAAFA/18s25sibhoo/s200/9c3a61a3-580f-49c7-8ee3-1346eaa8c9aa.png" width="120" height="200" border="0" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ноябрьский номер журнала MSDeveloper.RU]]></title>
    <link href="http://Ponf.github.io/blog/2011/11/Noiabrjskii-nomer-zhurnala-MSDeveloperRU/"/>
    <updated>2011-11-15T13:16:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/11/Noiabrjskii-nomer-zhurnala-MSDeveloperRU</id>
    <content type="html"><![CDATA[<p>Сегодня вышел ноябрьский номер журнала <strong>MSDeveloper.RU</strong>. Скачать можно по <a href="http://www.msdeveloper.ru/magazine/download.aspx/37/item-411/">ссылке</a>.
Из интересного в этом номере &ndash; репортаж с TechEd Russia, интервью с Михаилом Черномордиковым и Дмитрием Сошниковым.
Так же в этом выпуске опубликовали две мои статьи по Windows Phone 7:</p>

<ul>
    *доработанную [шпаргалку ](http://mne.p0x.ru/2011/08/windows-phone-7.html)по сертификации приложений
    *[статью ](http://mne.p0x.ru/2011/10/wp7.html)по работе с БД в WP7
</ul>


<p>К сожалению, в журнале не разместили шпаргалку, размещенную на одной странице, которую я им высылал. Обещаю на днях допилить её и выложить в блоге.</p>

<p>Ещё мы в пятницу провели первую встречу <a href="http://ug.bmstu.ru/">Bauman .NET User Group</a>, основной темой которой был Imagine Cup. К нам в гости приехали ребята из команды Oricrafter (победители Imagine Cup Россия) и рассказали о своём опыте участия. Отчет ждите также в ближайшее время =).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TechEd Russia]]></title>
    <link href="http://Ponf.github.io/blog/2011/11/TechEd-Russia/"/>
    <updated>2011-11-10T22:37:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/11/TechEd-Russia</id>
    <content type="html"><![CDATA[<table cellspacing="0" cellpadding="0" align="center">
<tbody>
<tr>
<td><a href="http://4.bp.blogspot.com/-Tie3I712RMk/TrwbUhqZhbI/AAAAAAAAAEw/QefhuCPVCdo/s1600/_DSC8798.JPG"><img alt="" src="http://4.bp.blogspot.com/-Tie3I712RMk/TrwbUhqZhbI/AAAAAAAAAEw/QefhuCPVCdo/s320/_DSC8798.JPG" width="320" height="213" border="0" /></a></td>
</tr>
<tr>
<td>Keynote. У меня бэйджик докладчика ;)</td>
</tr>
</tbody>
</table>


<p>TechEd Russia был легендарен! Фотки ждите позже, сейчас основные впечатления.</p>

<p>Да, я покрутил в руках Nokia Lumia 800 на Windows Phone 7. Это просто потрясающий девайс! Теперь выбор между Samsung и Nokia стал ещё труднее.</p>

<p>Поигрался немного с HTC Titan. Ну что сказать? Размер у него действительно очень большой :). В руке помещается нормально, но большой палец уже не всегда дотягивается до левого верхнего угла. На счёт зернистости экрана и низкого разрешения &ndash; всё ерунда. Приглядывался к изображению, зернистости не увидел.</p>

<p>Огромное спасибо Стасу Павлову за лабы и возможность принять участие в TechEd Russia, Косте Кичинскому за очень интересное конструктивное общение, Оксане за поддержку Community, студентам-партнерам за море фана и позитива, Никите за экскурсию и многим-многим другим!</p>

<p>Материалы с лабораторных работ можно скачать по <a href="https://skydrive.live.com/?cid=9282930E3ADB351A&amp;amp;id=9282930E3ADB351A!843"><strong>ссылке</strong></a>. Если будут вопросы по лабам по Windows Phone &ndash; обращайтесь, с удовольствием помогу :).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Работа с базой данных в WP7 для ленивых :)]]></title>
    <link href="http://Ponf.github.io/blog/2011/10/Rabota-s-bazoi-dannykh-v-WP7-dlia-lenivykh-%29/"/>
    <updated>2011-10-11T14:14:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/10/Rabota-s-bazoi-dannykh-v-WP7-dlia-lenivykh-)</id>
    <content type="html"><![CDATA[<p>Так уж получилось, что никогда раньше у меня не было необходимости использовать в моих проектах базы данных для хранения информации, так что все мои знания ограничивались парой посещений лекций по СУБД на втором или третьем курсе :&ndash;[.Но во время написания приложения HabraReader под Windows Phone 7 мной и моим коллегой <a href="http://twitter.com/#!/kin9pin">@kin9pin</a> было принято самое логичное решение &ndash; хранить посты в БД. Погуглив, мы нашли довольно много <a href="http://msdn.microsoft.com/ru-ru/windowsphone/hh425066#mark_15">статей</a> и <a href="http://msdn.microsoft.com/en-us/library/hh202876(v=VS.92">пошаговых инструкций</a>.aspx) по созданию и работе с  БД в Windows Phone, но всё это нас по тем или иным причинам не устраивало (например, из-за привязки к MVVM, до которого всё никак руки не доходят).</p>

<p>Но выход нашелся! Причем оказался настолько простым и элегантным, что с помощью этого решения любой сможет создать и подключить БД к своему проекту за считанные минуты.</p>

<!--more-->


<p></p>

<p><span>1. Создаём структуру базы данных</span></p>

<p>Для начала нам понадобится база данных в формате .sdf. Как её создать? Очень просто!
Идём в Visual Studio, создаём новый проект (например, Windows Forms Application)</p>

<p><a href="http://3.bp.blogspot.com/-gdQoljIac8Y/TpPquXelmsI/AAAAAAAAABQ/qXO0lz1uOIM/s1600/1.png"><img alt="" src="http://3.bp.blogspot.com/-gdQoljIac8Y/TpPquXelmsI/AAAAAAAAABQ/qXO0lz1uOIM/s640/1.png" width="640" height="448" border="0" /></a>
Добавляем новый элемент в наш проект типа &ldquo;Local Database&rdquo;</p>

<p><a href="http://3.bp.blogspot.com/-CswLeqPrTBo/TpPrhQqMxUI/AAAAAAAAABY/rNCPNEzb9CU/s1600/2.png"><img alt="" src="http://3.bp.blogspot.com/-CswLeqPrTBo/TpPrhQqMxUI/AAAAAAAAABY/rNCPNEzb9CU/s640/2.png" width="640" height="432" border="0" /></a>
Жмём Next и Finish. Далее идём в View и выбираем Server Explorer (Ctrl +W, L).
В разделе Data Connections мы видим нашу только что добавленную базу данных. Теперь мы можем создать структуру нашей будущей базы данных. Начнем с того, что добавим одну таблицу.</p>

<p><a href="http://4.bp.blogspot.com/-9tkuprH_aYA/TpPtmHVTfCI/AAAAAAAAABg/vEcuvGpC3Aw/s1600/3.png"><img alt="" src="http://4.bp.blogspot.com/-9tkuprH_aYA/TpPtmHVTfCI/AAAAAAAAABg/vEcuvGpC3Aw/s640/3.png" width="640" height="472" border="0" /></a></p>

<p>Для простейшего примера нам будет достаточно таблицы с 5 столбцами: ID (идентификатор постов, всегда уникальный, автоматически увеличивается на 1 и служит первичным ключом), Title (название поста, текст, не больше 150 символов), Description (описание поста, текст, не больше 1000 символов), Date (дата и время создания поста, тип datetime) и Link (ссылка на полную версию поста, текст, не длиннее 100 символов).
В итоге выглядит это примерно так:</p>

<p><a href="http://4.bp.blogspot.com/-t5x81PCYiYE/TpPwJ_ig_SI/AAAAAAAAABo/M79pk4ckRHs/s1600/4.png"><img alt="" src="http://4.bp.blogspot.com/-t5x81PCYiYE/TpPwJ_ig_SI/AAAAAAAAABo/M79pk4ckRHs/s640/4.png" width="640" height="504" border="0" /></a>
Теперь надо перестроить проект и на этом Visual Studio можно на некоторое время закрыть и расслабиться: самая сложная часть осталась позади :). В папке с вашим проектом появился файл MyDB.sdf. Дальнейшая работа будет проходить именно с ним, так что весь солюшн, кроме MyDB.sdf можно удалить.</p>

<p>Файл MyDB.sdf я положил в D:\Tests для большего удобства в выполнении следующего шага.</p>

<p><span>2. Создаём DataContext для работы с БД</span>
Что такое DataContext? Это некоторый класс, который служит нам для работы с БД и выполнения основных CRUD операций (create, read, update, delete). Для того, чтобы его создать нужно открыть командную строку Visual Studio:</p>

<p><span>Пуск &ndash;&gt; Все программы &ndash;&gt; Microsoft Visual Studio 2010 &ndash;&gt; Visual Studio Tools &ndash;&gt; Visual Studio Command Prompt</span></p>

<p>В командной строке с помощью утилиты SQLmetal мы сгенерируем DataContext для нашей базы данных MyDB.sdf</p>

<p><span>sqlmetal D:\Tests\MyDB.sdf /code:D:\Tests\MyDB.cs /language:csharp /namespace:DBDemo /context:MyDBContext /pluralize</span></p>

<p>В этой команде мы указали путь к нашей БД и путь, куда поместить наш DataContext, выбрали язык C#, указали название пространства имён и имя DataContext.</p>

<p><a href="http://1.bp.blogspot.com/-LBGvx5TfMNo/TpP3Z8qUfkI/AAAAAAAAABw/unmlzuVwu-4/s1600/5.png"><img alt="" src="http://1.bp.blogspot.com/-LBGvx5TfMNo/TpP3Z8qUfkI/AAAAAAAAABw/unmlzuVwu-4/s640/5.png" width="640" height="323" border="0" /></a>
Теперь в нашей папке Tests лежит файл MyDB.cs, который и является DataContext нашей БД.</p>

<p><span>3. Пример использования</span>
Давайте создадим новый проект под WP7 (обязательно укажите Windows Phone 7.1, т.к. поддержка баз данных появилась только в WP7 Mango).
В проект добавляем наш MyDB.cs, в референсы добавляем System.Data.Linq.
Единственное, что придется изменить в MyDB.cs &ndash; это namespace на пространство имён нашего проекта и удалить два следующих метода:</p>

<ol start="44">
    *<span>public</span> MyDBContext(System.Data.IDbConnection connection) :
    *        <span>base</span>(connection, mappingSource)
    *{
    *    OnCreated();
    *}
</ol>


<p>и</p>

<ol start="56">
    *<span>public</span> MyDBContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.<span>MappingSource</span> mappingSource) :
    *        <span>base</span>(connection, mappingSource)
    *{
    *    OnCreated();
    *}
</ol>


<p>так как интерфейс IDbConnection не поддерживается телефоном.</p>

<p>Следующим шагом мы создадим промежуточный Helper &ndash; класс для большего удобства работы с базой данных. При таком подходе в MyDB.cs вносить изменения больше не придётся.</p>

<ol start="16">
    *<span>public</span> <span>class</span> <span>DBHelper</span>
    *{
    *    <span>private</span> <span>const</span> <span>string</span> ConnectionString = <span>@&#8221;isostore:/ReaderDB.sdf&#8221;</span>;
    *
    *    <span>///</span><span>
</span>
    *    <span>///</span><span> Создание БД в изолированном хранилище.</span>
    *    <span>///</span>
    *    <span>public</span> <span>static</span> <span>void</span> CreateDatabase()
    *    {
    *        <span>using</span> (<span>var</span> context = <span>new</span> <span>MyDBContext</span>(ConnectionString))
    *        {
    *            <span>if</span> (!context.DatabaseExists())
    *            {
    *                <span>// create database if it does not exist</span>
    *                context.CreateDatabase();
    *            }
    *        }
    *    }
    *
    *    <span>///</span><span>
</span>
    *    <span>///</span><span> Удаление БД из изолированного хранилища.</span>
    *    <span>///</span>
    *    <span>public</span> <span>static</span> <span>void</span> DeleteDatabase()
    *    {
    *        <span>using</span> (<span>var</span> context = <span>new</span> <span>MyDBContext</span>(ConnectionString))
    *        {
    *            <span>if</span> (context.DatabaseExists())
    *            {
    *                <span>// delete database if it exist</span>
    *                context.DeleteDatabase();
    *            }
    *        }
    *    }
    *
    *    <span>///</span><span>
</span>
    *    <span>///</span><span> Добавляет статью в БД.</span>
    *    <span>///</span>
    *    <span>///</span>
    *    <span>public</span> <span>static</span> <span>void</span> AddPost(<span>Post</span> post)
    *    {
    *        <span>using</span> (<span>var</span> context = <span>new</span> <span>MyDBContext</span>(ConnectionString))
    *        {
    *            <span>if</span> (context.DatabaseExists())
    *            {
    *                context.Posts.InsertOnSubmit(post);
    *                context.SubmitChanges();
    *            }
    *        }
    *    }
    *
    *    <span>///</span><span>
</span>
    *    <span>///</span><span> Получает список статей из БД.</span>
    *    <span>///</span>
    *    <span>///</span><span>Список</span><span> статей.</span>
    *    <span>public</span> <span>static</span> <span>IList</span>&lt;<span>Post</span>&gt; GetPosts()
    *    {
    *        <span>IList</span>&lt;<span>Post</span>&gt; posts = <span>new</span> <span>List</span>&lt;<span>Post</span>&gt;();
    *
    *        <span>using</span> (<span>var</span> context = <span>new</span> <span>MyDBContext</span>(ConnectionString))
    *        {
    *            posts = (<span>from</span> emp <span>in</span> context.Posts <span>select</span> emp).ToList();
    *        }
    *        <span>return</span> posts;
    *    }
    *}
</ol>


<p>Теперь в коде можно просто вызывать статичные методы DBHelper для различного взаимодействия с БД! Например, будем создавать БД (если она отсутствует) при загрузке страницы.</p>

<ol start="34">
    *<span>private</span> <span>void</span> LayoutRoot_Loaded(<span>object</span> sender, <span>RoutedEventArgs</span> e)
    *{
    *    <span>DBHelper</span>.CreateDatabase();
    *}
</ol>


<p><span>4. Немного о ConnectionString</span>
В общем случае ConnectionString &ndash; некоторая строка, в которой могут быть указаны различные параметры для подключения к базе данных.</p>

<p><strong>Источник данных</strong>
Источник данных &ndash; параметр по-умолчанию, то есть вы можете не указывать свойство &ldquo;Data Source&rdquo;. База данных может располагаться как в изолированном хранилище, так и в директории с данными приложения.</p>

<ol start="20">
    *<span>string</span> ConnectionString = <span>@&#8221;isostore:/ReaderDB.sdf&#8221;</span>;
    *<span>string</span> ConnectionString = <span>@&#8221;appdata:/ReaderDB.sdf&#8221;</span>;
    *
    *<span>string</span> ConnectionString = <span>@&#8221;DataSource = &#8216;isostore:/ReaderDB.sdf&#8217;;&#8221;</span>;
    *<span>string</span> ConnectionString = <span>@&#8221;DataSource = &#8216;appdata:/ReaderDB.sdf&#8217;;&#8221;</span>;
</ol>


<p><strong>Пароль</strong>
Пароль используется чтобы зашифровать базу данных при создании и так же его необходимо указывать при подключении к ней. Максимальная длина пароля &ndash; 40 символов.</p>

<ol start="26">
    *<span>string</span> ConnectionString = <span>@&#8221;Data Source = &#8216;isostore:/ReaderDB.sdf&#8217;; Password = &#8216;mypassword&#8217;;&#8221;</span>;
</ol>


<p><strong>Режим</strong>
Существуют 4 режима открытия БД (&ldquo;Read Write&rdquo;, &ldquo;Read Only&rdquo;, &ldquo;Exculsive&rdquo; и &ldquo;Shared Read&rdquo;), которые обозначают вид доступа.</p>

<ol start="22">
    *<span>// Позволяет нескольким процессам читать и писать в БД одновременно. Это режим по-умолчанию.</span>
    *<span>string</span> ConnectionString = <span>@&#8221;Data Store = &#8216;isostore:/ReaderDB.sdf&#8217;; File Mode = &#8216;Read Write&#8217;;&#8221;</span>;
    *
    *<span>// Разрешает процессам производить только чтение из БД.</span>
    *<span>string</span> ConnectionString = <span>@&#8221;Data Store = &#8216;isostore:/ReaderDB.sdf&#8217;; File Mode = &#8216;Read Only&#8217;;&#8221;</span>;
    *
    *<span>// Разрешает только одному процессу читать и писать в БД.</span>
    *<span>string</span> ConnectionString = <span>@&#8221;Data Store = &#8216;isostore:/ReaderDB.sdf&#8217;; File Mode = &#8216;Exclusive&#8217;;&#8221;</span>;
    *
    *<span>// Разрешает всем процессам читать из БД, но только один может писать.</span>
    *<span>string</span> ConnectionString = <span>@&#8221;Data Store = &#8216;isostore:/ReaderDB.sdf&#8217;; File Mode = &#8216;Shared Read&#8217;;&#8221;</span>;
</ol>


<p><strong>Максимальный размер БД</strong>
Размер указывается в мегабайтах, в пределах от 32 до 512.</p>

<ol start="22">
    *<span>string</span> ConnectionString = <span>@&#8221;Data Store = &#8216;isostore:/ReaderDB.sdf&#8217;; Max Database Size = 128;&#8221;</span>;
</ol>


<p><strong>Максимальный размер буфера</strong>
Указывается в килобайтах, в пределах от 384 до 5120.</p>

<ol start="24">
    *<span>string</span> ConnectionString = <span>@&#8221;Data Store = &#8216;isostore:/ReaderDB.sdf&#8217;; Max Buffer Size = 2048;&#8221;</span>;
</ol>


<p><strong>Культура</strong>
Параметр культуры указывается в виде &ldquo;язык-Страна&rdquo;, например, &ldquo;ru-RU&rdquo; для русского языка в России</p>

<ol start="20">
    *<span>string</span> ConnectionString = <span>@&#8221;Data Store = &#8216;isostore:/ReaderDB.sdf&#8217;; Culture Identifier = ru-RU;&#8221;</span>;
</ol>


<p><strong>Чувствительность к регистру</strong>
В параметрах можно так же указать, будет ли база данных чувствительна к регистру.</p>

<ol start="20">
    *<span>string</span> ConnectionString = <span>@&#8221;Data Store = &#8216;isostore:/ReaderDB.sdf&#8217;; Case Sensitive = true;&#8221;</span>;
</ol>


<p><span>Заключение</span>
Надеюсь, вам удалось разобраться с помощью моей статьи в работе с базами данных в Windows Phone 7. Как вы видите, создание и подключение базы &ndash; данных достаточно простые операции, и, используя сгенерированный с помощью sqlmetal класс, можно разобраться в структуре и основных принципах работы. После этого уже ничто не помешает вам редактировать структуру базы данных в коде и создавать новые проекты, использующие БД, с нуля.</p>

<p><span>Не забывайте подписываться на мой твиттер: <a href="http://twitter.com/#!/ponfius">@ponfius</a>. И, как обычно, <strong>stay tuned :)</strong></span>
<strong>
</strong>
<i>В статье использовалась информация с блога <a href="http://www.kunal-chowdhury.com/">http://www.kunal-chowdhury.com</a></i></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SilverLife]]></title>
    <link href="http://Ponf.github.io/blog/2011/09/SilverLife/"/>
    <updated>2011-09-30T12:54:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/09/SilverLife</id>
    <content type="html"><![CDATA[<p>Моё новое приложение <strong>SilverLife</strong> опубликовали в <strong>Marketplace</strong>! :)
Скачать его можно по ссылке: <a href="http://windowsphone.com/s?appid=e7c4488f-137d-4401-a625-bac86ad61ba6">http://windowsphone.com/s?appid=e7c4488f-137d-4401-a625-bac86ad61ba6</a>
Посмотреть через браузер: <a href="http://www.windowsphone.com/en-US/apps/e7c4488f-137d-4401-a625-bac86ad61ba6">http://www.windowsphone.com/en-US/apps/e7c4488f-137d-4401-a625-bac86ad61ba6</a></p>

<p><a href="http://1.bp.blogspot.com/-vKtCIU8fxXg/ToV9UqgATnI/AAAAAAAAABM/WZXkqdiWfjA/s1600/MP_icon_173.png"><img alt="" src="http://1.bp.blogspot.com/-vKtCIU8fxXg/ToV9UqgATnI/AAAAAAAAABM/WZXkqdiWfjA/s1600/MP_icon_173.png" border="0" /></a></p>

<!--more-->


<p>
SilverLife &ndash; моя реализации игры Жизнь (The Game of Life), придуманной английским математиком Джоном Конвеем в 1970 году.
Игра относится к типу &ldquo;zero-player&rdquo;, то есть игроку нужно лишь указать начальное состояние, а дальше игра сделает всё сама.</p>

<p>Место действия этой игры — «вселенная» — это размеченная на клетки поверхность тора.. Каждая клетка на этой поверхности может находиться в двух состояниях: быть живой или быть мёртвой. Клетка имеет восемь соседей. Распределение живых клеток в начале игры называется первым поколением. Каждое следующее поколение рассчитывается на основе предыдущего по таким правилам:</p>

<ul>
    *пустая (мёртвая) клетка, рядом с которой ровно три живые клетки, оживает;
    *если у живой клетки есть две или три живые соседки, то эта клетка продолжает жить; в противном случае (если соседей меньше двух или больше трёх) клетка умирает (от «одиночества» или от «перенаселённости»).
</ul>


<p>Игрок не принимает прямого участия в игре, а лишь расставляет начальную конфигурацию «живых» клеток, которые затем взаимодействуют согласно правилам уже без его участия.</p>

<p>Эти простые правила приводят к огромному разнообразию форм, которые могут возникнуть в игре.
В версии 1.1, которую я сегодня засабмитил в <strong>Marketplace, </strong>появились пресеты из известных начальных форм (Glaider, GlaiderGun, Acorn и некоторые другие). Ждите апдейта в начале следующей недели :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Конференция Tech∙Ed Russia 2011]]></title>
    <link href="http://Ponf.github.io/blog/2011/09/Konferentciia-TechEd-Russia-2011/"/>
    <updated>2011-09-30T10:59:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/09/Konferentciia-TechEd-Russia-2011</id>
    <content type="html"><![CDATA[<p><a href="http://www.microsoft.com/ru-ru/events/teched/SignIn"><img alt="" src="http://2.bp.blogspot.com/-3NqeVpZQtyI/ToVolntQXGI/AAAAAAAAABI/nn1ySa-WOBQ/s1600/1007.50070_3_3FE0EF96.jpg" border="0" /></a>
<span><strong>Что: <a href="http://www.microsoft.com/ru-ru/events/teched/">Tech∙Ed Russia 2011</a></strong> - крупнейшая технологическая конференция в СНГ, а также Центральной и Восточной Европе.</span>
<span><strong>Где: </strong>Россия, Москва</span>
<span><strong>Когда:</strong> 9-10 ноября 2011 года</span>
<span><strong>Чего ждать:</strong></span></p>

<ul>
    *<span>160 докладов и интерактивных сессий в 15 треках;</span>
    *<span>более 3000 участников;</span>
    *<span>докладчики и эксперты международного уровня;</span>
    *<span>возможности общения и профессиональных контактов;</span>
    *<span>лабораторные работы для практического знакомства с продуктами и технологиями.</span>
</ul>




<!--more-->


<p>
<span>
</span></p>

<p><span>Пленарный доклад</span></p>

<p><span> </span></p>

<p><strong><span>С. Сомасегар (S. Somasegar)</span></strong></p>

<p>Корпоративный вице-президент Microsoft, Подразделение Разработки (Developer Division), создающее всем известные инструменты и технологии платформы разработки, такие как Visual Studio, .NET Framework, Silverlight и Expression Studio. Сомасегар также отвечает за разработку Internet Information Server (IIS), Media Server и Commerce Server. Его команда разрабатывает и поддерживает платформу и инфраструктуру сайтов microsoft.com, включая MSDN и TechNet.</p>

<p><span><strong>Кевин Тернер (Kevin Turner)</strong></span></p>

<p>Главный операционный директор корпорации Microsoft, отвечающий за стратегические и операционные направления в продажах, маркетинге и сервисах Microsoft по всему миру. Помимо продаж и маркетинговых программ, Тернер управляет структурой по продаже рекламы он-лайн и корпоративной поддержке, включая поддержку заказчиков и продуктов, брэндинг, рекламу, PR, маркетинговые исследования и маркетинг взаимоотношений.</p>

<p><span>Технологические треки</span></p>

<p>Среди прочих докладчиков нельзя обойти вниманием всемирно известных специалистов в области информационной безопасности <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/TomasShinder">Томаса Шиндера (Thomas W. Shinder)</a> с докладами <a href="http://www.microsoft.com/ru-ru/events/teched/Catalog/Bezopasnost-chastnogo-oblaka-na-osnove-tehnologij-Microsoft">&ldquo;Безопасность частного облака на основе технологий Microsoft&rdquo;</a> и <a href="http://www.microsoft.com/ru-ru/events/teched/Catalog/Bezopasnyj-perehod-na-IPv6-DirectAccess-i-UAG">&ldquo;Безопасный переход на IPv6, DirectAccess и UAG&rdquo;</a>, как и трек <a href="http://www.microsoft.com/ru-ru/events/teched/Catalog?tId=b964f259-3381-4070-abbe-e93a6c0c8581">&ldquo;Информационная безопасность&rdquo;</a> в целом, в котором примут участие такие специалисты, как <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/PolYanushkevich">Пола Янушкевич</a>, <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/AndreyBeshkov">Андрей Бешков</a>, <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/AlexanderTrofimov">Александр Трофимов</a> и многие другие.</p>

<p>Особого интереса заслуживает трек <a href="http://www.microsoft.com/ru-ru/events/teched/Catalog?sc=0&amp;amp;so=True&amp;amp;tId=72893a90-1be0-480c-8b2a-78abe00b7930">&ldquo;Мобильная платформа Windows Phone&rdquo;</a>. Поскольку продажи Windows Phone в России стартовали буквально неделю назад, этот трек будет очень интересен разработчикам, желающим попробовать себя в mobile development. Из интересных докладов рекомендую посетить <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/LarryLiberman">Лари Либермана</a> с докладом <a href="http://www.microsoft.com/ru-ru/events/teched/Catalog/Razvertyvanie-Vindovs-Phone-7-v-organizacii">&ldquo;Развертывание Windows Phone 7 в организации&rdquo;</a>, а так же, ставшие уже привычными, доклады <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/MichaelChernomordikov">Михаила Черномордикова</a>, <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/VladimirKolesnikov">Владимира Колесникова</a> и <a href="http://www.microsoft.com/ru-ru/events/teched/Speakers/KonstantinKichinskiy">Константина Кичинского</a>.</p>

<p>Получить актуальную информацию о первой конференции Tech∙Ed Russia 2011 можно по адресу <a href="http://www.msteched.ru/">http://www.msteched.ru</a>, а также подписавшись на хэш-тег твиттера <a href="http://twitter.com/#!/search?q=%23ruteched">#ruteched</a>.</p>

<p>Зарегистрироваться на первую конференцию Tech∙Ed Russia 2011 можно на официальном <a href="http://www.microsoft.com/ru-ru/events/teched/SignIn">сайте</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Создание игр на Silverlight + XNA. Часть 1. Отличия от XNA.]]></title>
    <link href="http://Ponf.github.io/blog/2011/09/Sozdanie-igr-na-Silverlight-%2B-XNA-Chastj-1-Otlichiia-ot-XNA/"/>
    <updated>2011-09-18T21:25:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/09/Sozdanie-igr-na-Silverlight-+-XNA-Chastj-1-Otlichiia-ot-XNA</id>
    <content type="html"><![CDATA[<p>С выходом обновления Mango для Windows Phone 7 и обновлением SDK, появилась возможность создавать приложения использующие обе технологии вместе. В этой статье я расскажу вам об этих возможностях и опишу процесс миграции с XNA на Silverlight+XNA.<span><strong>Что это даёт разработчику?</strong></span>
В первую очередь, у разработчиков игр появились следующие возможности:</p>

<ul>
    *Быстрое создание UI с использованием контролов из Silverlight
    *Удобная навигация между страницами, используя Navigation Service
    *Использование WebClient для интеграции различных социальных сервисов
    *Создание интерфейса в Expression Blend
</ul>


<p>Причем стоит заметить, что не все страницы должны совмещать в себе и Silverlight и XNA.</p>

<p>Итак, что же нужно сделать с готовым приложением, чтобы оно заработало в связке Silverlight + XNA?</p>

<!--more-->


<p></p>

<p><span><strong>1. Новый проект</strong></span></p>

<p>При создании нового проекта необходимо выбрать <strong>&ldquo;Windows Phone Silverlight and XNA Application&rdquo;</strong>. Создастся новый проект с 2мя страницами <strong>MainPage</strong> и <strong>GamePage</strong>.</p>

<ul>
    ***MainPage **- обычная страница Silverlight-приложения, на которой располагается кнопка &#8220;Change to game page&#8221;, при нажатии на которую, соответственно, открывается страница **GamePage**.
    ***GamePage **- как раз наша страница с XNA. Если посмотреть на содержание её xaml файла, то вместо разметки страницы там будет всего одна строчка:
</ul>




<ol start="16">
    *
<pre><span>&lt;!</span><span>--No XAML content is required as the page is rendered entirely with the XNA Framework--</span><span>&gt;</span></pre>
<pre></pre>
&nbsp;
</ol>


<p>&nbsp;</p>

<p>То есть &ldquo;XAML код не требуется, т.к. страница отображается полностью с помощью XNA Framework&rdquo;. Таким образом, когда мы захотим добавить контролы на эту страницу нам нужно будет заменить этот комментарий на наш код.
Теперь давайте рассмотрим файл GamePage.xaml.cs, в котором и находится вся логика нашего XNA приложения.</p>

<p><strong><span>2. Где размещаются конструкторы?</span></strong>
Теперь давайте по порядку разберемся где какие конструкторы находятся.</p>

<ul>
    *Конструктор **SharedGraphicsDeviceManager **(который в Silverlight/XNA приложении заменяет **GraphicsDeviceManager**) уже находится в файле **App.xaml**:
</ul>




<ol start="20">
    *<span><!--The SharedGraphicsDeviceManager is used to render with the XNA Graphics APIs--></span>
    *<span>&lt;</span><span>xna</span><span>:</span><span>SharedGraphicsDeviceManager</span><span> /&gt;</span>
</ol>




<ul>
    *Конструктор **ContentManager **находится в файле **App.xaml.cs**, но ничто не мешает вам создавать новые экземпляры **ContentManager**:
</ul>




<ol start="177">
    *<span>// Create the ContentManager so the application can load precompiled assets</span>
    *Content = <span>new</span> <span>ContentManager</span>(Services, <span>&#8220;Content&#8221;</span>);
</ol>




<ul>
    ***GameTimer **следит за прошедшим временем для каждой страницы в отдельности, он используется в методах рисования и обновления логики, но об этом немного позже.
    *Отключение фиксированных временных интервалов, за которое раньше отвечало свойство **IsFixedTimestep**, теперь можно организовать установив **UpdateInterval **в **TimeSpan.Zero**.
    *По умолчанию разрешение экрана составляет 480x800 пикселей в портретной ориентации и 800х480, если вы выставите ландшафтную ориентацию. Вы можете выставить разрешение для всего приложения в файле **App.xaml**, либо выставлять его для каждой страницы, вызывая **SetSharingMode(true)**.
</ul>


<p><span><strong>3. Где теперь загружать контент?</strong></span>
При совместном использовании XNA и Silverlight нет необходимости использовать отдельного метода для загрузки контента, как это было в чистом XNA приложении (<strong>LoadContent</strong>). В общем, вы можете загружать игровой контент когда хотите, однако вы должны убедиться, что во время загрузки <strong>графического </strong>контента приложение находится в режиме XNA рендеринга (вызывая метод <strong>SetSharingMode</strong>). Если вы попытаетесь загрузить графический контент во время Silverlight-рендеринга, то это вызовет исключение. Не графический контент вы можете загружать в любое время, когда у вас создан <strong>ContentManager</strong>.</p>

<p>В примерах контент обычно загружается в методе  OnNavigatedTo, после включения XNA рендеринга. Рекомендуется всегда загружать контент в данном методе, так как это безопасно, но это не обязательное требование.</p>

<p><span><strong>4. Циклы обновления и отрисовки</strong></span>
Давайте теперь рассмотрим поподробнее циклы обработки в нашем проекте и разберемся, как происходит обновление данных в логике приложения и его отрисовка.
В первую очередь мы создаём объект типа <strong>GameTimer </strong>и указываем частоту его увеличения. Величина 333333 &ndash; стандартная для WP7 и соответствует 30 кадрам в секунду.</p>

<ol start="24">
    *<span>public</span> GamePage()
    *{
    *    InitializeComponent();
    *
    *    <span>// Get the content manager from the application</span>
    *    contentManager = (<span>Application</span>.Current <span>as</span> <span>App</span>).Content;
    *
    *    <span>// Create a timer for this page</span>
    *    timer = <span>new</span> <span>GameTimer</span>();
    *    timer.UpdateInterval = <span>TimeSpan</span>.FromTicks(333333);
    *    timer.Update += OnUpdate;
    *    timer.Draw += OnDraw;
    *}
</ol>


<p>Затем в методе <strong>OnNavigatedTo </strong>мы указываем что делать при переходе на заданную страницу. В этом методе стоит загружать контент для приложения. Так как сейчас мы рассматриваем стандартный шаблон, то и загружать ничего не будем.</p>

<ol start="38">
    *<span>protected</span> <span>override</span> <span>void</span> OnNavigatedTo(<span>NavigationEventArgs</span> e)
    *{
    *    <span>// Set the sharing mode of the graphics device to turn on XNA rendering</span>
    *    <span>SharedGraphicsDeviceManager</span>.Current.GraphicsDevice.SetSharingMode(<span>true</span>);
    *
    *    <span>// Create a new SpriteBatch, which can be used to draw textures.</span>
    *    spriteBatch = <span>new</span> <span>SpriteBatch</span>(<span>SharedGraphicsDeviceManager</span>.Current.GraphicsDevice);
    *
    *    <span>// TODO: use this.content to load your game content here</span>
    *
    *    <span>// Start the timer</span>
    *    timer.Start();
    *
    *    <span>base</span>.OnNavigatedTo(e);
    *}
</ol>


<p>Далее идут самые интересные для нас методы &ndash; <strong>OnUpdate </strong>и <strong>OnDraw</strong>. В них мы задаём логику приложения (аналог <strong>Update </strong>в чистом XNA) и выводим изображение на экран (аналог, соответственно, метода <strong>Draw</strong>).</p>

<ol start="65">
    *<span>///</span><span>
</span>
    *<span>///</span><span> Allows the page to run logic such as updating the world,</span>
    *<span>///</span><span> checking for collisions, gathering input, and playing audio.</span>
    *<span>///</span>
    *<span>private</span> <span>void</span> OnUpdate(<span>object</span> sender, <span>GameTimerEventArgs</span> e)
    *{
    *    <span>// TODO: Add your update logic here</span>
    *}
    *
    *<span>///</span><span>
</span>
    *<span>///</span><span> Allows the page to draw itself.</span>
    *<span>///</span>
    *<span>private</span> <span>void</span> OnDraw(<span>object</span> sender, <span>GameTimerEventArgs</span> e)
    *{
    *    <span>SharedGraphicsDeviceManager</span>.Current.GraphicsDevice.Clear(<span>Color</span>.CornflowerBlue);
    *
    *    <span>// TODO: Add your drawing code here</span>
    *}
</ol>


<p>Основное преимущество использования GameTimer таким способом является то, что можно создавать различные таймеры для главного игрового цикла и для каких-то игровых процессов. Кроме того, поскольку GameTimer использует события, можно использовать несколько различных методов для рисования и обновления логики для различных частей игры.</p>

<p><strong><span>5. Логика, использующая GameTime</span></strong>
Если вы перестраиваете проект с чистого XNA на Silverlight+XNA, то при портировании логики, использующей <strong>GameTime </strong>могут возникнуть проблемы. Поскольку <strong>GameTime </strong>был тесно связан с <strong>Game Class</strong>, а в приложениях Silverlight+XNA используется интегрированная модель, то вам придется использовать <strong>GameTimerEventArgs</strong>, в которой хранится информация о времени, которая хранилась в <strong>GameTime</strong>.
Если ваше приложение использует <strong>GameTime </strong>для игровой логики, вы можете легко его портировать используя вместо <strong>Game Class</strong> (предоставляющего информацию о времени ранее) <strong>GameTime</strong>.
Было:</p>

<ol start="99">
    *<span>public</span> <span>void</span> Update(GameTime gameTime) {}
</ol>


<p>Стало:</p>

<ol start="99">
    *<span>public</span> <span>void</span> Update(TimeSpan elapsedTime, TimeSpan totalTime) {}
</ol>


<p>Учтите, что в данном случае под игровой логикой подразумевается подразумевается какая-то ваша логика, из дополнительных классов вашего приложения. Основной же цикл обработки (<strong>Update </strong>или <strong>OnUpdate</strong>) всё равно должны принимать либо <strong>GameTime </strong>(для приложений на XNA, использующих <strong>Game Class</strong>), либо <strong>GameTimeEventArgs </strong>(для приложений на Silverlight+XNA).</p>

<p><strong><span>6. Игровые компоненты</span></strong>
Что делать с игровыми компонентами, если приложение, основанное на <strong>Game Class</strong> использовало <strong>GameComponents </strong>для реализации логики? К сожалению, GameComponents так же как и <strong>GameTime </strong>относятся к <strong>Game Class</strong>, поэтому их невозможно использовать в приложении Silverlight+XNA.
Существует несколько способов решения этой проблемы, самый простой из которых &ndash; сделать все методы публичными. В таком случае ваше приложение может просто создать список объектов и использовать их по мере необходимости, обращаясь к ним непосредственно по мере необходимости. Плюс данного способа &ndash; в простоте, так как вам не придется переписывать много кода. Минус же в том, что вы усложните логику приложения, возложив на страницы лишнюю работу.</p>

<p>Другой способ &ndash; модифицировать ваши методы таким образом, чтобы они подписывались на события <strong>Update </strong>и <strong>Draw</strong>. Это позволит вам создавать объекты, которые смогут подключаться к существующим циклам обновления и рисования, но это тесно свяжет ваш код с XNA+Silverlight фрэймворком и могут возникнуть проблемы, если вы захотите использовать этот код для Windows/XBox 360.</p>

<p>Последним, самым лучшим решением, будет переопределение базовых типов и интерфейсов для <strong>GameComponent</strong>. Это потребует большего понимания принципов работы <strong>GameComponent</strong>, но позволит вам переносить код с Windows Phone на Windows и XBox.</p>

<p><strong>В следующей статье мы создадим первое приложение, использующее компоненты Silverlight и графику XNA на одной странице.</strong></p>

<p>Материал по миграции приложений &ndash; вольный перевод с дополнениями инструкции с сайта <a href="http://create.msdn.com/en-US/education/catalog/article/migration_guide_moving_to_silverlight_xna">create.msdn.com</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Вечерняя школа по Windows Phone 7]]></title>
    <link href="http://Ponf.github.io/blog/2011/09/Vecherniaia-shkola-po-Windows-Phone-7/"/>
    <updated>2011-09-06T17:06:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/09/Vecherniaia-shkola-po-Windows-Phone-7</id>
    <content type="html"><![CDATA[<p>В четверг 8 сентября в офисе Microsoft начинает свою работу вечерняя школа, посвященная разработке под Windows Phone 7.Занятия будут проходить 8, 15, 22 и 29 сентября в офисе Microsoft в Крылатском.
Начало занятий &ndash; 19:00, с собой приносить ноутбук с установленными <a href="http://create.msdn.com/en-us/home/getting_started">средствами разработки</a>.</p>

<p>Официальный анонс в <a href="http://blogs.msdn.com/b/stasus/archive/2011/09/05/windows-phone-evening-school.aspx">блоге Стаса Павлова</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Шпаргалка по сертификации приложений на Windows Phone 7]]></title>
    <link href="http://Ponf.github.io/blog/2011/08/Shpargalka-po-sertifikatcii-prilozhenii-na-Windows-Phone-7/"/>
    <updated>2011-08-31T10:45:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/08/Shpargalka-po-sertifikatcii-prilozhenii-na-Windows-Phone-7</id>
    <content type="html"><![CDATA[<p>Всем привет! Сегодня я представлю вашему вниманию вольный перевод статьи Peter Kuhn <a href="http://www.silverlightshow.net/items/Windows-Phone-7-Application-Certification-Cheat-Sheet.aspx">&ldquo;Windows Phone 7 Application Certification Cheat Sheet&rdquo;</a>, в которой описываются основные моменты, на которые стоит обратить внимание перед публикацией приложения в Marketplace.</p>

<h2>Приложение в целом</h2>

<p>Перечислены некоторые основные требования к приложениям:</p>

<!--more-->


<p></p>

<ul>
<li>В приложении должны быть: название, номер версии и контакты техподдержки (<a href="http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92">5.6</a>.aspx));</li>
<li>Приложение должно быть полностью работоспособным после установки из Marketplace (не может требовать какой-то дополнительной оплаты для активации, разблокировки и т.п.) (<a href="http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92">2.1</a>.aspx));</li>
<li>Приложение не должно продавать или рекламировать тарифные планы мобильных операторов (<a href="http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92">2.2</a>.aspx));</li>
<li>Если приложению требуется скачать большой объем данных, оно должно предупреждать об этом в описании (<a href="http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92">2.5</a>.aspx));</li>
<li>Вся реклама в приложении должна соответствовать <a href="http://go.microsoft.com/fwlink/?LinkID=216913">Microsoft Advertising Creative Acceptance Policy Guide</a> (<a href="http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92">2.4</a>.aspx));</li>
<li>Если в приложении предусмотрено общение между людьми, приложение должно удостовериться в том, что пользователю больше 13 лет (<a href="http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92">2.6</a>.aspx));</li>
<li>Если в приложении планируется использовать личную информацию о пользователе необходимо: предоставить пользователю вашу политику конфиденциальности, спросить у пользователя разрешение на использование его информации и предоставить механизм, благодаря которому пользователь сможет в любой момент отказаться (<a href="http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92">2.8</a>.aspx));</li>
<li>Приложение должно быть чем-то большим, чем просто запуск веб-страницы (<a href="http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92">2.10</a>.aspx));</li>
<li>Разработчик должен убедиться, что все элементы управления видны и легко читаемые со всеми темами телефона (темной/светлой) (<a href="http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92">5.5.2</a>.aspx)).</li>
</ul>


<p><span> </span></p>

<p><span><strong>XAP пакет (<a href="http://msdn.microsoft.com/en-us/library/hh184844(v=VS.92">4.1.1</a>.aspx))</strong></span></p>

<p>В требованиях к пакету, содержащему ваше приложение, есть следующие пункты:</p>

<p><strong>Максимальный размер:</strong> 225 МБ;</p>

<p><strong>Требуемое содержимое:</strong></p>

<ul>
    *WMAppManifest.xml
    *AppManifest.xml
    *Файлы для сборки, указанные в AppManifest.xml
    *Большая и маленькая иконки приложения
</ul>


<p><strong>Требования к <span> </span>WMAppManifest.xml:</strong></p>

<ul>
    *Поле названия не должно быть пустым
    *Название должно совпадать с названием, указанным при загрузке приложения в Marketplace
</ul>


<p>Пожалуйста учтите, что эти требования иногда меняются. Так, ранее размер файлов не должен был превышать 400 МБ.</p>

<p><span><strong>Проверка кода</strong></span></p>

<p>Чтобы успешно пройти проверку кода приложение должно соответствовать следующим требованиям:</p>

<ul>
    *Приложение не должно вызывать нативный код с помощью P/Invoke или COM-совместимостей ([4.2.2](http://msdn.microsoft.com/en-us/library/hh184844(v=VS.92).aspx));
    *Приложение должно быть собрано в режиме &#8220;Release&#8221;; не должна содержаться отладочная информация ([4.2.3](http://msdn.microsoft.com/en-us/library/hh184844(v=VS.92).aspx));
    *Приложение не должно копировать функции телефона ([4.2.4](http://msdn.microsoft.com/en-us/library/hh184844(v=VS.92).aspx)); (?)
    *Приложение не должно использовать XNA Game или Graphics одновременно с System.Windows.Controls ([4.2.5](http://msdn.microsoft.com/en-us/library/hh184844(v=VS.92).aspx)).
</ul>


<p><span> </span></p>

<p><span><strong>Возможности телефона (<a href="http://msdn.microsoft.com/en-us/library/hh184844(v=VS.92">4.3</a>.aspx))</strong></span></p>

<p>Возможности, которые использует приложение, содержатся в файле WMAppManifest.xml и автоматически определяются во время отправки приложения в Marketplace.</p>

<ul>
    *Приложение должно работать с использованием автоматически распознанных возможностей. Майкрософт рекомендует вам использовать [Capability Detection Tool](http://msdn.microsoft.com/en-us/library/gg180730(v=VS.92).aspx) для проверки работоспособности с возможностями, распознанными во время отправки приложения ([4.3](http://msdn.microsoft.com/en-us/library/hh184844(v=VS.92).aspx)).
</ul>


<p><span> </span></p>

<p><span><strong>Языки</strong></span></p>

<p>Каждое приложение должно поддерживать как минимум один из перечисленных языков (<a href="http://msdn.microsoft.com/en-us/library/hh184844(v=VS.92">4.4</a>.aspx)):</p>

<ul>
    *Английский
    *Французский
    *Итальянский
    *Немецкий
    *Испанский
</ul>


<p>Так же есть дополнительные требования:</p>

<ul>
    *Должен быть установлен нейтральный язык ([4.4](http://msdn.microsoft.com/en-us/library/hh184844(v=VS.92).aspx));
    *Для каждого поддерживаемого языка должны быть переведены описание и пользовательский интерфейс <span> </span>([5.5.1](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx)).
</ul>


<p><span><strong>Иконки/изображения (<a href="http://msdn.microsoft.com/en-us/library/hh184844(v=VS.92">4.5, 4.6, 4.7</a>.aspx))</strong></span></p>

<p>Для более детального изучения иконографии Windows Phone 7 вы можете изучить статью
<a href="http://www.silverlightshow.net/items/Windows-Phone-7-Iconography-.aspx">Windows Phone 7 Iconography</a>, здесь же находится кратка информация по изображениям и иконкам:</p>

<table border="1" cellspacing="0" cellpadding="2">
<tbody>
<tr>
<td valign="top">Изображение</td>
<td valign="top">Обязательно</td>
<td valign="top">Формат</td>
<td valign="top">Прозрачный фон</td>
<td valign="top">Размер</td>
</tr>
<tr>
<td valign="top">Маленькая иконка приложения</td>
<td valign="top">Да</td>
<td valign="top">PNG</td>
<td valign="top">Да</td>
<td valign="top">62x62</td>
</tr>
<tr>
<td valign="top">Большая иконка приложения</td>
<td valign="top">Да</td>
<td valign="top">PNG</td>
<td valign="top">Да</td>
<td valign="top">173x173</td>
</tr>
<tr>
<td valign="top">Маленькая иконка для Marketplace</td>
<td valign="top">Да</td>
<td valign="top">PNG</td>
<td valign="top">Нет</td>
<td valign="top">99x99</td>
</tr>
<tr>
<td valign="top">Большая иконка для Marketplace</td>
<td valign="top">Да</td>
<td valign="top">PNG</td>
<td valign="top">Нет</td>
<td valign="top">173x173</td>
</tr>
<tr>
<td valign="top">Большая иконка для Marketplace для PC</td>
<td valign="top">Да</td>
<td valign="top">PNG</td>
<td valign="top">Нет</td>
<td valign="top">200x200</td>
</tr>
<tr>
<td valign="top">Задний фон</td>
<td valign="top">Нет</td>
<td valign="top">PNG</td>
<td valign="top">Нет</td>
<td valign="top">1000x800</td>
</tr>
<tr>
<td valign="top">Скриншот приложения</td>
<td valign="top">Минимум 1, максимум 8</td>
<td valign="top">PNG</td>
<td valign="top">Нет</td>
<td valign="top">480x800</td>
</tr>
<tr>
<td valign="top">Иконка для Application Bar</td>
<td valign="top">Нет</td>
<td valign="top">PNG</td>
<td valign="top">Да</td>
<td valign="top">48x48 (Содержимое 26x26)</td>
</tr>
</tbody>
</table>


<p>Тайлы и иконки должны соответствовать приложению (<a href="http://msdn.microsoft.com/en-us/library/hh184844(v=VS.92">4.7</a>.aspx)).</p>

<p><span><strong>Временные рамки</strong></span>
Присутствуют следующие специальные временнЫе ограничения:</p>

<ul>
    *Приложение должно появляться на экране в течении 5 секунд (экрана заставки достаточно) ([5.2.1 – 5.2.3](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *Приложение должно быть доступно для пользовательского ввода не позднее, чем через 20 секунд после запуска ([5.2.1 – 5.2.3](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *При блокировке интерфейса более чем на 3 секунды необходимо показывать Progress Bar или Busy Indicator ([5.1.3](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx)).
</ul>


<p><span><strong>Кнопка Назад</strong></span>
При использовании кнопки Назад необходимо учитывать следующие требования:</p>

<ul>
    *При нажатии на кнопку Назад приложение должно переходить на предыдущую страницу ([5.2.4, 5.2.4.1](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *Нажатие должно закрывать диалоговое/контекстное меню и оставаться на текущей странице ([5.2.4.3](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *Если нажатие происходит на первой странице приложения, оно должно закрыться ([5.2.4.2](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *Для игр: во время игры нажатие на кнопку Назад может вызывать меню паузы ([5.2.4.4](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx)).
</ul>


<p>Кнопку Назад нельзя использовать для каких-либо функций, не обозначенных выше.</p>

<p><span><strong>Надежность, безопасность и прочее</strong></span>
Следующие требования связаны с безопасностью, надежностью и встроенными в телефон функциями:</p>

<ul>
    *Приложение должно работать на любом устройстве с Windows Phone 7 ([5.1.1](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *Приложение не должно неожиданно закрываться из-за необработанных исключений или других причин ([5.1.2, 5.3.3](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *При обработке ошибок приложение должно предоставлять понятные пользователю сообщения ([5.1.2](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *Приложение не должно препятствовать использованию функций телефона (звонки, SMS/MMS) ([5.3.1](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *Приложение должно продолжать работу после использования функций телефона (звонки, SMS/MMS) ([5.3.2](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *Приложение не должно содержать вирусы, вредоносный код или вредоносные функции ([5.4.1](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *Приложение не должно запускать небезопасный код или пытаться обойти механизм песочницы ([5.4.2, 5.4.3](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *Приложение не должно ставить под угрозу безопасность телефона или Marketplace ([2.3](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx));
    *Приложение не должно использовать более 90 МБ оперативной памяти в телефонах с 256 (или менее) МБ ([5.2.5](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx));
    *Приложение не должно использовать Trial API в цикле (например, игровом). То есть API должен вызываться редко, а значение им возвращенное - кэшироваться ([5.2.6](http://msdn.microsoft.com/en-us/library/hh184840(v=VS.92).aspx)).
</ul>


<p><span><strong>Приложения, использующие местоположение</strong></span>
К приложениям, использующим местоположение устройства пользователя предъявляются следующие требования:</p>

<ul>
    *Приложение должно использовать Microsoft Location Service API ([2.7.1](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx));
    *Информацию о местоположении можно использовать только для функций самого приложения (нельзя использовать для показа таргетированной рекламы) ([2.7.7](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx));
    *Приложение должно предупреждать пользователя об использовании данных о его местоположении ([2.7.2](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx));
    *Приложение должно предоставлять возможность отключения использования данных о местоположении ([2.7.3](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx));
    *Приложение должно обеспечивать возможность отказа от использования данных о местоположении, если эти данные станут доступны третьим лицам ([2.7.4](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx));
    *Приложение должно защищать полученные данные о местоположении от несанкционированного доступа ([2.7.8](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx));
    *Если сервис определения местоположения недоступен, приложение должно оставаться отзывчивым (продолжать реагировать на пользовательский ввод) ([6.1](http://msdn.microsoft.com/en-us/library/hh184838(v=VS.92).aspx));
    *Приложение не должно вмешиваться в системные функции, связанные с Location Service API <span> </span>([2.7.5](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx));
    *Приложение не должно нарушать работу устройства, делая Location Service недоступным ([2.7.6](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx), [6.1](http://msdn.microsoft.com/en-us/library/hh184838(v=VS.92).aspx)).
</ul>


<p><span><strong>Служба Push-уведомлений</strong></span>
Для использования Push-уведомлений ваше приложение должно удовлетворять следующим требованиям:</p>

<ul>
    *У всех используемых Push-уведомлений должно быть описание ([2.9.1](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx));
    *Приложение должно спросить у пользователя разрешение на использование Push-уведомлений и предоставить механизм, благодаря которому пользователь сможет в любой момент отказаться от них <span> </span>([2.9.1](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx));
    *Запрещается злоупотреблять Push-уведомлениями ([2.9.2](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx));
    *Не разрешается использовать Push-уведомления в отношении вопросов жизни и смерти или других критически важных данных, изменяющихся в реальном времени ([2.9.3](http://msdn.microsoft.com/en-us/library/hh184841(v=VS.92).aspx));
    *Приложение должно предоставить возможность самостоятельно отключить всплывающие уведомления ([6.2.1](http://msdn.microsoft.com/en-us/library/hh184838(v=VS.92).aspx));
    *Приложение должно спрашивать разрешение для использования всплывающих уведомлений ([6.2.2](http://msdn.microsoft.com/en-us/library/hh184838(v=VS.92).aspx)).
</ul>


<p>На этом основные требования подходят к концу. С полным перечнем требований вы можете ознакомиться по ссылке: <a href="http://msdn.microsoft.com/en-us/library/hh184843(v=VS.92">Application Certification Requirements for Windows Phone</a>.aspx).</p>

<p><strong>Всем удачного прохождения сертификации! :)</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Виды InputScope в Windows Phone 7]]></title>
    <link href="http://Ponf.github.io/blog/2011/08/Vidy-InputScope-v-Windows-Phone-7/"/>
    <updated>2011-08-24T19:37:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2011/08/Vidy-InputScope-v-Windows-Phone-7</id>
    <content type="html"><![CDATA[<p>Windows Phone 7 позволяет разработчикам в зависимости от их целей показывать различные раскладки софтварной клавиатуры пользователям. Реализуется это c помощью свойства <strong>InputScope.</strong></p>

<p><TextBox Height="300" Width="440" VerticalAlignment="Top" InputScope="Text" /></p>

<p>К сожалению при выборе свойства InputScope Intellisense не работает. Для того чтобы устранить эту неприятность достаточно использовать следующий код:</p>

<figure class='code'><figcaption><span>Использование Input Scope</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;TextBox</span> <span class="na">Height=</span><span class="s">&quot;300&quot;</span> <span class="na">Width=</span><span class="s">&quot;440&quot;</span> <span class="na">VerticalAlignment=</span><span class="s">&quot;Top&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;TextBox.InputScope&gt;</span>
</span><span class='line'>      <span class="nt">&lt;InputScope&gt;</span>
</span><span class='line'>          <span class="nt">&lt;InputScopeName</span> <span class="na">NameValue=</span><span class="s">&quot;Text&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/InputScope&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/TextBox.InputScope&gt;</span>
</span><span class='line'><span class="nt">&lt;/TextBox&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p></p>

<p>В таком случае вы увидите все возможные варианты свойства InputScope (коих больше 60):</p>

<ol>
<li>AddressCity</li>
<li>AddressCountryName</li>
<li>AddressCountryShortName</li>
<li>AddressStateOrProvince</li>
<li>AddressStreet</li>
<li>AlphanumericFullWidth</li>
<li>AlphanumericHalfWidth</li>
<li>ApplicationEnd</li>
<li>Bopomofo</li>
<li>Chat</li>
<li>CurrencyAmount</li>
<li>CurrencyAmountAndSymbol</li>
<li>CurrencyChinese</li>
<li>Date</li>
<li>DateDay</li>
<li>DateDayName</li>
<li>DateMonth</li>
<li>DateMonthName</li>
<li>DateYear</li>
<li>Default</li>
<li>Digits</li>
<li>EmailNameOrAddress</li>
<li>EmailSmtpAddress</li>
<li>EmailUserName</li>
<li>EnumString</li>
<li>FileName</li>
<li>FullFilePath</li>
<li>Hanja</li>
<li>Hiragana</li>
<li>KatakanaFullWidth</li>
<li>KatakanaHalfWidth</li>
<li>LogOnName</li>
<li>Maps</li>
<li>NameOrPhoneNumber</li>
<li>Number</li>
<li>NumberFullWidth</li>
<li>OneChar</li>
<li>Password</li>
<li>PersonalFullName</li>
<li>PersonalGivenName</li>
<li>PersonalMiddleName</li>
<li>PersonalNamePrefix</li>
<li>PersonalNameSuffix</li>
<li>PersonalSurname</li>
<li>PhraseList</li>
<li>PostalAddress</li>
<li>PostalCode</li>
<li>Private</li>
<li>RegularExpression</li>
<li>Search</li>
<li>Srgs</li>
<li>TelephoneAreaCode</li>
<li>TelephoneCountryCode</li>
<li>TelephoneLocalNumber</li>
<li>TelephoneNumber</li>
<li>Text</li>
<li>Time</li>
<li>TimeHour</li>
<li>TimeMinorSec</li>
<li>Url</li>
<li>Xml</li>
<li>Yomi</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[О сколько нам работы чудной приносит ум начальства скудный...]]></title>
    <link href="http://Ponf.github.io/blog/2010/10/O-skoljko-nam-raboty-chudnoi-prinosit-um-nachaljstva-skudnyi/"/>
    <updated>2010-10-21T21:52:00+04:00</updated>
    <id>http://Ponf.github.io/blog/2010/10/O-skoljko-nam-raboty-chudnoi-prinosit-um-nachaljstva-skudnyi</id>
    <content type="html"><![CDATA[<blockquote><p>Здесь стоит напомнить, что Форд, первый раз повстречавшись с людьми, выдвинул теорию, чтобы объяснить их забавную привычку постоянно говорить и повторять самые-самые очевидные вещи, типа &ldquo;Прекрасная погода&rdquo;, или &ldquo;Как ты вырос&rdquo;, или &ldquo;Ясно. Значит, мы погибнем&rdquo;.</p>

<p>С начала он решил, что если люди не будут упражнять губы, у них зарастут рты.
Понаблюдав за ними несколько месяцев, он выдвинул вторую теорию: &ldquo;Если люди не будут упражнять губы, у них начнут работать мозги&rdquo;.</p></blockquote>

<p>Адамс Дуглас, &ldquo;Ресторан &#8220;Конец Вселенной&rdquo;&#8221;</p>
]]></content>
  </entry>
  
</feed>
